// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: User.proto
package com.wali.live.proto.User;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class UserNobleInfo extends Message<UserNobleInfo, UserNobleInfo.Builder> {
  public static final ProtoAdapter<UserNobleInfo> ADAPTER = new ProtoAdapter_UserNobleInfo();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_NOBLELEVEL = 0;

  /**
   * 贵族id 100表示子爵 200表示伯爵 300表示侯爵 400表示公爵 500表示国王
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer nobleLevel;

  public UserNobleInfo(Integer nobleLevel) {
    this(nobleLevel, ByteString.EMPTY);
  }

  public UserNobleInfo(Integer nobleLevel, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.nobleLevel = nobleLevel;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.nobleLevel = nobleLevel;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserNobleInfo)) return false;
    UserNobleInfo o = (UserNobleInfo) other;
    return unknownFields().equals(o.unknownFields())
        && nobleLevel.equals(o.nobleLevel);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + nobleLevel.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", nobleLevel=").append(nobleLevel);
    return builder.replace(0, 2, "UserNobleInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return UserNobleInfo.ADAPTER.encode(this);
  }

  public static final UserNobleInfo parseFrom(byte[] data) throws IOException {
    UserNobleInfo c = null;
       c = UserNobleInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 贵族id 100表示子爵 200表示伯爵 300表示侯爵 400表示公爵 500表示国王
   */
  public Integer getNobleLevel() {
    if(nobleLevel==null){
        return DEFAULT_NOBLELEVEL;
    }
    return nobleLevel;
  }

  /**
   * 贵族id 100表示子爵 200表示伯爵 300表示侯爵 400表示公爵 500表示国王
   */
  public boolean hasNobleLevel() {
    return nobleLevel!=null;
  }

  public static final class Builder extends Message.Builder<UserNobleInfo, Builder> {
    public Integer nobleLevel;

    public Builder() {
    }

    /**
     * 贵族id 100表示子爵 200表示伯爵 300表示侯爵 400表示公爵 500表示国王
     */
    public Builder setNobleLevel(Integer nobleLevel) {
      this.nobleLevel = nobleLevel;
      return this;
    }

    @Override
    public UserNobleInfo build() {
      return new UserNobleInfo(nobleLevel, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserNobleInfo extends ProtoAdapter<UserNobleInfo> {
    public ProtoAdapter_UserNobleInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, UserNobleInfo.class);
    }

    @Override
    public int encodedSize(UserNobleInfo value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.nobleLevel)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserNobleInfo value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.nobleLevel);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserNobleInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setNobleLevel(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserNobleInfo redact(UserNobleInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
