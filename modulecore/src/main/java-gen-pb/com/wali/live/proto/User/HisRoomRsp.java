// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: User.proto
package com.wali.live.proto.User;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class HisRoomRsp extends Message<HisRoomRsp, HisRoomRsp.Builder> {
  public static final ProtoAdapter<HisRoomRsp> ADAPTER = new ProtoAdapter_HisRoomRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RETCODE = 0;

  public static final String DEFAULT_LIVEID = "";

  public static final String DEFAULT_SHAREURL = "";

  public static final String DEFAULT_VIEWURL = "";

  public static final Integer DEFAULT_TYPE = 0;

  /**
   * 0:表示成功
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer retCode;

  /**
   * 房间号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String liveId;

  /**
   * 分享的url
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String shareUrl;

  /**
   * 完整的观看url
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String viewUrl;

  /**
   * 类型，0公开，1私密
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer type;

  public HisRoomRsp(Integer retCode, String liveId, String shareUrl, String viewUrl, Integer type) {
    this(retCode, liveId, shareUrl, viewUrl, type, ByteString.EMPTY);
  }

  public HisRoomRsp(Integer retCode, String liveId, String shareUrl, String viewUrl, Integer type,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.retCode = retCode;
    this.liveId = liveId;
    this.shareUrl = shareUrl;
    this.viewUrl = viewUrl;
    this.type = type;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.retCode = retCode;
    builder.liveId = liveId;
    builder.shareUrl = shareUrl;
    builder.viewUrl = viewUrl;
    builder.type = type;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof HisRoomRsp)) return false;
    HisRoomRsp o = (HisRoomRsp) other;
    return unknownFields().equals(o.unknownFields())
        && retCode.equals(o.retCode)
        && Internal.equals(liveId, o.liveId)
        && Internal.equals(shareUrl, o.shareUrl)
        && Internal.equals(viewUrl, o.viewUrl)
        && Internal.equals(type, o.type);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + retCode.hashCode();
      result = result * 37 + (liveId != null ? liveId.hashCode() : 0);
      result = result * 37 + (shareUrl != null ? shareUrl.hashCode() : 0);
      result = result * 37 + (viewUrl != null ? viewUrl.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", retCode=").append(retCode);
    if (liveId != null) builder.append(", liveId=").append(liveId);
    if (shareUrl != null) builder.append(", shareUrl=").append(shareUrl);
    if (viewUrl != null) builder.append(", viewUrl=").append(viewUrl);
    if (type != null) builder.append(", type=").append(type);
    return builder.replace(0, 2, "HisRoomRsp{").append('}').toString();
  }

  public static final HisRoomRsp parseFrom(byte[] data) throws IOException {
    HisRoomRsp c = null;
       c = HisRoomRsp.ADAPTER.decode(data);
    return c;
  }

  /**
   * 0:表示成功
   */
  public Integer getRetCode() {
    if(retCode==null){
        return DEFAULT_RETCODE;
    }
    return retCode;
  }

  /**
   * 房间号
   */
  public String getLiveId() {
    if(liveId==null){
        return DEFAULT_LIVEID;
    }
    return liveId;
  }

  /**
   * 分享的url
   */
  public String getShareUrl() {
    if(shareUrl==null){
        return DEFAULT_SHAREURL;
    }
    return shareUrl;
  }

  /**
   * 完整的观看url
   */
  public String getViewUrl() {
    if(viewUrl==null){
        return DEFAULT_VIEWURL;
    }
    return viewUrl;
  }

  /**
   * 类型，0公开，1私密
   */
  public Integer getType() {
    if(type==null){
        return DEFAULT_TYPE;
    }
    return type;
  }

  /**
   * 0:表示成功
   */
  public boolean hasRetCode() {
    return retCode!=null;
  }

  /**
   * 房间号
   */
  public boolean hasLiveId() {
    return liveId!=null;
  }

  /**
   * 分享的url
   */
  public boolean hasShareUrl() {
    return shareUrl!=null;
  }

  /**
   * 完整的观看url
   */
  public boolean hasViewUrl() {
    return viewUrl!=null;
  }

  /**
   * 类型，0公开，1私密
   */
  public boolean hasType() {
    return type!=null;
  }

  public static final class Builder extends Message.Builder<HisRoomRsp, Builder> {
    public Integer retCode;

    public String liveId;

    public String shareUrl;

    public String viewUrl;

    public Integer type;

    public Builder() {
    }

    /**
     * 0:表示成功
     */
    public Builder setRetCode(Integer retCode) {
      this.retCode = retCode;
      return this;
    }

    /**
     * 房间号
     */
    public Builder setLiveId(String liveId) {
      this.liveId = liveId;
      return this;
    }

    /**
     * 分享的url
     */
    public Builder setShareUrl(String shareUrl) {
      this.shareUrl = shareUrl;
      return this;
    }

    /**
     * 完整的观看url
     */
    public Builder setViewUrl(String viewUrl) {
      this.viewUrl = viewUrl;
      return this;
    }

    /**
     * 类型，0公开，1私密
     */
    public Builder setType(Integer type) {
      this.type = type;
      return this;
    }

    @Override
    public HisRoomRsp build() {
      return new HisRoomRsp(retCode, liveId, shareUrl, viewUrl, type, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_HisRoomRsp extends ProtoAdapter<HisRoomRsp> {
    public ProtoAdapter_HisRoomRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, HisRoomRsp.class);
    }

    @Override
    public int encodedSize(HisRoomRsp value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.retCode)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.liveId)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.shareUrl)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.viewUrl)
          + ProtoAdapter.UINT32.encodedSizeWithTag(5, value.type)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, HisRoomRsp value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.retCode);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.liveId);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.shareUrl);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.viewUrl);
      ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.type);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public HisRoomRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRetCode(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setLiveId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.setShareUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setViewUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.setType(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public HisRoomRsp redact(HisRoomRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
