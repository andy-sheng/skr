// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AuthUpload.proto
package com.wali.live.proto.AuthUpload;

import com.squareup.wire.EnumAdapter;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

/**
 * java -jar -Dfile.encoding=UTF-8 ./proto/wire-compiler-2.3.0-SNAPSHOT-jar-with-dependencies.jar \
 * --proto_path=./proto --java_out=./modulecore/src/main/java-gen-pb/ AuthUpload.proto
 * 文件上传前的授权签名，如果文件已存在则重用之前的FileInfo信息，否则进行签名也返回新的FileInfo信息
 * 参数解释见 http://ks3.ksyun.com/doc/api/index.html 请求签名部分
 * cmd:mzone.mfas.auth
 */
public enum AuthType implements WireEnum {
  /**
   * 服务器随机分配bucket,
   */
  DEFAULT(0),

  /**
   * 头像业务，服务器分配固定的bucket和固定格式的objectKey，objectKey格式为：${vuid}_${time}.${suffix},time:当前时间精确到秒，suffix:头像文件后缀名
   */
  HEAD(1),

  LOG(2),

  PIC(3),

  ANIMATION(4),

  USER_PIC(5),

  USER_ID(6),

  USER_VIDEO(7),

  USER_WALLPAPER(8);

  public static final ProtoAdapter<AuthType> ADAPTER = new ProtoAdapter_AuthType();

  private final int value;

  AuthType(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static AuthType fromValue(int value) {
    switch (value) {
      case 0: return DEFAULT;
      case 1: return HEAD;
      case 2: return LOG;
      case 3: return PIC;
      case 4: return ANIMATION;
      case 5: return USER_PIC;
      case 6: return USER_ID;
      case 7: return USER_VIDEO;
      case 8: return USER_WALLPAPER;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }

  public static final class Builder {
    public AuthType build() {
      return DEFAULT;
    }
  }

  private static final class ProtoAdapter_AuthType extends EnumAdapter<AuthType> {
    ProtoAdapter_AuthType() {
      super(AuthType.class);
    }

    @Override
    protected AuthType fromValue(int value) {
      return AuthType.fromValue(value);
    }
  }
}
