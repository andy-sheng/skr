// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Account.proto
package com.wali.live.proto.Account;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 用于查询uid是否需要微信老用户引导  cmd：zhibo.account.getguideflag
 */
public final class GetGuideFlagReq extends Message<GetGuideFlagReq, GetGuideFlagReq.Builder> {
  public static final ProtoAdapter<GetGuideFlagReq> ADAPTER = new ProtoAdapter_GetGuideFlagReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_UUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long uuid;

  public GetGuideFlagReq(Long uuid) {
    this(uuid, ByteString.EMPTY);
  }

  public GetGuideFlagReq(Long uuid, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.uuid = uuid;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.uuid = uuid;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetGuideFlagReq)) return false;
    GetGuideFlagReq o = (GetGuideFlagReq) other;
    return unknownFields().equals(o.unknownFields())
        && uuid.equals(o.uuid);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + uuid.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", uuid=").append(uuid);
    return builder.replace(0, 2, "GetGuideFlagReq{").append('}').toString();
  }

  public byte[] toByteArray() {
    return GetGuideFlagReq.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<GetGuideFlagReq, Builder> {
    public Long uuid;

    public Builder() {
    }

    public Builder setUuid(Long uuid) {
      this.uuid = uuid;
      return this;
    }

    @Override
    public GetGuideFlagReq build() {
      if (uuid == null) {
        throw Internal.missingRequiredFields(uuid, "uuid");
      }
      return new GetGuideFlagReq(uuid, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetGuideFlagReq extends ProtoAdapter<GetGuideFlagReq> {
    public ProtoAdapter_GetGuideFlagReq() {
      super(FieldEncoding.LENGTH_DELIMITED, GetGuideFlagReq.class);
    }

    @Override
    public int encodedSize(GetGuideFlagReq value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.uuid)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetGuideFlagReq value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.uuid);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetGuideFlagReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUuid(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetGuideFlagReq redact(GetGuideFlagReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
