// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Account.proto
package com.wali.live.proto.Account;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 第三放appInfo
 */
public final class AppInfo extends Message<AppInfo, AppInfo.Builder> {
  public static final ProtoAdapter<AppInfo> ADAPTER = new ProtoAdapter_AppInfo();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_APPID = "";

  public static final String DEFAULT_APPKEY = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String appId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String appKey;

  public AppInfo(String appId, String appKey) {
    this(appId, appKey, ByteString.EMPTY);
  }

  public AppInfo(String appId, String appKey, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.appId = appId;
    this.appKey = appKey;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.appId = appId;
    builder.appKey = appKey;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AppInfo)) return false;
    AppInfo o = (AppInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(appId, o.appId)
        && Internal.equals(appKey, o.appKey);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (appId != null ? appId.hashCode() : 0);
      result = result * 37 + (appKey != null ? appKey.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (appId != null) builder.append(", appId=").append(appId);
    if (appKey != null) builder.append(", appKey=").append(appKey);
    return builder.replace(0, 2, "AppInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return AppInfo.ADAPTER.encode(this);
  }

  public static final AppInfo parseFrom(byte[] data) throws IOException {
    AppInfo c = null;
       c = AppInfo.ADAPTER.decode(data);
    return c;
  }

  public String getAppId() {
    if(appId==null){
        return DEFAULT_APPID;
    }
    return appId;
  }

  public String getAppKey() {
    if(appKey==null){
        return DEFAULT_APPKEY;
    }
    return appKey;
  }

  public boolean hasAppId() {
    return appId!=null;
  }

  public boolean hasAppKey() {
    return appKey!=null;
  }

  public static final class Builder extends Message.Builder<AppInfo, Builder> {
    public String appId;

    public String appKey;

    public Builder() {
    }

    public Builder setAppId(String appId) {
      this.appId = appId;
      return this;
    }

    public Builder setAppKey(String appKey) {
      this.appKey = appKey;
      return this;
    }

    @Override
    public AppInfo build() {
      return new AppInfo(appId, appKey, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AppInfo extends ProtoAdapter<AppInfo> {
    public ProtoAdapter_AppInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, AppInfo.class);
    }

    @Override
    public int encodedSize(AppInfo value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.appId)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.appKey)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AppInfo value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.appId);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.appKey);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AppInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setAppId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.setAppKey(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AppInfo redact(AppInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
