syntax = "proto3";

package com.zq.live.proto.Common;

/**

java -jar -Dfile.encoding=UTF-8 ./proto/wire-compiler-2.3.0-SNAPSHOT-jar-with-dependencies.jar \
--proto_path=./proto --java_out=./commoncore/src/main/java-gen-pb/ Common.proto

*/

// 用户信息
message UserInfo
{
    uint32 userID       = 1; //用户ID
    string nickName     = 2; //发信者昵称
    string avatar       = 3; //头像地址
    ESex sex            = 4; //性别
    string description  = 5; //个人描述
    bool isSystem       = 6; //是否为系统
    uint32 mainLevel    = 7; //主段位
    VipInfo vipInfo     = 8; //加v信息
    UserRanking ranking = 9; //排位信息
    HonorInfo honorInfo = 10; //会员信息
    UClubInfo clubInfo  = 11; //家族信息
}

//背景效果
message BackgroundShowInfo
{
    string sourcesJson = 1; //资源，使用效果
    string bgColor     = 2; //[废弃]背景颜色
}

//爆灯效果
message BLightShowInfo
{
    string sourcesJson = 1; //资源，使用效果
}

enum EGoodsDisplayType {
    GDT_UNKNOWN         = 0; //未知
    GDT_SHENG_WEN       = 1; //声纹
    GDT_TOU_XIANG_KUANG = 2; //头像框
    GDT_GUARD           = 3; //守护[忽略]
    GDT_YAN_CHANG       = 4; //演唱效果
    GDT_BAO_DENG        = 5; //爆灯效果
}

message HonorInfo
{
    EHonorType honorType = 1; //会员类型
}

enum EHonorType {
    EHT_UNKNOWN = 0; //不是会员
    EHT_COMMON  = 1; //普通会员
}

message VipInfo
{
    EVIPType vipType = 1; //认证类型
    string desc      = 2; //认证描述
}

//段位描述
message UserRanking
{
    uint32 mainRanking = 1; //主段位
    uint32 subRanking  = 2; //子段位
    int64 currExp      = 3; //进度条当前分值
    int64 maxExp       = 4; //进度条总分值
    string rankingDesc = 5; //段位描述。例如：白银歌者4段
}

//加v类型
enum EVIPType {
    EVT_UNKNOWN  = 0; //未知：没有加v`
    EVT_RED_V    = 1; //红v
    EVT_GOLDEN_V = 2; //金v
    EVT_HAO      = 3; //“豪”徽章奖励
    EVT_RENQI    = 4; //“人气”徽章奖励
    EVT_LA_V     = 5; //“恋爱”徽章奖励
    EVT_XD_V     = 6; //“心动”徽章奖励

    //7-10暂未使用
    EVT_7_V    = 7;
    EVT_8_V    = 8;
    EVT_9_V    = 9;
    EVT_10_V   = 10;
}

// 音乐信息
message MusicInfo
{
    uint32 itemID           = 1; //音乐条目标识
    string itemName         = 2; //音乐条目名称
    string cover            = 3; //音乐条目封页图片
    string owner            = 4; //音乐条目所属（歌手）
    string lyric            = 5; //音乐条目对应歌词
    string ori              = 6; //原唱:origin
    string acc              = 7; //伴奏:accompany
    string midi             = 8; //音乐条目对应midi文件
    string zip              = 9; //资源压缩文件
    string rankBgm          = 10; //匹配玩法的伴奏
    uint32 beginMs          = 11; //beginTimeMs,匹配玩法的伴奏开始毫秒
    uint32 endMs            = 12; //endTimeMs,匹配玩法的伴奏结束毫秒
    string standIntro       = 13; //standIntro,一唱到底的导唱
    uint32 standIntroBeginT = 14; //standIntroBeginT,一唱到底导唱的开始毫秒
    uint32 standIntroEndT   = 15; //standIntroEndT,一唱到底导唱的结束毫秒
    uint32 totalMs          = 16; //totalTimeMs,匹配玩法伴奏总时长
    uint32 rankLrcBeginT    = 17; //rankLrcBeginT,匹配玩法第一句歌词开始时间,毫秒
    uint32 standLrcBeginT   = 18; //standLrcBeginT,一唱到底第一句歌词的开始毫秒
    uint32 standLrcEndT     = 19; //standLrcEndT,一唱到底歌词的结束毫秒
    bool isBlank            = 20; //isBlank,是否一唱到底的白板item
    string standLrc         = 21; //standLrc,一唱到底歌词URL
    string rankUserVoice    = 22; //rankUserVoice,匹配进入游戏前的背景音乐
    uint32 rankLrcEndT      = 23; //rankLrcEndT,匹配玩法最后一句歌词的结束时间,毫秒
    uint32 task             = 24; //任务等级，若为0，表示非任务歌曲
    uint32 standTotalMs     = 25; //一唱到底伴奏模式的时长
    bool challengeAvailable = 26; //是否可支持挑战模式

    StandPlayType playType      = 27; //一唱到底演唱类型
    repeated MusicInfo SPKMusic = 28; //一唱到底模式下spk歌曲信息

    MiniGameInfo miniGame = 29; //连麦小游戏演唱类型

    string writer       = 30; //作词人
    string composer     = 31; //作曲人
    string uploaderName = 32; //上传用户名
    uint32 singCount    = 33; //演唱次数

    repeated uint32 relaySegments = 34; //双人接唱歌词段落划分
}

enum EMiniGamePlayType {
    EMGP_UNKNOWN     = 0; //未知展示类型
    EMGP_KEYWORD     = 1; //关键词展示
    EMGP_FIXED_TXT   = 2; //固定文案
    EMGP_SONG_DETAIL = 3; //歌曲详情
}

message MiniGameInfo
{
    uint32 gameID                  = 1;
    string gameName                = 2;
    string gameRule                = 3;
    EMiniGamePlayType gamePlayType = 4;
    string keyWord                 = 5;
    string fixedTxt                = 6;
    MiniGameSongInfo songInfo      = 7;
}

message MiniGameSongInfo
{
    string songURL  = 1;
    string songName = 2;
}

// 礼物信息
message GiftInfo
{
    uint32 giftID                = 1; //礼物id
    string giftName              = 2; //礼物名称
    string giftURL               = 3; //礼物的图片
    uint64 price                 = 4; //1000分之一钻单位 或者金币
    string sourceURL             = 5; //礼物资源，使用效果
    uint32 sortID                = 6; //排序id
    EGiftType giftType           = 7; //礼物类型，钻石礼物、金币礼物
    bool canContinue             = 8; //是否可以连击
    string description           = 9; //礼物描述
    float realPrice              = 10; //真实价格
    bool play                    = 11; //是否需要播放
    sint32 textContinueCount     = 12;
    EGiftDisplayType displayType = 13;
    GiftExtraInfo extra          = 14;
    uint32 balance               = 15; //剩余数目
}
// 礼物附加信息
message GiftExtraInfo
{
    sint64 duration   = 1;
    sint32 width      = 2;
    sint32 height     = 3;
    sint32 left       = 4;
    sint32 right      = 5;
    sint32 top        = 6;
    sint32 bottom     = 7;
    bool isFullScreen = 8; //是否全屏
    bool isFullX      = 9; //true 水平平铺  false 垂直平铺
}

// 礼物展示类型
enum EGiftDisplayType {
    EGDT_Unknown = 0;
    EGDT_Big     = 1;
    EGDT_Medium  = 2;
    EGDT_Small   = 3;
    EGDT_Free    = 4;
}

// 礼物类型
enum EGiftType {
    EG_Unknown     = 0;
    EG_Coin        = 1;
    EG_Zuan        = 2;
    EG_SYS_Handsel = 3; // 系统赠送礼物（鲜花）
}

// 一唱到底playType
enum StandPlayType {
    PT_INVALID_TYPE   = 0; //无效
    PT_COMMON_TYPE    = 1; //普通玩法
    PT_SPK_TYPE       = 2; //PK玩法
    PT_CHO_TYPE       = 3; //合唱玩法
    PT_MINI_GAME_TYPE = 4; //连麦进行小游戏玩法
    PT_FREE_MICRO     = 5; //自由麦玩法
    PT_RELAY_TYPE     = 6; //双人接唱玩法
}

enum ESex {
    SX_UNKNOWN = 0; //未知
    SX_MALE    = 1; //男性
    SX_FEMALE  = 2; //女性
    SX_SECRET  = 3; //保密
}

enum ERoomType {
    RT_UNKNOWN = 0; //未知
    RT_SECRET  = 1; //私密房
    RT_FRIEND  = 2; //好友房
    RT_PUBLIC  = 3; //公开房
    RT_COMMON  = 4; //普通房
}

message ResourceInfo
{
    uint32 resourceID = 1; //资源id
    uint32 itemID     = 2; //音乐条目id
    string audioURL   = 3; //声音资源URL
    string midiURL    = 4; //打分资源URL
    sint32 sysScore   = 5; //系统打分分值
}

// 消息位置类型
enum EMsgPosType {
    EPT_UNKNOWN = 0; // 未知位置
    EPT_NORMAL  = 1; // 一般评论消息
    EPT_CENTER  = 2; // 在整个页面中心区域显示的消息
    EPT_TOP     = 3; // 页面上方
    EPT_BOTTOM  = 4; // 页面底部
}

//房间类型
enum EMsgRoomMediaType {
    EMR_UNKNOWN = 0; // 未知
    EMR_AUDIO   = 1; // 音频房
    EMR_VIDEO   = 2; // 视频房
}
message CombineRoomConfig
{
    sint32 durationTimeMs   = 1; //房间持续时间（4000ms）
    string maskMaleAvatar   = 2; //隐藏的男性用户头像
    string maskFemaleAvatar = 3; //隐藏的女性用户头像
    string roomSignature    = 4; //房间描述签名
}

message AgoraTokenInfo
{
    uint32 userID = 1; //用户id
    string token  = 2; //声网token
}

message UClubInfo
{
    EClubMemberRoleType roleType = 1; //家族角色信息
    uint32 clubID                = 2; //自己的clubID
}

// 家族信息
message ClubInfo
{
    uint32 clubID = 1; //家族ID
    string name   = 2; //家族名字
    string logo   = 3; //家族标志
    string desc   = 4; //家族简介
    string notice = 5; //家族公告

    uint32 memberCnt = 6; //家族人数
    uint32 hot       = 7; //人气
}

// 用户家族信息
message UserClubInfo
{
    ClubInfo club                = 1;
    EClubMemberRoleType roleType = 2; //家族角色信息
    string roleDesc              = 3; //角色描述
}

// EClubMemberRoleType 成员角色类型
enum EClubMemberRoleType {
    ECMRT_Invalid   = 0; //未知
    ECMRT_Founder   = 1; //族长
    ECMRT_CoFounder = 2; //副族长
    ECMRT_Hostman   = 3; //主持人
    ECMRT_Common    = 4; //普通成员
}


// 游戏模式
enum EGameModeType {
    UnknownMode       = 0;  //未知模式
    ClassicRankMode   = 1;  //[废弃]:经典排位模式
    FunnyMode         = 2;  //[废弃]:娱乐模式
    StandMode         = 3;  //[正常]:一站到底模式
    ClassicRankV2Mode = 4;  //[废弃]:排位v2模式
    StandV2Mode       = 5;  //[废弃]:一场到底V2模式
    RaceMode          = 6;  //[正常]:排位赛模式
    StandPlaybookMode = 7;  //[废弃]:歌单战模式
    MicMode           = 8;  //[废弃]:排麦房模式（小K房）
    MagpieMode        = 9;  //[废弃]:双人畅聊模式
    RelayMode         = 10; //[正常]:合唱模式 (接唱房)
    PartyMode         = 11; //[正常]:派对模式 (派对房)
    BattleMode        = 12; //[正常]:2v2团战模式
}

message RelayRoomConfig
{
    sint32 durationTimeMs   = 1; //房间持续时间
    sint32 unLockWaitTimeMs = 2; //可以解锁需要等待时间
}