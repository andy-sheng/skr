
package com.wali.live.proto;
import "Common.proto";

option java_package = "com.wali.live.proto.CommonChannel";
option java_outer_classname = "CommonChannelProto";


message ChannelBanner {
    required string bg_url      =1;//banner背景图片url
    required string link_url    =2;//banner跳转url
    optional string desc        =3;//描述信息
}

//http://wiki.n.miui.com/pages/viewpage.action?pageId=25049393
message ChannelItem {
    required uint32 uiType    = 1; //根据不同的UIType去解析UiData
    required bytes uiData     = 2; //UiTemplateOneTextOneImg对应1,2,4,UiTemplateUserInfo对应3,5
    optional bool fullColumn  = 3;
    optional uint32 sectionId = 4;
    optional bool isHide      = 5; //是否隐藏这个模板，默认false：显示（目前只针对关注分栏的一行三列样式21/26有效）
}

//type = 1,2,4,16
message UiTemplateOneTextOneImg{
    //这种模版的元素必须都是一张图，一段文字
    repeated OneTextOneImgItemData itemDatas    = 1;
    optional string headerName                  = 2;//header的名字
    optional string headerViewAllUri            = 3;//查看全部的uri，如果没有这个字段不展示查看全部
}

message OneTextOneImgItemData{
    optional string text            = 1;//元素的文本内容
    optional string imgUrl          = 2;//元素的图片url
    optional string jumpSchemeUri   = 3;//跳转的schemeUri
    optional UserInfo userInfo      = 4;//用户信息//16需要带userinfo
}

//type=3,5,9,24,29
message UiTemplateUserInfo{
    //这种模版的元素必须都是一张图，一段文字,并且会下发全量的用户资料信息
    repeated UserInfoItemData itemDatas     = 1;
    optional string headerName              = 2;//header的名字
    optional string headerViewAllUri        = 3;//查看全部的uri，如果没有这个字段不展示查看全部
    //    optional uint32 headerUiType            = 4; //协议没对齐，已废弃
    optional uint32 headerUiType2       = 5; //header样式,默认0=老样式,1=头条有正副标题样式,2=header name+">",3=带icon
    optional string header_icon         = 6; //header图标(字段为空且headerUiType=3时，客户端加本地默认图标)
    optional string headerViewAllText   = 7; //查看全部uri跳转的文案


}

message UserInfoItemData {
    optional UserInfo userInfo      = 1; //用户资料
    optional string jumpSchemeUri   = 2; //跳转的schemeUri
    optional string desc            = 3; //描述，如世姐赛区
    optional string desc_bg_color      = 4; //描述底色
    optional string avatar_layer_color = 5; //头像圆圈颜色
}

message UserInfo{
    required uint64 zuid                =1;
    optional uint64 avatar              =2; //头像
    optional string nickname            =3; //昵称
    optional string sign                =4; //签名
    optional uint32 gender              =5; //性别
    optional uint32 level               =6; //等级
    optional uint32 badge               =7; //徽章
    optional uint64 updateTime          =8; //更新时间，水位
    repeated uint64 adminUids           =9; //管理员
    optional string certification       =10;//认证信息
    optional uint32 certification_type  =11;//认证类型 ，1：新浪微博，2：官方账号，3：推荐认证，4：小米直播认证
    optional uint32 fansCount           =12;//粉丝数
}

//type=6
message BannerItemData {
    required string picUrl              = 1;//图片地址
    required string skipUrl             = 2 [default = ''];//图片跳转地址
    required uint64 lastUpdateTs        = 3;//修改时间
    optional uint32 bannerId            = 4;//banner id，客户端做打点统计
    optional string shareIconUrl        = 5;//分享时用的图片URL
    optional string shareTitle          = 6;//分享时用的标题
    optional string shareDesc           = 7;//分享时用的摘要
    optional uint32 channelId           = 8 [default = 1];//频道id，默认值为1为热门
    optional uint32 lang                = 9 [default = 1];//语言版本: 1中文, 2 英文
}

message UiTemplateBanner{
    repeated BannerItemData itemDatas   = 1;
    optional uint32 type                = 2; //不写或者为1时，为推荐列表的小尺寸， 2为资讯频道大尺寸
}

//type=8.
message UiTemplateTwoTextOneImg{
    //这种模版的元素必须都是一张图，两段文字
    repeated TwoTextOneImgItemData itemDatas    = 1;
    optional string headerName                  = 2;//header的名字
    optional string headerViewAllUri            = 3;//查看全部的uri，如果没有这个字段不展示查看全部
}

message TwoTextOneImgItemData {
    optional string name          = 1; //元素的文本内容,比如名称
    optional string desc          = 2; //元素的文本内容,比如描述信息
    optional string imgUrl        = 3; //元素的图片url
    optional string jumpSchemeUri = 4; //跳转的schemeUri
    optional UserInfo userInfo    = 5; //用户信息
    optional string jumpSchemeUriText = 6; //跳转schemeUri文案
    repeated SmallIconData smallIcon = 7; //小圆角图标
}

message SmallIconData {
    optional string iconUrl = 1; //图标地址
}

/*type=7,10,11 12,13,15,17,18,19,21,22,25,26,28,31,32,33,34,37,38,40,41
 * @para headerUiType header样式（不认识的样式按照默认样式0处理）
 *  0=老样式              1=头条有正副标题样式       2=header name+">"
 *  3=带icon              4=分栏频道样式
 */
message UiTemplateLiveOrReplayInfo {
    repeated LiveOrReplayItemInfo items = 1;
    optional string headerName          = 2; //header的名字
    optional string headerViewAllUri    = 3; //查看全部的uri，如果没有这个字段不展示查看全部
    optional string subHeaderName       = 4;
    optional uint32 headerUiType        = 5;
    optional string header_icon         = 6; //header图标(字段为空且headerUiType=3时，客户端加本地默认图标)
    optional string headerViewAllText   = 7; //查看全部uri跳转的文案
}

message LiveOrReplayItemInfo {
    required uint32 type               = 1; //1直播， 2回放, 3 配置用户信息 4 小视频 5 电视台 6 图文,8混排图文，9直播间组，10电台组
    required bytes items               = 2; //1对应 LiveInfo， 2对应BackInfo 3.对应 UserInfo 4. 对应小视频信息,8对应LiveOrReplayImageData,9对应LiveGroupExtData,10:RadioGroupExtData
    optional string jumpSchemeUri      = 3; //跳转的schemeUri
    optional string upRightText        = 4; //右上角文案，直播，回放
    optional string downText1          = 5; //下方第一行文案
    optional string downText2          = 6; //下发第二行文案
    optional string imgUrl             = 7; //配置的元素的图片url
    optional uint64 publishTime        = 8; //发布时间
    optional string upLeftText         = 9; //左上角文案(游戏新样式增加) [3.0废弃字段]
    optional string imgUrl2            = 10;//配置的元素的图片url2(目前样式33用到)
    optional ListWidgetInfo widget     = 11;//列表挂件信息
    optional RichText topLeft          = 12;//封面左上角信息
    optional MiddleInfo middle         = 13;//封面中间文本
    repeated RichText label            = 14;//标签[目前只有一个，考虑会扩展为多个，定义为repeated]
    optional uint32 distance           = 15;//距离，单位：米[附近直播功能用到]
    optional uint32 width              = 16;//图片或者小视频宽度
    optional uint32 height             = 17;//图片或者小视频高度
    optional int32  downtextType       = 18;//1.距离；2.位置；3.人数(字段未设置，默认显示优先级为 距离>位置>人数)
}

//富文本信息
message RichText {
    optional string text          = 1; //文案
    optional string jumpSchemeUri = 2; //跳转地址
    optional uint32 bgImageID     = 3; //客户端预留底图id[需考虑不识别底图情况]
    optional string iconUrl       = 4; //图标地址[优先展示小图片，等同于ListWidgetInfo]
    optional string bgColor       = 5; //底色[多种颜色之间用‘-’分割]
}

//封面中间文案信息
message MiddleInfo {
    optional string text1 = 1; //主标题
    optional string text2 = 2; //副标题
}

//列表挂件信息
message ListWidgetInfo {
    optional string jumpSchemeUri = 1; //跳转地址
    optional string iconUrl = 2; //图标地址
}

//type=14
message UiTemplateSeparator {
    optional uint32 color           = 1; //分割线颜色,1:灰色 2:白色
    optional uint32 height          = 2; //分割线高度,1:默认值,2:头条高度
    optional string title  = 3;
}

//主播部分信息
message UserBrief {
    required uint64 uId         = 1; //用户id
    optional string nickname    = 2; //昵称
    optional uint64 avatar      = 3; //头像时间戳
    optional uint32 level       = 4; //等级
    optional uint32 certType    = 5; //认证类型
}

//购物直播信息
message ShopBrief {
    optional bool hideGoods     = 1; //是否隐藏商品
    optional uint32 desiredCnt  = 2; //想要购买人数
}

//pk信息
message PKBrief {
    optional bool is_pk = 1;  //是否是pk房间
}


//连麦
message MicBrief {
    optional uint64 mic_uid  = 1; //连麦的观众id
    optional uint32 mic_type = 2; //0:主播与观众连麦 1：主播与主播连麦
}

//一条直播记录
message LiveInfo {
    required string liveId      = 1; //直播id
    optional UserBrief user     = 2; //主播信息
    optional string location    = 3; //地点
    optional uint32 viewerCnt   = 4; //观众数
    optional string url         = 5; //直播地址
    optional string coverUrl    = 6; //房间的封面图片地址
    optional string liTitle     = 7; //直播标题
    optional uint64 startTime   = 8; //直播开始时间
    optional string tag         = 9; //个性化标签(打点上报)
    optional ShopBrief shop     = 10;//购物信息[has判断有该字段,说明是购物直播]
    optional uint32 appType     = 11;//0=小米直播app, 1=无人机, 2=导播台, 3=游戏, 4=一直播
    optional uint32 liveType    = 12;//直播类型[和房间接口一致]. 0=公开, 1=私密, 2=口令, 3=门票
    optional PKBrief pk       = 15;
    optional MicBrief mic     = 16;
    optional uint32 hotScore = 18; //热度值
}

//一条回放记录详情
message BackInfo {
    required string backId      = 1; //回放id
    optional UserBrief user     = 2; //主播信息
    optional uint32 viewerCnt   = 3; //观众数
    optional string url         = 4; //回放地址
    optional uint64 startTime   = 5; //直播开始时间
    optional uint64 endTime     = 6; //直播结束时间
    optional string backTitle   = 7; //回放标题
    optional string coverUrl    = 8; //房间的封面图片地址
    optional string shareUrl    = 9; //分享地址
    optional string location    = 10;//地点
}

//小视频信息
message VideoInfo {
    required string id          = 1; //小视频id
    optional uint64 view_count  = 2; //小视频观看次数
    optional UserInfo user_info = 3; //用户资料
    optional uint64 duration    = 4; //视频时长，单位ms
    optional uint64 like_count  = 5; //点赞数
    optional bool is_liked      = 6; //是否已经赞过
}

//type=8 LiveOrReplayItemInfo自定义图文的PB，为支持同一行不同样式的模板
message LiveOrReplayImageData {
    optional string name = 1; //分类名等
    optional string iconUrl = 2; //小图标
}

//type=9 直播间组信息
message LiveGroupExtData {
    optional string frameUrl        = 1; //边框
    repeated GroupMemberData member = 2; //乘员信息
    optional uint32 groupCnt        = 3; //分组人数
}

//type=10 电台组信息
message RadioGroupExtData {
    repeated GroupMemberData member = 1; //乘员信息
    optional uint32 groupCnt = 2; //分组人数
}

//type=20, 27, 30（圈子新增）
message NavigationData {
    optional string name            = 1; //导航标签名 话题
    optional string bgImgUrl        = 2; //背景图
    optional string iconUrl         = 3; //小图标
    optional string jumpSchemeUri   = 4; //跳转scheme 话题跳转uri(考虑需求经常变，这里可配置其他类型uri，如电视台，h5等)
    optional uint32 textColor       = 5; //文本颜色[话题用到],0=客户端默认颜色,1=金色
    optional string hexColorCode    = 6; //十六进制颜色码，如#FFFFFF
    optional string text1           = 7; //导航新增text1
    optional string apkName         = 8; //apk包名
}

message UiTemplateNavigation {
    repeated NavigationData itemDatas = 1; //导航数据
}

//type=23
message UiTemplateNotice {
    repeated NoticeData noticeItems =1;
    optional string headerViewAllUri = 2;//查看全部的uri，如果没有这个字段不展示查看全部
}

message NoticeData {
    optional string noticeId    = 1; //预告ID
    optional uint64 zuid        = 2; //主播ID
    optional uint64 beginTime   = 3; //预告开始时间
    optional string title       = 4; //标题
}
//uitype=29
message UiTemplateRanking {
    repeated RankingItemData itemDatas = 1;
    optional string jumpSchemeUri = 2; //uitemplate跳转schemaUri
    optional string text1 = 3;
    optional string text2 = 4;
    optional uint32 iconStyle = 5; //目前用于控制uitype=29用户头像左上角是否显示小图标，默认0=无，1=排名
}

message UiTemplatePageHeader {
    optional string cover_url         = 1; //封面
    optional string cover_scheme_uri  = 2; //点击封面跳转scheme
    optional string video_url         = 3; //视频播放地址
    optional string video_cover_url   = 4; //视频封面地址
    optional string video_scheme_uri  = 5; //点击视频区域跳转scheme
    repeated NavigationData navi_data = 6; //导航数据
    optional uint32 cover_width           = 7; //图片或者小视频宽度
    optional uint32 cover_height          = 8; //图片或者小视频高度
    optional uint32 type                  = 9; //视频源类型（与LiveOrReplayItemInfo一致）。1直播， 2回放, 3 配置用户信息 4feeds 5电视台 6图文
    optional uint32 video_width           = 10; //视频封面图片宽度
    optional uint32 video_height          = 11; //视频封面图片高度
    optional float video_cutout_num = 12;   //视频展示的位置
}

message RankingItemData {
    optional UserInfo userInfo = 1; //用户资料
    optional string jumpSchemeUri = 2; //item跳转schemeUri
}

// ======== recommendflag milink 打点 =======
message LiveRecvFlagReq {
    repeated LiveRecvFlagItem items = 1;
}

message LiveRecvFlagItem {
    optional uint64 date      = 1; //用户产生行为的时间（毫秒）
    optional uint32 type      = 2; //打点类型, 1=曝光 2=点击 3=送礼物 4=出房间 5=关注主播 6=喜好反馈 小视频打点类型  100=曝光 101=点击 102=观看 103=点赞 104=评论 105=分享
    optional bytes extData    = 3; //对应打点类型的扩展信息
    optional string recommend = 4; //服务器下发的打点字串
    optional CommonLog log    = 5; //打点具体内容
}

//通用打点pb
message CommonLog{
    optional uint32 bizType = 1; //各自业务的打点类型 type=400时bizType填当前channelId
    optional string extStr  = 2; //打点的详情（json串）
}

//type=3 extData填充内容
message GiftDetail {
    optional uint32 giftId    = 1; //礼物id
    optional uint32 giftWorth = 2; //礼物价值
}

//type=4 或102 extData填充内容
message LeaveRoom{
    optional uint64 enterTime = 1; //进入房间时间
    optional uint64 leaveTime = 2; //离开房间时间
}

//type=5 extData填充内容
message FollowRoom{
    optional uint64 enterTime  = 1; //进入房间时间
    optional uint64 followTime = 2; //关注主播时间
}

//type=6 extData填充内容
message LikeFeedback{
    optional uint64 zuid    = 1; //不喜欢主播的id
    optional string roomId  = 2; //不喜欢直播的房间id
}
//type=103 extData填充内容
message VideoLike{
    optional uint64 befCount = 1; //点赞前的点赞数
}

//type=104 extData填充内容
message VideoComment{
    optional string content = 1; //评论的内容
}

message LiveRecvFlagRsp {
    required uint32 retCode = 1; //0=成功
}
// ======== recommendflag milink 打点  end =====


enum BarMessageType {
    OP = 1; // 运营
    SYS = 2; // 系统
    NTF = 3; // 即时
}
message BarMessage {
    optional BarMessageType bmt = 1;
    optional string content = 2;
    optional string schema = 3;
    optional uint64 start = 4;
    optional uint64 end = 5;
}
// zhibo.get.barmsg	拉去通知栏消息
message GetBarMessageRequest {
    optional uint64 from = 1;
}
message GetBarMessageResponse {
    optional uint32 ret = 1;
    optional string err_msg = 2;
    repeated BarMessage bar_msg = 3;
}
/****************** zhibo.recommend.videolist 拉小视频列表  ******************/
message GetWaterfallListReq {
    required uint64 uid        = 1;  //拉列表的用户id
    optional uint32 oper_type  = 2;  //拉列表类型。默认0=第一屏或下滑刷新，1=上滑加载更多
    optional uint32 channel_id = 3;  //小视频首页频道id
    optional bytes param       = 4;  //拉列表算法参数[客户端不用关心，透传给服务器]。app第一次安装或者清掉缓存后不用填，
    //下一次请求填rsp中的param，下一次启动app填客户端最近一次缓存的param
    optional Location location = 5;
}

message GetWaterfallListRsp {
    required uint32 ret      = 1;  //返回码
    repeated WatElement elem = 2;  //数据
    optional bytes param     = 3;  //拉列表算法参数[客户端不用关心，下一次请求透传给服务器]
    optional bool has_more   = 4;  //是否有更多小视频
}

message WatElement {
    required uint32 data_type = 1; //数据类型[同模板协议LiveOrReplayItemInfo中的type],目前只有2种类型，4=feeds小视频,6=可跳转图文 7 = ButtonData 小视频创建button
    required bytes data       = 2; //数据内容, data_type：4=VideoData，6=ImageData
}

message VideoData {
    optional string feed_id    = 1;  //视频对应的feedId
    optional string jump_uri   = 2;  //跳转scheme
    optional string cover_url  = 3;  //视频封面
    optional uint32 width      = 4;  //图片或者小视频宽度
    optional uint32 height     = 5;  //图片或者小视频高度
    optional string title      = 6;  //标题
    optional uint64 like_count = 7;  //点赞数
    optional UserInfo user     = 8;  //用户资料[同模板协议UserInfo]
    optional RichText mark     = 9;  //封面运营角标[同模板协议RichText]
    optional bool is_liked     = 10; //用户是否已经赞过
    optional uint32 distance   = 11; //用户与小视频发布地点的距离，单位：米
    optional string city       = 12; //小视频发布的城市[无定位时显示]
}

message MVData {
    optional string feed_id                = 1;  //mv对应的feedId
    optional string cover_url              = 2;  //视频封面
    optional uint32 width                  = 3;  //图片宽度
    optional uint32 height                 = 4;  //图片高度
    optional string title                  = 5;  //标题
    optional uint64 duration               = 6;  //播放时长
    optional uint32 play_count             = 7;  //播放次数
    optional UserInfo user = 8;  //用户资料[同模板协议UserInfo]
}

message ImageExtData {
    optional uint32 join_num = 1; //参与人数
    optional string image1   = 2; //小封面1
    optional string image2   = 3; //小封面2
    optional string image3   = 4; //小封面3
}
message ImageData {
    optional string image_url = 1;  //封面url
    optional string jump_uri  = 2;  //跳转scheme
    optional uint32 width     = 3;  //图片宽度
    optional uint32 height    = 4;  //图片高度
    optional string title     = 5;  //标题
    optional RichText mark    = 6;  //封面运营角标[同模板协议RichText]
    optional uint32 ext_ui    = 7;  //ui样式。默认0=普通，1=附近小视频样式 2=关注好友的小视频样式
    optional ImageExtData ext_data = 8;  //扩展内容
}

message ButtonData {
    optional string button_text = 1;  //button文案
    optional string button_uri  = 2;  //点击button跳转scheme
    optional string image_url   = 3;  //头图
    optional string text        = 4;  //文案
    optional string jump_uri    = 5;  //点击封面跳转scheme
}

/****************** zhibo.recommend.videolist 拉小视频列表  end ******************/

// zhibo.recommend.videosublist 拉小视频二级页列表

message GetWaterfallSubListReq {
    required uint64 uid        = 1;  //拉列表的用户id
    optional uint32 oper_type  = 2;  //拉列表类型。默认0=第一屏或下滑刷新，1=上滑加载更多
    optional uint32 channel_id = 3;  //小视频二级页的频道id
    optional bytes param       = 4;  //拉列表算法参数[客户端不用关心，透传给服务器]。第一屏不用填，下一屏填rsp中的param
    optional Location location = 5;
}

message GetWaterfallSubListRsp {
    required uint32 ret      = 1;  //返回码
    repeated WatElement elem = 2;  //数据
    optional bytes param     = 3;  //拉列表算法参数[客户端不用关心，下一次请求透传给服务器]
    optional bool has_more   = 4;  //是否有更多小视频
}

/****************** zhibo.recommend.videolike 分页拉点赞的小视频列表  ******************/
message GetLikedVideoReq {
    required uint64 uid   = 1;  //点赞的用户id
    optional uint64 start = 2;  //当前页水位。默认0=第一屏，下一屏用rsp中的next_start
}

message GetLikedVideoRsp {
    required uint32 ret        = 1;  //返回码
    repeated WatElement elem   = 2;  //数据
    optional uint64 next_start = 3;  //下一页的水位。ret=0&next_start=0 表示列表拉完了
}


/****************** 直播间组模板 ******************/
message UiTemplateGroup {
    repeated GroupData items            = 1; //子item
    optional string headerName          = 2; //header的名字
    optional string headerViewAllUri    = 3; //查看全部的uri，如果没有这个字段不展示查看全部
    optional string subHeaderName       = 4; //header副标题
    optional uint32 headerUiType        = 5; //header样式,默认0=老样式,1=头条有正副标题样式,2=header name+">",3=带icon
    optional string header_icon         = 6; //header图标(字段为空且headerUiType=3时，客户端加本地默认图标)
    optional string headerViewAllText   = 7; //查看全部uri跳转的文案
}

message GroupData {
    optional string frameUri        = 1; //边框
    optional string coverUri        = 2; //封面图
    optional string jumpSchemeUri   = 3; //点击封面后的跳转
    repeated GroupMemberData member = 4; //乘员信息
    optional uint32 groupCnt        = 5; //分组人数
}

message GroupMemberData {
    optional string liveCover = 1;
}