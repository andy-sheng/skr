syntax = "proto3";

package com.zq.live.proto.Common;

/**

java -jar -Dfile.encoding=UTF-8 ./proto/wire-compiler-2.3.0-SNAPSHOT-jar-with-dependencies.jar \
--proto_path=./proto --java_out=./commoncore/src/main/java-gen-pb/ Common.proto

*/

// 用户信息
message UserInfo {
    uint32 userID = 1; //用户ID
    string nickName = 2; //发信者昵称
    string avatar = 3; //头像地址
    ESex sex = 4; //性别
    string description = 5; //个人描述
    bool isSystem = 6; //是否为系统
    uint32 mainLevel = 7; //主段位
    VipInfo vipInfo    = 8; //vip类型
    UserRanking ranking = 9; //排位信息
    HonorInfo honorInfo = 10;//会员信息
}

//背景效果
message BackgroundShowInfo
{
    string sourceURL = 1; //资源，使用效果
    string bgColor   = 2; //背景颜色
}

//爆灯效果
message BLightShowInfo
{
    string sourceURL = 1; //资源，使用效果
}


message HonorInfo
{
    EHonorType honorType = 1; //会员类型
}

enum EHonorType {
    EHT_UNKNOWN  = 0; //不是会员
    EHT_COMMON   = 1; //普通会员
}

//段位描述
message UserRanking
{
    uint32 mainRanking = 1; //主段位
    uint32 subRanking  = 2; //子段位
    int64 currExp      = 3; //进度条当前分值
    int64 maxExp       = 4; //进度条总分值
    string rankingDesc = 5; //段位描述。例如：白银歌者4段
}

message VipInfo
{
    EVIPType vipType = 1;  //认证类型
    string desc = 2;       // 认证描述
}

//加v类型
enum EVIPType {
    EVT_UNKNOWN  = 0; //未知：没有加v`
    EVT_RED_V    = 1; //红v
    EVT_GOLDEN_V = 2; //金v
}

// 音乐信息
message MusicInfo {
    uint32 itemID = 1; //音乐条目标识
    string itemName = 2; //音乐条目名称
    string cover = 3; //音乐条目封页图片
    string owner = 4; //音乐条目所属（歌手）
    string lyric = 5; //音乐条目对应歌词
    string ori = 6; //原唱:origin
    string acc = 7; //伴奏:accompany
    string midi = 8; //音乐条目对应midi文件
    string zip = 9; //资源压缩文件
    string rankBgm = 10; //匹配玩法的伴奏
    uint32 beginMs = 11; //beginTimeMs,匹配玩法的伴奏开始毫秒
    uint32 endMs = 12; //endTimeMs,匹配玩法的伴奏结束毫秒
    string standIntro = 13; //standIntro,一唱到底的导唱
    uint32 standIntroBeginT = 14; //standIntroBeginT,一唱到底导唱的开始毫秒
    uint32 standIntroEndT = 15; //standIntroEndT,一唱到底导唱的结束毫秒
    uint32 totalMs = 16; //totalTimeMs,匹配玩法伴奏总时长
    uint32 rankLrcBeginT = 17; //rankLrcBeginT,匹配玩法第一句歌词开始时间,毫秒
    uint32 standLrcBeginT = 18; //standLrcBeginT,一唱到底第一句歌词的开始毫秒
    uint32 standLrcEndT = 19; //standLrcEndT,一唱到底歌词的结束毫秒
    bool isBlank = 20; //isBlank,是否一唱到底的白板item
    string standLrc = 21; //standLrc,一唱到底歌词URL
    string rankUserVoice = 22; //rankUserVoice,匹配进入游戏前的背景音乐
    uint32 rankLrcEndT = 23; //rankLrcEndT,匹配玩法最后一句歌词的结束时间,毫秒
    uint32 task = 24; //任务等级，若为0，表示非任务歌曲
    uint32 standTotalMs = 25; //一唱到底伴奏模式的时长
    bool challengeAvailable = 26; //是否支持挑战模式
    StandPlayType playType = 27; //一唱到底演唱类型
    repeated MusicInfo SPKMusic = 28; //一唱到底模式下spk歌曲信息
    MiniGameInfo miniGame       = 29; //连麦小游戏演唱类型
    string writer = 30; //作词人
    string composer = 31; //作曲人
    string uploaderName = 32; //上传者用户名
    uint32 singCount    = 33; //演唱次数
    repeated uint32 relaySegments   = 34; //双人接唱歌词段落划分
}

message MiniGameInfo
{
    uint32 gameID   = 1;
    string gameName = 2;
    string gameRule = 3;
    EMiniGamePlayType gamePlayType = 4;
    string keyWord = 5;
    string fixedTxt = 6;
    MiniGameSongInfo songInfo  = 7;
}

message MiniGameSongInfo
{
    string songURL  = 1;
    string songName = 2;
}


enum EMiniGamePlayType
{
    EMGP_UNKNOWN  = 0; //未知展示类型
    EMGP_KEYWORD  = 1; //关键词展示
    EMGP_FIXED_TXT = 2; //固定文案
    EMGP_SONG_DETAIL = 3; //歌曲详情
}

message GiftInfo
{
    uint32 giftID      = 1; //礼物id
    string giftName    = 2; //礼物名称
    string giftURL     = 3; //礼物的图片
    uint64 price       = 4; //1000分之一钻单位 或者金币
    string sourceURL   = 5; //礼物资源，使用效果
    uint32 sortID      = 6; //排序id
    EGiftType giftType = 7; //礼物类型，钻石礼物、金币礼物
    bool canContinue   = 8; //是否可以连击
    string description = 9; //礼物描述
    float realPrice    = 10; //真实价格
    bool play                    = 11; //是否需要播放
    sint32 textContinueCount     = 12;
    EGiftDisplayType displayType = 13;
    GiftExtraInfo extra          = 14;
}


message GiftExtraInfo
{
    sint64 duration = 1;
    sint32 width    = 2;
    sint32 height   = 3;
    sint32 left     = 4;
    sint32 right    = 5;
    sint32 top      = 6;
    sint32 bottom   = 7;
    bool isFullScreen = 8; //是否全屏
    bool isFullX      = 9; //true 水平平铺  false 垂直平铺
}

// 礼物展示类型
enum EGiftDisplayType {
    EGDT_Unknown = 0;
    EGDT_Big     = 1;
    EGDT_Medium  = 2;
    EGDT_Small   = 3;
    EGDT_Free    = 4;
}



// 礼物类型
enum EGiftType {
    EG_Unknown = 0;
    EG_Coin    = 1;
    EG_Zuan    = 2;
    EG_SYS_Handsel = 3; // 系统赠送礼物（鲜花）
}


// 一唱到底playType
enum StandPlayType {
    PT_INVALID_TYPE = 0; //无效
    PT_COMMON_TYPE  = 1; //普通玩法
    PT_SPK_TYPE     = 2; //PK玩法
    PT_CHO_TYPE     = 3; //合唱玩法
    PT_MINI_GAME_TYPE = 4; //连麦进行小游戏玩法
    PT_FREE_MICRO     = 5; //自由麦玩法
}

enum ESex {
    SX_UNKNOWN = 0; // 未知
    SX_MALE = 1; //男性
    SX_FEMALE = 2; // 女性
    SX_SECRET = 3; //保密
}

enum ESceneType {
    ST_Unknown = 0; //未知场景
    ST_Game    = 1; //游戏场景
    ST_Sing    = 2; //唱歌场景
    ST_Chat    = 3; //聊天场景
}

message GamePanelInfo
{
    uint32 panelSeq             = 1; //面板序号
    repeated GameItemInfo items = 2; //游戏条目信息
}

message GameItemInfo
{
    uint32 itemID         = 1; //游戏id
        EGameType gameType    = 2; //游戏类型
        string desc           = 3; //描述说明
        GameMusic music       = 4; //音乐类游戏数据
        GameQuestion question = 5; //问答类游戏数据

}

enum EGameType {
    GT_Unknown  = 0; //未知场景
    GT_Music    = 1; //音乐类游戏
    GT_Question = 2; //问答类游戏
}


message GameQuestion
{
    string content = 1; //内容
}


message GameMusic
{
    string title   = 1; //标题
    string content = 2; //内容
    string example = 3; //举例
}


message ResourceInfo {
    uint32 resourceID = 1; //资源id
    uint32 itemID = 2; //音乐条目id
    string audioURL = 3; //声音资源URL
    string midiURL = 4; //打分资源URL
    sint32 sysScore = 5; //系统打分分值
}

message CombineRoomConfig
{
    sint32 durationTimeMs   = 1; //房间持续时间（4000ms）
    string maskMaleAvatar   = 2; //隐藏的男性用户头像
    string maskFemaleAvatar = 3; //隐藏的女性用户头像
    string roomSignature    = 4; //房间描述签名
}

message AgoraTokenInfo
{
    uint32 userID = 1; //用户id
    string token  = 2; //声网token
}

//房间类型
enum EMsgRoomMediaType {
    EMR_UNKNOWN = 0; // 未知
    EMR_AUDIO   = 1; // 音频房
    EMR_VIDEO   = 2; // 视频房
}

//背景效果
message BackgroundShowInfo
 {
    string sourceURL = 1; //资源，使用效果
    string bgColor   = 2; //背景颜色
 }

//爆灯效果
message BLightShowInfo
 {
    string sourceURL = 1; //资源，使用效果
 }