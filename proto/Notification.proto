syntax = "proto3";

import "Common.proto";

package com.zq.live.proto.Notification;

/**

java -jar -Dfile.encoding=UTF-8 ./proto/wire-compiler-2.3.0-SNAPSHOT-jar-with-dependencies.jar \
--proto_path=./proto --java_out=./commoncore/src/main/java-gen-pb/ Notification.proto

*/

// 房间消息：此结构会通过pb编码后，通过系统消息通道到达客户端
message NotificationMsg
{
    sint64 timeMs                = 1; //消息产生时间，单位毫秒
    ENotificationMsgType msgType = 2; //消息类型
    uint32 roomID                = 3; //房间ID,若不需要为0
    sint64 no                    = 4; //消息序号
    EMsgPosType posType          = 5; //消息显示位置类型
    Common.UserInfo sender              = 6; //发送者简要信息

    FollowMsg followMsg           = 10;
    InviteStandMsg inviteStandMsg = 11;
    SysWarningMsg sysWarningMsg   = 12;

    CombineRoomInviteMsg inviteMsg = 13; //双人房邀请信令
    CombineRoomEnterMsg enterMsg   = 14; //双人房进房信令
    CombineRoomRefuseMsg refuseMsg = 15; //双人房拒绝邀请信令
    CombineRoomInviteV2Msg inviteV2Msg = 16; //双人房邀请信令
}

enum ECombineRoomEnterType {
    CRET_UNKNOWN = 0; //未知
    CRET_INVITE  = 1; //通过普通邀请方式，获取房间数据后进房
    CRET_MATCH   = 2; //通过匹配方式，获取房间数据后进房
    CRET_CREATE  = 3; //通过创建房间邀请方式，获取房间数据后进房
}

message CombineRoomEnterMsg
{
    ECombineRoomEnterType enterType = 1; //进房方式
    uint32 roomID                   = 2; //房间ID
    sint64 createdTimeMs            = 3; //房间创建的时间戳
    sint64 passedTimeMs             = 4; //房间已经经历的毫秒数
    repeated Common.UserInfo users         = 5; //玩家信息
    Common.CombineRoomConfig config        = 6; //配置信息
    repeated Common.AgoraTokenInfo tokens  = 7; //声网token
    bool needMaskUserInfo           = 8; //是否需要隐藏用户信息
}

message CombineRoomRefuseMsg
{
    Common.UserInfo user    = 1; //拒绝行为发出的用户信息
    string refuseMsg = 2; //拒绝反馈文案
}

enum EInviteType {
    IT_UNKNOWN          = 0; //未知
    IT_OUT_COMBINE_ROOM = 1; //在双人房间外邀请
    IT_IN_COMBINE_ROOM  = 2; //在双人房间内邀请
}

message CombineRoomInviteMsg
{
    EInviteType inviteType = 1; //邀请类型
    Common.UserInfo user          = 2; //发起邀请的用户详情
    string inviteMsg       = 3; //邀请信息
    uint32 roomID          = 4; //房间id
}

message CombineRoomInviteV2Msg
{
    EInviteType inviteType = 1; //邀请类型
    Common.UserInfo user   = 2; //发起邀请的用户详情
    string inviteMsg       = 3; //邀请信息
    uint32 roomID          = 4; //房间id
}



// ENotificationMsgType 房间消息类型
enum ENotificationMsgType {
    NM_UNKNOWN = 0; //未知消息

    NM_FOLLOW       = 1; //关注类型
    NM_INVITE_STAND = 2; //一唱到底邀请
    NM_SYS_WARNING_MSG = 3; //系统警告

    NM_CR_INVITE = 4; //双人房邀请信令
    NM_CR_ENTER  = 5; //双人房进房信令
    NM_CR_REFUSE = 6; //双人房拒绝邀请信令
    NM_CR_INVITEV2 = 7; //双人房邀请信令
}

message FollowMsg
{
    Common.UserInfo user = 1; //发起关注的用户详情
    bool isFriend = 2; //是否好友
    bool isFollow = 3; //是否关注
}

message InviteStandMsg
{
    Common.UserInfo user = 1; //发起邀请的用户详情
    uint32 roomID = 2; //房间id
    Common.EMsgRoomMediaType mediaType = 3; //房间类型(1:音频房 2:视频房)
    uint32 tagID                = 4; // 房间专场id
}

message SysWarningMsg
{
    string title   = 1; //系统警告标题
    string content = 2; //系统警告内容
}


// 消息位置类型
enum EMsgPosType {
    EPT_UNKNOWN = 0; // 未知位置
    EPT_NORMAL = 1; // 一般评论消息
    EPT_CENTER = 2; // 在整个页面中心区域显示的消息
    EPT_TOP = 3; // 页面上方
    EPT_BOTTOM = 4; // 页面底部
}
