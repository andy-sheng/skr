syntax = "proto2";
package com.wali.live.proto;

option java_package = "com.wali.live.proto";
option java_outer_classname = "LiveShowProto";

/* 基础PB，wiki地址：http://wiki.n.miui.com/pages/viewpage.action?pageId=21226835*/

//存放直播记录中主播部分信息
message UserShow {
    required uint64 uId = 1; //用户id
    optional string nickname = 2; //昵称
    optional uint64 avatar = 3; //头像时间戳
    optional uint32 level = 4; //等级
    optional uint32 certType = 5; //认证类型
    optional uint32 gender = 6; //性别（客户端不用关心）
    optional string certification      = 7;  //认证信息
    optional string sign      = 8;  //签名
}
//一条直播记录
message LiveShow {
    required string liId = 1; //直播id
    required UserShow user = 2; //主播信息
    optional string location = 3; //地点
    optional uint32 viewerCnt = 4; //观众数
    optional string url = 5; //直播地址
    optional uint32 liType = 6; //直播类型,公开:0 私密:1 回放:2 pk:3 口令:4
    optional string liTitle = 7; //直播标题
    optional string shareUrl = 8; //分享地址（回放用到）
    optional uint64 startTime = 9; //直播开始时间（回放用到）
    optional PKLive pkInfo = 10; //pk信息
    optional string coverUrl = 11; //房间的封面图片地址
    optional string tag = 13; //个性化标签(打点上报)
    optional uint32 appType = 14; //0=小米直播app, 1=无人机, 2=导播台, 3=游戏, 4=一直播
}

//pk信息
message PKLive {
    optional string liveId = 1; //pk的直播房间id
    optional UserShow user = 2; //pk的主播信息
}

//一组带标签的直播记录
message TagShow {
    optional string tagName = 1; //标签名称
    repeated LiveShow lives = 2; //直播列表集
}

//一条回放记录详情
message BackInfo {
    required string baId = 1; //回放id
    optional uint32 viewerCnt = 2; //观众数
    optional string url = 3; //回放地址
    optional uint64 startTime = 4; //直播开始时间
    optional uint64 endTime = 5; //直播结束时间
    optional string baTitle = 6; //回放标题
    optional string shareUrl = 7; //分享地址
    optional string coverUrl = 8; //房间的封面图片地址
    optional string addr = 9; //地点
    optional uint32 replay_type = 10; //回放类型，公开:0 私密:1 口令:2 门票:3

}
//一个用户的回放记录
message BackShow {
    required UserShow user = 1; //主播信息
    repeated BackInfo infos = 2; //回放详情

}

//一个用户的单条回放记录
message SingleBackShow {
    required UserShow user = 1; //主播信息
    required BackInfo back = 2; //回放详情
}

message FreshInfo {
    optional bool isAuto = 1; //是否自动刷新
    optional uint64 interval = 2; //刷新的时间间隔
}

message ChannelShow {
    required uint64 cId = 1; //频道id
    required string cName = 2; //频道名称
    optional bool hasChild = 3; //是否有子频道,现不用
    optional uint32 liveCnt = 4; //直播数目, 现不用
    optional uint32 uiType = 5; //客户端UI展示类型, 默认=1,分类=2,三列=3,二列=4,动态页样式:5,网页:6
    optional FreshInfo fresh = 6; //刷新信息
    optional string url = 7; //类型是6的时候必须
    optional uint32 flag = 8; //控制位,第1位表示是否有搜索框
    optional string iconUrl  = 9;  //频道图标地址[子频道]
    optional ChannelStyle style = 10; //频道主题风格
}

message ChannelStyle {
    optional string bg_color        = 1; //导航栏底色，十六进制颜色码, 如 #FFFFFF = 白色
    optional string highlight_color = 2; //频道高亮选中的颜色，十六进制颜色码, 如 #FFFFFF = 白色
    optional string normal_color    = 3; //频道正常的颜色，十六进制颜色码, 如 #FFFFFF = 白色
    optional string status_bar_color= 4; //系统状态栏字体颜色，十六进制颜色码, 如 #FFFFFF = 白色
}

/* 1 拉关注列表 请求和返回 */
message GetConcernsReq {
    required uint64 uId = 1; //用户id
}

message GetConcernsRsp {
    required uint32 ret = 1; //返回码
    optional uint64 uId = 2; //用户id
    repeated LiveShow lives = 3; //关注的人直播信息
    repeated BackShow backs = 4; //回放信息
}

/* 2 拉取子频道列表 请求和返回 */
message GetChannelsReq {
    required uint64 fcId = 1; //父频道id,默认为0,拉取一级频道列表
    optional uint32 appType = 2; //默认0=小米直播,1=电视接入,2=米聊接入,3=新米聊
    optional uint32 channel_version = 3; //频道列表版本,4.8及以上版本必填字段,服务器通过这个字段取不同的列表存储
}
message GetChannelsRsp {
    required uint32 ret = 1;            //返回码
    optional uint64 fcId = 2;           //父级频道id
    repeated ChannelShow channels = 3;  //各频道直播信息，包括直播人数
    optional uint64 defChannelId  = 4;  //默认展示频道(当不存在此频道，客户端走自己默认逻辑)
}

/* 3 拉取直播列表 请求和返回 */
message GetLivesReq {
    required uint64 cId = 1; //频道id
    optional uint32 gender = 2; //性别，默认0 全部，1 男， 2 女
}

message GetLivesRsp {
    required uint32 ret = 1; //返回码
    optional uint64 cId = 2; //频道id
    repeated LiveShow lives = 3; //直播列表
}

/* 4 拉取回放列表 请求和返回 */
message GetBacksReq {
    required uint64 uId = 1; //用户id
}

message GetBacksRsp {
    required uint32 ret = 1; //返回码
    optional uint64 uId = 2; //用户id
    optional BackShow back = 3; //回放
}

/* 5 拉取关注的回放列表 请求和返回 */
message GetConcBackReq {
    required uint64 uId = 1; //用户id
}

message GetConcBackRsp {
    required uint32 ret = 1; //返回码
    optional uint64 uId = 2; //用户id
    repeated BackShow back = 3; //回放列表
}

/* 6 删除回放 请求和返回 */
message DelBackReq {
    required uint64 uId = 1; //用户id
    repeated string baId = 2; //回放id
}
message DelBackRsp {
    required uint32 ret = 1; //返回码
    optional uint64 uId = 2; //用户id
}

/* 7 拉取带标签的直播列表 请求和返回 */
message GetTagLivesReq {
    required uint64 cId = 1; //频道id
    optional uint32 gender = 2; //性别 , 默认0 全部,1 男,2 女
}
message GetTagLivesRsp {
    required uint32 ret = 1; //返回码
    optional uint64 cId = 2; //频道id
    repeated TagShow tags = 3; //带标签的直播列集
}

/* 8 拉取话题直播列表 请求和返回 */
message GetTopicLiveReq {
    required string topic = 1; //话题名字
    optional uint32 liveType = 2; //类型，默认0:直播,1:回放,2:直播和回放
    optional uint32 pageNum = 3; //页码,默认1
    optional uint32 sortType = 4; //排序类型,默认0=人数,1=cms
}

message GetTopicLiveRsp {
    required uint32 ret = 1; //返回码
    optional string topic = 2; //话题名字
    repeated LiveShow lives = 3; //直播列表
    repeated SingleBackShow backs = 4; //回放列表
    optional uint32 pageCnt = 5; //总页数
}

message GetSignInStatusReq {
    required uint64 uuid = 1; //用户ID
}

message GetSignInStatusRsp {
    required uint32 retCode = 1; //0:表示成功
    optional uint32 displayStatus = 2;//显示状态,0:不显示签到,1：显示签到
    optional uint32 signInStatus = 3;//签到状态,0:未签到,1:已签到
    optional string signInUrl = 4;//签到跳转url
    optional uint32 queryInterval = 5;//查询时间间隔,单位:秒
}