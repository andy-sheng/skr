syntax = "proto2";
import "LiveShow.proto";

package com.wali.live.proto;

option java_package = "com.wali.live.proto";
option java_outer_classname = "Feeds";

//基本数据相关PB, begins *******************************************

message CommentInfo {
    required uint64 comment_id = 1;
    required uint64 from_uid = 2;
    required string content = 3;
    required uint64 create_time = 4;
    optional uint64 to_uid = 5;
    optional string from_nickname = 6;
    optional string to_nickname = 7;

    optional uint64 index_ts = 8; //排序时间戳
    optional bool is_good = 9; //是否是热门评论
    optional uint32 from_user_level = 10; //评论作者等级
    optional uint64 from_avatar = 11; //头像
    optional uint32 comment_type = 12; // 0 默认 1 分享被动评论
}

message FeedComment {
    required string feed_id = 1;
    optional uint64 feed_owner_id = 2;
    optional uint32 total = 3; //总数
    repeated CommentInfo comment_infos = 4;
}

//赞结构体
message FeedLike {
    required uint64 zuid = 1; //用户ID
    optional uint64 ts = 2; //赞的时间戳
    optional string userName = 3; //点赞用户的昵称
}

/** 用户的UGCFeed相关******/
message UGCFeed {
    required int32 type = 1; //1 图片， 2. 小视频，6 作品
    optional string url = 2; // 表示图片或视频的url
    optional string cover_page = 3; //小视频的封面url，
    optional string desc = 4; //描述信息
    optional string addr = 5; //地点
    optional string share_url = 6; //分享地址
    optional uint32 height = 7; //图片或者小视频高度
    optional uint32 width = 8; //图片或者小视频宽度
    optional uint64 duration = 9; //小视频时长，单位ms
    optional uint64 file_size = 10; //文件大小，bytes
    optional string tiltle = 11; //标题
    optional uint32 ext_type = 12; //扩展类型, 1. 日志类型(BlogFeed)
    optional bytes ext_data = 13; //扩展信息，比如日志详情(BlogFeed)
    optional uint32 view_count = 14; //浏览次数
    optional UserShow host_user_info = 15; //ext_type = 2, 被录屏幕者信息
    optional LiveInfo liveInfo = 16; //只有作品才会关联直播信息
    optional Location location = 17;//地点,版权发位置信息，回放录屏不传
}
/** Feed的内容***/
message FeedContent {
    required uint32 feedType = 1; //Feed的Type类型.0 直播，1 图片，2. 小视频， 3 回放视频, 4, 直播结束，等待回放 5,聚合回放
    optional LiveShow liveShow = 2;
    optional BackInfo backInfo = 3;
    optional UGCFeed ugcFeed = 4;
    optional ReplaySet replaySet = 5;
}

// 聚合回放
message ReplaySet {
    repeated BackInfo backinfos = 1;
    optional uint64 createTime = 2;
}

/** Feed点赞内容***/
message FeedLikeContent {
    repeated FeedLike feedLikeList = 1; //点赞用户ID列表，按时间排序后的
    required uint32 likeCount = 2; //点赞总人数
    optional bool hasMore = 3; //是否还有-更多
    optional bool myselfLike = 4; //是否给自己点赞
}

/*** Feed的相关评论****/
message FeedAbstractComment {
    repeated CommentInfo comment = 1;
    optional uint32 commentNumbers = 2; //点赞总人数
    optional bool hasMore = 3; //是否还有评论-详情
}

/*** 单个Feed详情****/
message FeedInfo {
    required uint32 type = 1; //FeedInfo的Type类型.0代表正常的Feed、1代表推荐列表、
    required string feedId = 2; //帖子ID
    required uint64 feedCteateTime = 3; //时间戳
    required uint64 userId = 4;
    optional FeedContent feedContent = 5; //单条Feed的具体内容
    optional FeedLikeContent feedLikeContent = 6; //单条Feed的点赞
    optional FeedAbstractComment feedAbstractComment = 7; //单条Feed的评论
    optional UserShow userShow = 8; //主播信息
    optional string clientId = 9; //客户端id
}

//基本数据相关PB, ends ********************************************

//获取单条Feeds详情 相关PB, begins ************************************

/** 拉取个人feeds总数, zhibo.feeds.feed_num**/
message GetFeedNumRequest {
    required int64 id = 1; //用户id
    optional int32 type = 2; // 0：动态 1作品  2全部信息(包括动态/作品)
}
message GetFeedNumResponse {
    required int32 err_code = 1; //返回码
    required int32 feed_num = 2; //动态数
    optional string err_msg = 3; //错误信息
}

/** 获取Feed详情Request , cmd = zhibo.feed.getFeedInfo***/
message GetFeedInfoRequest {
    required uint64 userId = 1; //用户ID
    required string feedId = 2; //FeedId
    optional bool isOnlyFocus = 3; //是否只拉取关注人的赞
    optional uint64 feedOwnerId = 4;
}

/** 获取Feed详情Response***/
message GetFeedInfoResponse {
    required uint32 ret = 1;
    optional FeedInfo feedInfo = 2;
}

//获取单条Feeds详情 相关PB, ends ******************************************

//获取Feeds list相关PB, begins *****************************************

/** 获取Feed列表Request, cmd = zhibo.feed.getFeedList***/
message GetFeedListRequest {
    required uint64 userId = 1; //用户ID
    required uint64 start = 2; //时间戳.第一屏填写0
    required uint64 end = 3; //时间戳.第一屏填写0
}

/** 获取Feed列表Response***/
message GetFeedListResponse {
    required uint32 ret = 1;
    required uint64 start = 2; //时间戳.在ret=0时候，值才是有效值
    repeated FeedInfo feedInfoList = 3; //Feed列表<一组Feed>
}

//获取Feeds list相关PB, ends *****************************************

//获取个人主页 Feeds Info相关PB, begins *********************************

/** 获取Feed列表Request, cmd = zhibo.feed.userPageFeedList***/
message GetUserPageFeedListRequest {
    required uint64 userId = 1; //用户ID
    required uint64 timestamp = 2; //时间戳.第一屏填写0
    optional string feedId = 3;
}

/** 获取Feed列表Response***/
message GetUserPageFeedListResponse {
    required uint32 ret = 1;
    required uint64 timestamp = 2; //
    repeated FeedInfo feedInfoList = 3; //Feed列表<一组Feed>
}
// //获取个人主页 Feeds Info相关PB, ends *********************************

/** Feed列表为空时，推荐关注人, cmd = zhibo.feed.recomUsers***/
message GetRecommedUsersRequest {
    required uint64 userId = 1; //feed用户ID
    optional uint32 size = 2; //0或者不传，返回全量，否则返回指定size的用户列表
}

message Tag {
    required string name = 1; //标签名称
}

message RecomUsers {
    required uint64 uId = 1; //用户id
    optional string nickname = 2; //昵称
    optional uint64 avatar = 3; //头像时间戳
    optional uint32 level = 4; //等级
    optional uint32 certType = 5; //认证类型
    optional uint32 gender = 6; //性别
    optional uint32 followerNum = 7; //粉丝数
    optional string certification = 8; //认证信息
    repeated Tag tags = 9; //标签
    optional string mTag = 10; //打点子段

}

message GetRecommedUsersResponse {
    required uint32 ret = 1;
    repeated RecomUsers users = 2; //推荐用户列表
}

//点赞相关PB begins ****************************************

//1. 点赞
//cmd = zhibo.feeds.like
message FeedLikeReq {
    required uint64 zuid = 1; //用户ID
    required string feedId = 2; //FeedId
    optional string userName = 3; //点赞用户的昵称
    optional uint64 feedUserId = 4; //发feed人的ID
    optional uint32 feedType = 5; // 0 默认 1 小视频
}
message FeedLikeRsp {
    required uint32 ret = 1;
    optional uint64 ts = 2; //赞的时间(毫秒)
    optional string errMsg = 3; //错误消息
}
//2. 取消赞
//cmd = zhibo.feeds.like_delete
message FeedLikeDeleteReq {
    required uint64 zuid = 1; //用户ID
    required string feedId = 2; //FeedId
    optional uint64 feedUserId = 3; //发feed人的ID
    optional uint32 feedType = 4; // 0 默认 1 小视频

}
message FeedLikeDeleteRsp {
    required uint32 ret = 1;
    optional string errMsg = 2;
}
//3. 获取赞列表
//cmd = zhibo.feeds.like_list
message FeedLikeListReq {
    required string feedId = 1; //FeedId
    optional uint32 offset = 2; //上次拉取到的位置，第一次为0，下次为offset+limit
    optional uint32 limit = 3; //拉取的条数,上线为100
}
message FeedLikeListRsp {
    required uint32 ret = 1;
    repeated FeedLike feeds = 2; //点赞的用户列表
}

//点赞相关PB ends ****************************************

//评论相关PB begins ******************************************

/********* zhibo.feeds.create_comment*********/
message CreateFeedCommnetRequest {
    required uint64 from_uid = 1; //发评论人id
    required string feed_id = 2; //feed_id
    required uint64 feed_owner_id = 3;
    required string content = 4; //评论内容
    optional string from_nickname = 5; //发评论人的昵
    optional uint64 to_uid = 6; //被回复的用户id
    optional string to_nickname = 7; //被评论的用户昵称
    optional uint32 feedType = 8; // 0 默认 1 小视频
    optional uint32 comment_type = 9; // 0 默认 1 分享被动评论
}
message CreateFeedCommnetResponse {
    required uint32 err_code = 1; //值为17506表示用户已被对方拉黑, 无法发表评论
    optional uint64 commnet_id = 2;
    optional uint64 create_time = 3;
}

/********* zhibo.feeds.delete_comment *********/
message DeleteFeedCommnetRequest {
    required uint32 from_uid = 1; //发评论人id
    required string feed_id = 2; //feed_id
    required uint32 commnet_id = 3;
    optional uint64 owner_id = 4;
    optional uint32 feedType = 5; // 0 默认 1 小视频

}
message DeleteFeedCommnetResponse {
    required uint32 err_code = 1;
}

/********* 拉取评论 zhibo.feeds.query_comment *********/
message QueryFeedCommentsRequest {
    required string feed_id = 1; //feed_id
    required uint64 ts = 2; //第一次传0，下次为返回的last_ts
    required uint32 limit = 3; //拉取的条数，最大100
    optional bool is_only_focus = 4; //是否只拉取关注人的评论，默认拉取所有人的评论
    optional bool is_asc = 5; //是否正序
    optional uint32 type = 6 [default = 0]; //评论类型 1：热门评论  2：全部评论    0：代表老客户端拉取模式：热门和非热门评论混在一起，热门排在非热门的前面
}
message QueryFeedCommentsResponse {
    required uint32 err_code = 1;
    required uint64 last_ts = 2;
    optional FeedComment feed_comment = 3; //返回的评论数据小于请求的limit时，代表拉到了最后
    optional bool has_more = 4;
    optional string errMsg = 5;
}
/******** 查询特定范围评论 zhibo.feeds.query_particular_comment **********************/
message QueryParticularCommentsRequest {
    required string feed_id = 1; //feedId
    required uint64 comment_id = 2; //特定评论id
    optional uint32 up_num = 3; //获取特定评论id向上的评论数
    optional uint32 down_num = 4; //获取特定评论id向下的评论数
}
message QueryParticularCommentsResponse { //如果请求中没有up_total和down_toal字段，则默认返回属于feedid的所有评论
                                          required uint32 err_code = 1;
                                          repeated CommentInfo comment_infos = 2; //返回的评论，包含请求中的特定评论
                                          optional uint32 up_total = 3; //实际返回的评论数
                                          optional uint32 down_total = 4; //实际返回的评论数
                                          optional string err_msg = 5; //错误消息
}

//评论相关PB ends ******************************************

//feeds 操作相关PB begins **************************************

/********* 创建feeds协议 ServiceCmd=zhibo.feeds.create *********/
//此命令字创建图片，小视频feed，直播feed通过创建房间获取,zhibo.live.begin， 回放feeds在后台生成回放时创建FeedInfo
message CreateFeedsRequest {
    required int64 id = 1; //用户id
    required int32 type = 2; //1 图片， 2. 小视频，
    optional string url = 3; // 表示图片或视频的url
    optional string cover_page = 4; //小视频的封面url，
    optional string desc = 5; //描述信息
    optional Location addr = 6; //地点
    optional string client_id = 7; //客户端id
    optional string md5 = 8; //md5
    optional string title = 9; //标题,预留字段，通过客户端创建feed时不需要设置，仅cms设置
    optional uint32 height = 10; //图片或者小视频高度
    optional uint32 width = 11; //图片或者小视频宽度
    optional uint64 duration = 12; //小视频时长，单位ms
    optional uint64 file_size = 13; //文件大小，bytes
    optional uint32 ext_type = 14; //扩展类型：１. 日志类型 2. 回放录屏(RoomRecord)
    optional bytes ext_data = 15; //扩展信息，比如日志详情(BlogFeed), 回放录屏(RoomRecord)
    optional uint32 channel_id = 16; //频道id（透传，cms分类使用）
}

message Location {
    optional double lon = 1; //经度
    optional double lat = 2; //纬度
    optional string country = 3; //国家
    optional string province = 4; //省份
    optional string city = 5; //市
    optional uint32 type = 6; //地址定位的地图类型：0:百度，1:ios原生，2:高德,3:其他CommentInfo
}

message CreateFeedsResponse {
    required int32 err_code = 1; //返回码
    optional string feed_id = 2; //
    optional int64 create_time = 3; //feed创建时间
    optional string err_msg = 4; //错误信息
    optional string share_url = 5; //小视频分享url
}

/********* 删除feeds协议 ServiceCmd=zhibo.feeds.delete *********/
message DeleteFeedsRequest {
    required int64 id = 1; //用户id
    required string feed_id = 2; //feed_id
    optional int32 type  =  3;//0:原动态 1:作品
}
message DeleteFeedsResponse {
    required int32 err_code = 1; //返回码
    optional string err_msg = 2; //错误信息
}

//feeds 操作相关PB ends ******************************************************

/*********zhibo.feeds.new_feed 拉最新动态，小红点*********/
message GetNewFeedRequest {
    required int64 uid = 1;
    required int64 last_update_time = 2;
}
message GetNewFeedResponse {
    required int32 err_code = 1;
    optional int64 new_uid = 2;
    optional uint64 new_uid_icon = 3;
    optional string new_feed_id = 4;
    optional int64 last_update_time = 5;
}

//回放和小视频的统计, 命令字: zhibo.feeds.set_stat_info
message SetFeedsStatInfoReq {
    required string feed_id = 1;
    optional int64 feed_owner_id = 2;
    optional int32 type = 3; //类型：目前只有回放 type=3, 小视频 type=2
}
message SetFeedsStatInfoResp {
    required uint32 code = 1;
    optional string errMsg = 2;
    optional int64 viewcount = 3; //返回目前观看人数
}

/****************多媒体feed类型定义 begins ********************/
//直播录屏信息
message RoomRecord {
    optional uint64 host_id = 1; //主播id
    optional string room_id = 2; //主播房间id
    optional uint32 liType = 3; //直播类型 ,公开:0 私密:1 密码 2 门票 3
    optional uint32 app_type = 4; //0=小米直播app, 1=无人机, 2=导播台, 3=游戏, 4=一直播
    optional string room_title = 5; //直播标题
    optional string live_cover = 6; //封面
}
//多媒体feed类型定义
message BlogFeed
 {
 repeated MultiMedia multi_media =1;
 repeated UserShow refered_users = 2;
 optional uint32 max_item_id = 3;//服务器生成，对客户端透明
 optional uint32 cp_id = 4;//服务器生成，对客户端透明
}
message MultiMedia
{
optional uint32 media_type =1; //多媒体类型： 1 图片 2 视频 3 文本 4 超链接 5. 用户链接
optional bytes media_data =2;//多媒体数据: 图片Picture 视频:Video 文本Text 超链接Hyperlink 用户链接 Userlink
optional uint32 id = 5;//id，服务器生成，长文feed内部唯一

}
//图片类型
message Picture {
    optional string url = 1; //直播表示 拉流地址， 其他表示url
    optional uint32 height = 2; //图片或者小视频高度
    optional uint32 width = 3; //图片或者小视频宽度
    optional string desc = 4; //图片描述
}
//视频类型
message Video
{
optional string url = 1;//直播表示 拉流地址， 其他表示url
optional string cover_page = 2;//表示封面url，图片类型除外
optional uint32 height = 3;//图片或者小视频高度
optional uint32 width = 4;//图片或者小视频宽度
optional uint64 duration =5;//小视频时长，单位ms
optional uint64 file_size = 6;//文件大小，bytes
optional string desc =7; //视频描述
}
//文本类型
message Text
{
optional uint32 type =1; //1 标题 2 正文
optional string content =2; //文本内容
optional bool is_inner = 3;//ture：内部元素，无需换行。 false或不存在：非内部元素，需要换行
}
//超链接类型
message Hyperlink
{
optional string desc = 1; //链接描述
optional string url = 2;//链接地址
optional bool is_inner = 3;//ture：内部元素，无需换行。 false或不存在：非内部元素，需要换行
}
//用户类型
message Userlink
{
optional uint64 uid = 1;
optional bool is_inner = 2;//ture：内部元素，无需换行。 false或不存在：非内部元素，需要换行

}
//获取小视频标题列表
//zhibo.feeds.get_title_list
message GetTitleListReq {
    optional uint64 uuid = 1;
    repeated uint32 source = 2; //3：小视频
}

message GetTitleListRsp {
    required uint32 ret_code = 1;
    repeated TitleInfo title_info = 2;
}

message TitleInfo{
    optional uint32 source=1;//同上
    optional uint32 user_colony=2;//用户群（现未使用）
    repeated string title_list=3;//标题内容
}
/****************多媒体feed类型定义 ends ********************/

/************************关注频道获取****************************/

/** Feed列表Request, cmd = zhibo.feed.getHomePageFeedList***/
message GetHomePageFeedListRequest {
    required uint64 userId = 1; //用户ID
    required uint64 start = 2; //时间戳.第一屏填写0
}

/** 获取Homepage Feed列表Response***/
message GetHomePageFeedListResponse {
    required uint32 ret = 1;
    required uint64 start = 2; //时间戳.在ret=0时候，值才是有效值
    repeated LiveInfo liveInfo = 3; //直播
    repeated UserFornoticeInfo fornotices = 4; //预告
    repeated FeedInfo feedInfoList = 5; //回放, 回放合集
}

message FornoticeInfo {
    required uint64 owner_id = 1;
    required string fornotice_id = 2;
    optional uint64 begin_time = 3;
    optional string title = 4;
    optional uint32 type = 5; //1. 直播类型预告
    optional string img_url = 6; //配图url
    optional uint64 end_time = 7;
    optional string desc = 8;
    optional string client_id = 9; //客户端去重，类似feed的clientid
    optional string md5 = 10; //md5
    optional uint32 height = 11; //图片或者小视频高度
    optional uint32 width = 12; //图片或者小视频宽度
    optional uint32 status = 13; //1. 正常 2. 撤销
}

message UserFornoticeInfo {
    required FornoticeInfo fornotice_info = 1; //预告信息
    optional bool is_booked = 2; //是否预约,预留字段
    optional UserBrief user_info = 3; //用户资料
}

message UserBrief {
    required uint64 uId = 1; //用户id
    optional string nickname = 2; //昵称
    optional uint64 avatar = 3; //头像时间戳
    optional uint32 level = 4; //等级
    optional uint32 certType = 5; //认证类型
}
//购物直播信息
message ShopBrief {
    optional bool hideGoods = 1; //是否隐藏商品
    optional uint32 desiredCnt = 2; //想要购买人数
}

//一条直播记录
message LiveInfo {
    required string liveId = 1; //直播id
    optional UserBrief user = 2; //主播信息
    optional string location = 3; //地点
    optional uint32 viewerCnt = 4; //观众数
    optional string url = 5; //直播地址
    optional string coverUrl = 6; //房间的封面图片地址
    optional string liTitle = 7; //直播标题
    optional uint64 startTime = 8; //直播开始时间
    optional string tag = 9; //个性化标签(打点上报)
    optional ShopBrief shop = 10; //购物信息[has判断有该字段,说明是购物直播]
    optional uint32 appType = 11; //0=小米直播app, 1=无人机, 2=导播台, 3=游戏, 4=一直播
    optional uint32 liveType = 12; //直播类型[和房间接口一致]. 0=公开, 1=私密, 2=口令, 3=门票
    optional string gameTag = 13; //游戏直播tag名称
}

/** 获取Feed列表Request, cmd = zhibo.feed.getUgcFeedList***/
message GetUgcFeedListRequest {
required uint64 userId =1;//用户ID
required uint64 start = 2;//时间戳.第一屏填写0
}
/** 获取Feed列表Response***/
message GetUgcFeedListResponse {
required uint32 ret= 1;
required uint64 start = 2;//时间戳.在ret=0时候，值才是有效值
repeated FeedInfo feedInfoList = 3;//图片小视频
}

/** 获取作品列表Request, cmd = zhibo.feed.getVideoFeedList***/
message GetVideoFeedListRequest {
required uint64 userId =1;//用户ID
required uint64 start = 2;//时间戳.第一屏填写0
}
/** 获取作品列表Response***/
message GetVideoFeedListResponse {
required uint32 ret= 1;
required uint64 start = 2;//时间戳.在ret=0时候，值才是有效值
repeated FeedInfo feedInfoList = 3;//图片小视频
}
/** 获取作品列表Request, cmd = zhibo.feed.userVideoFeedList***/
message GetUserVideoFeedListRequest {
required uint64 userId =1;//feed用户ID
required uint64 timestamp = 2;//时间戳.第一屏填写0
optional string feedId = 3;
}
/** 获取作品列表Response***/
message GetUserVideoFeedListResponse {
required uint32 ret= 1;
required uint64 timestamp = 2;//
repeated FeedInfo feedInfoList = 3;//Feed列表<一组Feed>
}
/** 获取作品详情Request , cmd = zhibo.feed.getVideoFeedInfo***/
message GetVideoFeedInfoRequest {
required uint64 userId =1;//发起请求的用户ID
required string feedId =2;//FeedId
optional bool isOnlyFocus =3; //是否只拉取关注人的赞
optional uint64 feedOwnerId =4;
optional Location location = 5;//发起请求的用户位置
}
/** 获取作品详情Response***/
message GetVideoFeedInfoResponse {
required uint32 ret= 1;
optional FeedInfo feedInfo = 2;
optional double distance = 3; //距离
}

