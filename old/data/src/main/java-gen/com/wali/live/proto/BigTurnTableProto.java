// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BigTurnTable.proto

package com.wali.live.proto;

public final class BigTurnTableProto {
  private BigTurnTableProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.wali.live.proto.TurntableType}
   */
  public enum TurntableType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TYPE_128 = 0;</code>
     *
     * <pre>
     *128钻
     * </pre>
     */
    TYPE_128(0, 0),
    /**
     * <code>TYPE_500 = 1;</code>
     *
     * <pre>
     *500钻
     * </pre>
     */
    TYPE_500(1, 1),
    ;

    /**
     * <code>TYPE_128 = 0;</code>
     *
     * <pre>
     *128钻
     * </pre>
     */
    public static final int TYPE_128_VALUE = 0;
    /**
     * <code>TYPE_500 = 1;</code>
     *
     * <pre>
     *500钻
     * </pre>
     */
    public static final int TYPE_500_VALUE = 1;


    public final int getNumber() { return value; }

    public static TurntableType valueOf(int value) {
      switch (value) {
        case 0: return TYPE_128;
        case 1: return TYPE_500;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TurntableType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TurntableType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TurntableType>() {
            public TurntableType findValueByNumber(int number) {
              return TurntableType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final TurntableType[] VALUES = values();

    public static TurntableType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private TurntableType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.wali.live.proto.TurntableType)
  }

  /**
   * Protobuf enum {@code com.wali.live.proto.ToWhom}
   */
  public enum ToWhom
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ANCHOR = 0;</code>
     *
     * <pre>
     *主播
     * </pre>
     */
    ANCHOR(0, 0),
    /**
     * <code>SELF = 1;</code>
     *
     * <pre>
     *用户自己
     * </pre>
     */
    SELF(1, 1),
    ;

    /**
     * <code>ANCHOR = 0;</code>
     *
     * <pre>
     *主播
     * </pre>
     */
    public static final int ANCHOR_VALUE = 0;
    /**
     * <code>SELF = 1;</code>
     *
     * <pre>
     *用户自己
     * </pre>
     */
    public static final int SELF_VALUE = 1;


    public final int getNumber() { return value; }

    public static ToWhom valueOf(int value) {
      switch (value) {
        case 0: return ANCHOR;
        case 1: return SELF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ToWhom>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ToWhom>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ToWhom>() {
            public ToWhom findValueByNumber(int number) {
              return ToWhom.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final ToWhom[] VALUES = values();

    public static ToWhom valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ToWhom(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.wali.live.proto.ToWhom)
  }

  /**
   * Protobuf enum {@code com.wali.live.proto.GiftType}
   */
  public enum GiftType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VIRTUAL_GIFT = 0;</code>
     */
    VIRTUAL_GIFT(0, 0),
    /**
     * <code>VIRTUAL_DIAMOND = 1;</code>
     */
    VIRTUAL_DIAMOND(1, 1),
    ;

    /**
     * <code>VIRTUAL_GIFT = 0;</code>
     */
    public static final int VIRTUAL_GIFT_VALUE = 0;
    /**
     * <code>VIRTUAL_DIAMOND = 1;</code>
     */
    public static final int VIRTUAL_DIAMOND_VALUE = 1;


    public final int getNumber() { return value; }

    public static GiftType valueOf(int value) {
      switch (value) {
        case 0: return VIRTUAL_GIFT;
        case 1: return VIRTUAL_DIAMOND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GiftType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GiftType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GiftType>() {
            public GiftType findValueByNumber(int number) {
              return GiftType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final GiftType[] VALUES = values();

    public static GiftType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GiftType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.wali.live.proto.GiftType)
  }

  public interface StartTurntableReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.StartTurntableReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 zuid = 1;</code>
     */
    boolean hasZuid();
    /**
     * <code>required uint64 zuid = 1;</code>
     */
    long getZuid();

    /**
     * <code>optional string liveId = 2;</code>
     */
    boolean hasLiveId();
    /**
     * <code>optional string liveId = 2;</code>
     */
    java.lang.String getLiveId();
    /**
     * <code>optional string liveId = 2;</code>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.TurntableType getType();

    /**
     * <code>optional string customPrizeName = 4;</code>
     *
     * <pre>
     *自定义奖项名字
     * </pre>
     */
    boolean hasCustomPrizeName();
    /**
     * <code>optional string customPrizeName = 4;</code>
     *
     * <pre>
     *自定义奖项名字
     * </pre>
     */
    java.lang.String getCustomPrizeName();
    /**
     * <code>optional string customPrizeName = 4;</code>
     *
     * <pre>
     *自定义奖项名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getCustomPrizeNameBytes();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.StartTurntableReq}
   *
   * <pre>
   *zhibo.turntable.start
   * </pre>
   */
  public static final class StartTurntableReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.StartTurntableReq)
      StartTurntableReqOrBuilder {
    // Use StartTurntableReq.newBuilder() to construct.
    private StartTurntableReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StartTurntableReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StartTurntableReq defaultInstance;
    public static StartTurntableReq getDefaultInstance() {
      return defaultInstance;
    }

    public StartTurntableReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StartTurntableReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              zuid_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              liveId_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.wali.live.proto.BigTurnTableProto.TurntableType value = com.wali.live.proto.BigTurnTableProto.TurntableType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              customPrizeName_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.StartTurntableReq.class, com.wali.live.proto.BigTurnTableProto.StartTurntableReq.Builder.class);
    }

    public static com.google.protobuf.Parser<StartTurntableReq> PARSER =
        new com.google.protobuf.AbstractParser<StartTurntableReq>() {
      public StartTurntableReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StartTurntableReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StartTurntableReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ZUID_FIELD_NUMBER = 1;
    private long zuid_;
    /**
     * <code>required uint64 zuid = 1;</code>
     */
    public boolean hasZuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 zuid = 1;</code>
     */
    public long getZuid() {
      return zuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 2;
    private java.lang.Object liveId_;
    /**
     * <code>optional string liveId = 2;</code>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string liveId = 2;</code>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string liveId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private com.wali.live.proto.BigTurnTableProto.TurntableType type_;
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.TurntableType getType() {
      return type_;
    }

    public static final int CUSTOMPRIZENAME_FIELD_NUMBER = 4;
    private java.lang.Object customPrizeName_;
    /**
     * <code>optional string customPrizeName = 4;</code>
     *
     * <pre>
     *自定义奖项名字
     * </pre>
     */
    public boolean hasCustomPrizeName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string customPrizeName = 4;</code>
     *
     * <pre>
     *自定义奖项名字
     * </pre>
     */
    public java.lang.String getCustomPrizeName() {
      java.lang.Object ref = customPrizeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          customPrizeName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string customPrizeName = 4;</code>
     *
     * <pre>
     *自定义奖项名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCustomPrizeNameBytes() {
      java.lang.Object ref = customPrizeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customPrizeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      zuid_ = 0L;
      liveId_ = "";
      type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
      customPrizeName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasZuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, zuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getCustomPrizeNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, zuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getCustomPrizeNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.StartTurntableReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.StartTurntableReq}
     *
     * <pre>
     *zhibo.turntable.start
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.StartTurntableReq)
        com.wali.live.proto.BigTurnTableProto.StartTurntableReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.StartTurntableReq.class, com.wali.live.proto.BigTurnTableProto.StartTurntableReq.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.StartTurntableReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        zuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
        bitField0_ = (bitField0_ & ~0x00000004);
        customPrizeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableReq_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.StartTurntableReq getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.StartTurntableReq.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.StartTurntableReq build() {
        com.wali.live.proto.BigTurnTableProto.StartTurntableReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.StartTurntableReq buildPartial() {
        com.wali.live.proto.BigTurnTableProto.StartTurntableReq result = new com.wali.live.proto.BigTurnTableProto.StartTurntableReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zuid_ = zuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.customPrizeName_ = customPrizeName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.StartTurntableReq) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.StartTurntableReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.StartTurntableReq other) {
        if (other == com.wali.live.proto.BigTurnTableProto.StartTurntableReq.getDefaultInstance()) return this;
        if (other.hasZuid()) {
          setZuid(other.getZuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000002;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasCustomPrizeName()) {
          bitField0_ |= 0x00000008;
          customPrizeName_ = other.customPrizeName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasZuid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.StartTurntableReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.StartTurntableReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long zuid_ ;
      /**
       * <code>required uint64 zuid = 1;</code>
       */
      public boolean hasZuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       */
      public long getZuid() {
        return zuid_;
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       */
      public Builder setZuid(long value) {
        bitField0_ |= 0x00000001;
        zuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       */
      public Builder clearZuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>optional string liveId = 2;</code>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }

      private com.wali.live.proto.BigTurnTableProto.TurntableType type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntableType getType() {
        return type_;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public Builder setType(com.wali.live.proto.BigTurnTableProto.TurntableType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
        onChanged();
        return this;
      }

      private java.lang.Object customPrizeName_ = "";
      /**
       * <code>optional string customPrizeName = 4;</code>
       *
       * <pre>
       *自定义奖项名字
       * </pre>
       */
      public boolean hasCustomPrizeName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string customPrizeName = 4;</code>
       *
       * <pre>
       *自定义奖项名字
       * </pre>
       */
      public java.lang.String getCustomPrizeName() {
        java.lang.Object ref = customPrizeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            customPrizeName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string customPrizeName = 4;</code>
       *
       * <pre>
       *自定义奖项名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCustomPrizeNameBytes() {
        java.lang.Object ref = customPrizeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          customPrizeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string customPrizeName = 4;</code>
       *
       * <pre>
       *自定义奖项名字
       * </pre>
       */
      public Builder setCustomPrizeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        customPrizeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string customPrizeName = 4;</code>
       *
       * <pre>
       *自定义奖项名字
       * </pre>
       */
      public Builder clearCustomPrizeName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        customPrizeName_ = getDefaultInstance().getCustomPrizeName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string customPrizeName = 4;</code>
       *
       * <pre>
       *自定义奖项名字
       * </pre>
       */
      public Builder setCustomPrizeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        customPrizeName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.StartTurntableReq)
    }

    static {
      defaultInstance = new StartTurntableReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.StartTurntableReq)
  }

  public interface StartTurntableRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.StartTurntableRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    int getRetCode();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.StartTurntableRsp}
   */
  public static final class StartTurntableRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.StartTurntableRsp)
      StartTurntableRspOrBuilder {
    // Use StartTurntableRsp.newBuilder() to construct.
    private StartTurntableRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StartTurntableRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StartTurntableRsp defaultInstance;
    public static StartTurntableRsp getDefaultInstance() {
      return defaultInstance;
    }

    public StartTurntableRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StartTurntableRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.StartTurntableRsp.class, com.wali.live.proto.BigTurnTableProto.StartTurntableRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<StartTurntableRsp> PARSER =
        new com.google.protobuf.AbstractParser<StartTurntableRsp>() {
      public StartTurntableRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StartTurntableRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StartTurntableRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    private void initFields() {
      retCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.StartTurntableRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.StartTurntableRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.StartTurntableRsp)
        com.wali.live.proto.BigTurnTableProto.StartTurntableRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.StartTurntableRsp.class, com.wali.live.proto.BigTurnTableProto.StartTurntableRsp.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.StartTurntableRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StartTurntableRsp_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.StartTurntableRsp getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.StartTurntableRsp.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.StartTurntableRsp build() {
        com.wali.live.proto.BigTurnTableProto.StartTurntableRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.StartTurntableRsp buildPartial() {
        com.wali.live.proto.BigTurnTableProto.StartTurntableRsp result = new com.wali.live.proto.BigTurnTableProto.StartTurntableRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.StartTurntableRsp) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.StartTurntableRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.StartTurntableRsp other) {
        if (other == com.wali.live.proto.BigTurnTableProto.StartTurntableRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.StartTurntableRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.StartTurntableRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.StartTurntableRsp)
    }

    static {
      defaultInstance = new StartTurntableRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.StartTurntableRsp)
  }

  public interface StopTurntableReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.StopTurntableReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 zuid = 1;</code>
     */
    boolean hasZuid();
    /**
     * <code>required uint64 zuid = 1;</code>
     */
    long getZuid();

    /**
     * <code>optional string liveId = 2;</code>
     */
    boolean hasLiveId();
    /**
     * <code>optional string liveId = 2;</code>
     */
    java.lang.String getLiveId();
    /**
     * <code>optional string liveId = 2;</code>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.TurntableType getType();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.StopTurntableReq}
   *
   * <pre>
   *zhibo.turntable.stop
   * </pre>
   */
  public static final class StopTurntableReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.StopTurntableReq)
      StopTurntableReqOrBuilder {
    // Use StopTurntableReq.newBuilder() to construct.
    private StopTurntableReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StopTurntableReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StopTurntableReq defaultInstance;
    public static StopTurntableReq getDefaultInstance() {
      return defaultInstance;
    }

    public StopTurntableReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StopTurntableReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              zuid_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              liveId_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.wali.live.proto.BigTurnTableProto.TurntableType value = com.wali.live.proto.BigTurnTableProto.TurntableType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.StopTurntableReq.class, com.wali.live.proto.BigTurnTableProto.StopTurntableReq.Builder.class);
    }

    public static com.google.protobuf.Parser<StopTurntableReq> PARSER =
        new com.google.protobuf.AbstractParser<StopTurntableReq>() {
      public StopTurntableReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StopTurntableReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StopTurntableReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ZUID_FIELD_NUMBER = 1;
    private long zuid_;
    /**
     * <code>required uint64 zuid = 1;</code>
     */
    public boolean hasZuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 zuid = 1;</code>
     */
    public long getZuid() {
      return zuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 2;
    private java.lang.Object liveId_;
    /**
     * <code>optional string liveId = 2;</code>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string liveId = 2;</code>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string liveId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private com.wali.live.proto.BigTurnTableProto.TurntableType type_;
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.TurntableType getType() {
      return type_;
    }

    private void initFields() {
      zuid_ = 0L;
      liveId_ = "";
      type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasZuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, zuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, zuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.StopTurntableReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.StopTurntableReq}
     *
     * <pre>
     *zhibo.turntable.stop
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.StopTurntableReq)
        com.wali.live.proto.BigTurnTableProto.StopTurntableReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.StopTurntableReq.class, com.wali.live.proto.BigTurnTableProto.StopTurntableReq.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.StopTurntableReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        zuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableReq_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.StopTurntableReq getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.StopTurntableReq.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.StopTurntableReq build() {
        com.wali.live.proto.BigTurnTableProto.StopTurntableReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.StopTurntableReq buildPartial() {
        com.wali.live.proto.BigTurnTableProto.StopTurntableReq result = new com.wali.live.proto.BigTurnTableProto.StopTurntableReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zuid_ = zuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.StopTurntableReq) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.StopTurntableReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.StopTurntableReq other) {
        if (other == com.wali.live.proto.BigTurnTableProto.StopTurntableReq.getDefaultInstance()) return this;
        if (other.hasZuid()) {
          setZuid(other.getZuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000002;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasZuid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.StopTurntableReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.StopTurntableReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long zuid_ ;
      /**
       * <code>required uint64 zuid = 1;</code>
       */
      public boolean hasZuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       */
      public long getZuid() {
        return zuid_;
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       */
      public Builder setZuid(long value) {
        bitField0_ |= 0x00000001;
        zuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       */
      public Builder clearZuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>optional string liveId = 2;</code>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 2;</code>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }

      private com.wali.live.proto.BigTurnTableProto.TurntableType type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntableType getType() {
        return type_;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public Builder setType(com.wali.live.proto.BigTurnTableProto.TurntableType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 3;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.StopTurntableReq)
    }

    static {
      defaultInstance = new StopTurntableReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.StopTurntableReq)
  }

  public interface StopTurntableRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.StopTurntableRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    int getRetCode();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.StopTurntableRsp}
   */
  public static final class StopTurntableRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.StopTurntableRsp)
      StopTurntableRspOrBuilder {
    // Use StopTurntableRsp.newBuilder() to construct.
    private StopTurntableRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StopTurntableRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StopTurntableRsp defaultInstance;
    public static StopTurntableRsp getDefaultInstance() {
      return defaultInstance;
    }

    public StopTurntableRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StopTurntableRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.StopTurntableRsp.class, com.wali.live.proto.BigTurnTableProto.StopTurntableRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<StopTurntableRsp> PARSER =
        new com.google.protobuf.AbstractParser<StopTurntableRsp>() {
      public StopTurntableRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StopTurntableRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StopTurntableRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    private void initFields() {
      retCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.StopTurntableRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.StopTurntableRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.StopTurntableRsp)
        com.wali.live.proto.BigTurnTableProto.StopTurntableRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.StopTurntableRsp.class, com.wali.live.proto.BigTurnTableProto.StopTurntableRsp.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.StopTurntableRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_StopTurntableRsp_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.StopTurntableRsp getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.StopTurntableRsp.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.StopTurntableRsp build() {
        com.wali.live.proto.BigTurnTableProto.StopTurntableRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.StopTurntableRsp buildPartial() {
        com.wali.live.proto.BigTurnTableProto.StopTurntableRsp result = new com.wali.live.proto.BigTurnTableProto.StopTurntableRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.StopTurntableRsp) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.StopTurntableRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.StopTurntableRsp other) {
        if (other == com.wali.live.proto.BigTurnTableProto.StopTurntableRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.StopTurntableRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.StopTurntableRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.StopTurntableRsp)
    }

    static {
      defaultInstance = new StopTurntableRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.StopTurntableRsp)
  }

  public interface DrawTurntableReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.DrawTurntableReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 uuid = 1;</code>
     */
    boolean hasUuid();
    /**
     * <code>required uint64 uuid = 1;</code>
     */
    long getUuid();

    /**
     * <code>required uint64 zuid = 2;</code>
     */
    boolean hasZuid();
    /**
     * <code>required uint64 zuid = 2;</code>
     */
    long getZuid();

    /**
     * <code>optional string liveId = 3;</code>
     */
    boolean hasLiveId();
    /**
     * <code>optional string liveId = 3;</code>
     */
    java.lang.String getLiveId();
    /**
     * <code>optional string liveId = 3;</code>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 4;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 4;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.TurntableType getType();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.DrawTurntableReq}
   *
   * <pre>
   *zhibo.turntable.draw
   * </pre>
   */
  public static final class DrawTurntableReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.DrawTurntableReq)
      DrawTurntableReqOrBuilder {
    // Use DrawTurntableReq.newBuilder() to construct.
    private DrawTurntableReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DrawTurntableReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DrawTurntableReq defaultInstance;
    public static DrawTurntableReq getDefaultInstance() {
      return defaultInstance;
    }

    public DrawTurntableReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DrawTurntableReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              zuid_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              liveId_ = bs;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.wali.live.proto.BigTurnTableProto.TurntableType value = com.wali.live.proto.BigTurnTableProto.TurntableType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.DrawTurntableReq.class, com.wali.live.proto.BigTurnTableProto.DrawTurntableReq.Builder.class);
    }

    public static com.google.protobuf.Parser<DrawTurntableReq> PARSER =
        new com.google.protobuf.AbstractParser<DrawTurntableReq>() {
      public DrawTurntableReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DrawTurntableReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DrawTurntableReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private long uuid_;
    /**
     * <code>required uint64 uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 uuid = 1;</code>
     */
    public long getUuid() {
      return uuid_;
    }

    public static final int ZUID_FIELD_NUMBER = 2;
    private long zuid_;
    /**
     * <code>required uint64 zuid = 2;</code>
     */
    public boolean hasZuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 zuid = 2;</code>
     */
    public long getZuid() {
      return zuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 3;
    private java.lang.Object liveId_;
    /**
     * <code>optional string liveId = 3;</code>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string liveId = 3;</code>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string liveId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private com.wali.live.proto.BigTurnTableProto.TurntableType type_;
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 4;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 4;</code>
     *
     * <pre>
     *转盘类型 0:128钻，1:500钻
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.TurntableType getType() {
      return type_;
    }

    private void initFields() {
      uuid_ = 0L;
      zuid_ = 0L;
      liveId_ = "";
      type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.DrawTurntableReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.DrawTurntableReq}
     *
     * <pre>
     *zhibo.turntable.draw
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.DrawTurntableReq)
        com.wali.live.proto.BigTurnTableProto.DrawTurntableReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.DrawTurntableReq.class, com.wali.live.proto.BigTurnTableProto.DrawTurntableReq.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.DrawTurntableReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        zuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableReq_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.DrawTurntableReq getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.DrawTurntableReq.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.DrawTurntableReq build() {
        com.wali.live.proto.BigTurnTableProto.DrawTurntableReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.DrawTurntableReq buildPartial() {
        com.wali.live.proto.BigTurnTableProto.DrawTurntableReq result = new com.wali.live.proto.BigTurnTableProto.DrawTurntableReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.zuid_ = zuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.DrawTurntableReq) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.DrawTurntableReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.DrawTurntableReq other) {
        if (other == com.wali.live.proto.BigTurnTableProto.DrawTurntableReq.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasZuid()) {
          setZuid(other.getZuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000004;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasZuid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.DrawTurntableReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.DrawTurntableReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long uuid_ ;
      /**
       * <code>required uint64 uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       */
      public long getUuid() {
        return uuid_;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       */
      public Builder setUuid(long value) {
        bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = 0L;
        onChanged();
        return this;
      }

      private long zuid_ ;
      /**
       * <code>required uint64 zuid = 2;</code>
       */
      public boolean hasZuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       */
      public long getZuid() {
        return zuid_;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       */
      public Builder setZuid(long value) {
        bitField0_ |= 0x00000002;
        zuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       */
      public Builder clearZuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        zuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>optional string liveId = 3;</code>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }

      private com.wali.live.proto.BigTurnTableProto.TurntableType type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 4;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 4;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntableType getType() {
        return type_;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 4;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public Builder setType(com.wali.live.proto.BigTurnTableProto.TurntableType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 4;</code>
       *
       * <pre>
       *转盘类型 0:128钻，1:500钻
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.DrawTurntableReq)
    }

    static {
      defaultInstance = new DrawTurntableReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.DrawTurntableReq)
  }

  public interface DrawTurntableRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.DrawTurntableRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    int getRetCode();

    /**
     * <code>optional uint32 prizeIndex = 2;</code>
     *
     * <pre>
     *奖品索引, 顺序从1点钟方向开始顺时针，index从0开始
     * </pre>
     */
    boolean hasPrizeIndex();
    /**
     * <code>optional uint32 prizeIndex = 2;</code>
     *
     * <pre>
     *奖品索引, 顺序从1点钟方向开始顺时针，index从0开始
     * </pre>
     */
    int getPrizeIndex();

    /**
     * <code>optional string prizeKey = 3;</code>
     *
     * <pre>
     *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
     * </pre>
     */
    boolean hasPrizeKey();
    /**
     * <code>optional string prizeKey = 3;</code>
     *
     * <pre>
     *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
     * </pre>
     */
    java.lang.String getPrizeKey();
    /**
     * <code>optional string prizeKey = 3;</code>
     *
     * <pre>
     *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
     * </pre>
     */
    com.google.protobuf.ByteString
        getPrizeKeyBytes();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.DrawTurntableRsp}
   */
  public static final class DrawTurntableRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.DrawTurntableRsp)
      DrawTurntableRspOrBuilder {
    // Use DrawTurntableRsp.newBuilder() to construct.
    private DrawTurntableRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DrawTurntableRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DrawTurntableRsp defaultInstance;
    public static DrawTurntableRsp getDefaultInstance() {
      return defaultInstance;
    }

    public DrawTurntableRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DrawTurntableRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              prizeIndex_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              prizeKey_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp.class, com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<DrawTurntableRsp> PARSER =
        new com.google.protobuf.AbstractParser<DrawTurntableRsp>() {
      public DrawTurntableRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DrawTurntableRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DrawTurntableRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    public static final int PRIZEINDEX_FIELD_NUMBER = 2;
    private int prizeIndex_;
    /**
     * <code>optional uint32 prizeIndex = 2;</code>
     *
     * <pre>
     *奖品索引, 顺序从1点钟方向开始顺时针，index从0开始
     * </pre>
     */
    public boolean hasPrizeIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 prizeIndex = 2;</code>
     *
     * <pre>
     *奖品索引, 顺序从1点钟方向开始顺时针，index从0开始
     * </pre>
     */
    public int getPrizeIndex() {
      return prizeIndex_;
    }

    public static final int PRIZEKEY_FIELD_NUMBER = 3;
    private java.lang.Object prizeKey_;
    /**
     * <code>optional string prizeKey = 3;</code>
     *
     * <pre>
     *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
     * </pre>
     */
    public boolean hasPrizeKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string prizeKey = 3;</code>
     *
     * <pre>
     *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
     * </pre>
     */
    public java.lang.String getPrizeKey() {
      java.lang.Object ref = prizeKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          prizeKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string prizeKey = 3;</code>
     *
     * <pre>
     *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPrizeKeyBytes() {
      java.lang.Object ref = prizeKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        prizeKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      retCode_ = 0;
      prizeIndex_ = 0;
      prizeKey_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, prizeIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPrizeKeyBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, prizeIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPrizeKeyBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.DrawTurntableRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.DrawTurntableRsp)
        com.wali.live.proto.BigTurnTableProto.DrawTurntableRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp.class, com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        prizeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prizeKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_DrawTurntableRsp_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp build() {
        com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp buildPartial() {
        com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp result = new com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.prizeIndex_ = prizeIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prizeKey_ = prizeKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp other) {
        if (other == com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        if (other.hasPrizeIndex()) {
          setPrizeIndex(other.getPrizeIndex());
        }
        if (other.hasPrizeKey()) {
          bitField0_ |= 0x00000004;
          prizeKey_ = other.prizeKey_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.DrawTurntableRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      private int prizeIndex_ ;
      /**
       * <code>optional uint32 prizeIndex = 2;</code>
       *
       * <pre>
       *奖品索引, 顺序从1点钟方向开始顺时针，index从0开始
       * </pre>
       */
      public boolean hasPrizeIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 prizeIndex = 2;</code>
       *
       * <pre>
       *奖品索引, 顺序从1点钟方向开始顺时针，index从0开始
       * </pre>
       */
      public int getPrizeIndex() {
        return prizeIndex_;
      }
      /**
       * <code>optional uint32 prizeIndex = 2;</code>
       *
       * <pre>
       *奖品索引, 顺序从1点钟方向开始顺时针，index从0开始
       * </pre>
       */
      public Builder setPrizeIndex(int value) {
        bitField0_ |= 0x00000002;
        prizeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 prizeIndex = 2;</code>
       *
       * <pre>
       *奖品索引, 顺序从1点钟方向开始顺时针，index从0开始
       * </pre>
       */
      public Builder clearPrizeIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        prizeIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object prizeKey_ = "";
      /**
       * <code>optional string prizeKey = 3;</code>
       *
       * <pre>
       *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
       * </pre>
       */
      public boolean hasPrizeKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string prizeKey = 3;</code>
       *
       * <pre>
       *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
       * </pre>
       */
      public java.lang.String getPrizeKey() {
        java.lang.Object ref = prizeKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            prizeKey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string prizeKey = 3;</code>
       *
       * <pre>
       *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPrizeKeyBytes() {
        java.lang.Object ref = prizeKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          prizeKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string prizeKey = 3;</code>
       *
       * <pre>
       *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
       * </pre>
       */
      public Builder setPrizeKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        prizeKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string prizeKey = 3;</code>
       *
       * <pre>
       *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
       * </pre>
       */
      public Builder clearPrizeKey() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prizeKey_ = getDefaultInstance().getPrizeKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string prizeKey = 3;</code>
       *
       * <pre>
       *此次中奖的key,客户端在zhibo.turntable.reward里传这个值用于获取此次抽奖的奖品
       * </pre>
       */
      public Builder setPrizeKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        prizeKey_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.DrawTurntableRsp)
    }

    static {
      defaultInstance = new DrawTurntableRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.DrawTurntableRsp)
  }

  public interface RewardTurntableReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.RewardTurntableReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 uuid = 1;</code>
     */
    boolean hasUuid();
    /**
     * <code>required uint64 uuid = 1;</code>
     */
    long getUuid();

    /**
     * <code>required uint64 zuid = 2;</code>
     */
    boolean hasZuid();
    /**
     * <code>required uint64 zuid = 2;</code>
     */
    long getZuid();

    /**
     * <code>optional string liveId = 3;</code>
     */
    boolean hasLiveId();
    /**
     * <code>optional string liveId = 3;</code>
     */
    java.lang.String getLiveId();
    /**
     * <code>optional string liveId = 3;</code>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional string prizeKey = 4;</code>
     *
     * <pre>
     *此次中奖的key
     * </pre>
     */
    boolean hasPrizeKey();
    /**
     * <code>optional string prizeKey = 4;</code>
     *
     * <pre>
     *此次中奖的key
     * </pre>
     */
    java.lang.String getPrizeKey();
    /**
     * <code>optional string prizeKey = 4;</code>
     *
     * <pre>
     *此次中奖的key
     * </pre>
     */
    com.google.protobuf.ByteString
        getPrizeKeyBytes();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.RewardTurntableReq}
   *
   * <pre>
   *zhibo.turntable.reward
   * </pre>
   */
  public static final class RewardTurntableReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.RewardTurntableReq)
      RewardTurntableReqOrBuilder {
    // Use RewardTurntableReq.newBuilder() to construct.
    private RewardTurntableReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RewardTurntableReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RewardTurntableReq defaultInstance;
    public static RewardTurntableReq getDefaultInstance() {
      return defaultInstance;
    }

    public RewardTurntableReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RewardTurntableReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              zuid_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              liveId_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              prizeKey_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.RewardTurntableReq.class, com.wali.live.proto.BigTurnTableProto.RewardTurntableReq.Builder.class);
    }

    public static com.google.protobuf.Parser<RewardTurntableReq> PARSER =
        new com.google.protobuf.AbstractParser<RewardTurntableReq>() {
      public RewardTurntableReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RewardTurntableReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RewardTurntableReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private long uuid_;
    /**
     * <code>required uint64 uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 uuid = 1;</code>
     */
    public long getUuid() {
      return uuid_;
    }

    public static final int ZUID_FIELD_NUMBER = 2;
    private long zuid_;
    /**
     * <code>required uint64 zuid = 2;</code>
     */
    public boolean hasZuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 zuid = 2;</code>
     */
    public long getZuid() {
      return zuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 3;
    private java.lang.Object liveId_;
    /**
     * <code>optional string liveId = 3;</code>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string liveId = 3;</code>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string liveId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIZEKEY_FIELD_NUMBER = 4;
    private java.lang.Object prizeKey_;
    /**
     * <code>optional string prizeKey = 4;</code>
     *
     * <pre>
     *此次中奖的key
     * </pre>
     */
    public boolean hasPrizeKey() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string prizeKey = 4;</code>
     *
     * <pre>
     *此次中奖的key
     * </pre>
     */
    public java.lang.String getPrizeKey() {
      java.lang.Object ref = prizeKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          prizeKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string prizeKey = 4;</code>
     *
     * <pre>
     *此次中奖的key
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPrizeKeyBytes() {
      java.lang.Object ref = prizeKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        prizeKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uuid_ = 0L;
      zuid_ = 0L;
      liveId_ = "";
      prizeKey_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getPrizeKeyBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPrizeKeyBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.RewardTurntableReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.RewardTurntableReq}
     *
     * <pre>
     *zhibo.turntable.reward
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.RewardTurntableReq)
        com.wali.live.proto.BigTurnTableProto.RewardTurntableReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.RewardTurntableReq.class, com.wali.live.proto.BigTurnTableProto.RewardTurntableReq.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.RewardTurntableReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        zuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        prizeKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableReq_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.RewardTurntableReq getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.RewardTurntableReq.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.RewardTurntableReq build() {
        com.wali.live.proto.BigTurnTableProto.RewardTurntableReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.RewardTurntableReq buildPartial() {
        com.wali.live.proto.BigTurnTableProto.RewardTurntableReq result = new com.wali.live.proto.BigTurnTableProto.RewardTurntableReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.zuid_ = zuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.prizeKey_ = prizeKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.RewardTurntableReq) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.RewardTurntableReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.RewardTurntableReq other) {
        if (other == com.wali.live.proto.BigTurnTableProto.RewardTurntableReq.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasZuid()) {
          setZuid(other.getZuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000004;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasPrizeKey()) {
          bitField0_ |= 0x00000008;
          prizeKey_ = other.prizeKey_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasZuid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.RewardTurntableReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.RewardTurntableReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long uuid_ ;
      /**
       * <code>required uint64 uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       */
      public long getUuid() {
        return uuid_;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       */
      public Builder setUuid(long value) {
        bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = 0L;
        onChanged();
        return this;
      }

      private long zuid_ ;
      /**
       * <code>required uint64 zuid = 2;</code>
       */
      public boolean hasZuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       */
      public long getZuid() {
        return zuid_;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       */
      public Builder setZuid(long value) {
        bitField0_ |= 0x00000002;
        zuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       */
      public Builder clearZuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        zuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>optional string liveId = 3;</code>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 3;</code>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object prizeKey_ = "";
      /**
       * <code>optional string prizeKey = 4;</code>
       *
       * <pre>
       *此次中奖的key
       * </pre>
       */
      public boolean hasPrizeKey() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string prizeKey = 4;</code>
       *
       * <pre>
       *此次中奖的key
       * </pre>
       */
      public java.lang.String getPrizeKey() {
        java.lang.Object ref = prizeKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            prizeKey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string prizeKey = 4;</code>
       *
       * <pre>
       *此次中奖的key
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPrizeKeyBytes() {
        java.lang.Object ref = prizeKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          prizeKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string prizeKey = 4;</code>
       *
       * <pre>
       *此次中奖的key
       * </pre>
       */
      public Builder setPrizeKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        prizeKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string prizeKey = 4;</code>
       *
       * <pre>
       *此次中奖的key
       * </pre>
       */
      public Builder clearPrizeKey() {
        bitField0_ = (bitField0_ & ~0x00000008);
        prizeKey_ = getDefaultInstance().getPrizeKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string prizeKey = 4;</code>
       *
       * <pre>
       *此次中奖的key
       * </pre>
       */
      public Builder setPrizeKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        prizeKey_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.RewardTurntableReq)
    }

    static {
      defaultInstance = new RewardTurntableReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.RewardTurntableReq)
  }

  public interface RewardTurntableRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.RewardTurntableRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    int getRetCode();

    /**
     * <code>optional uint64 user_asset_timestamp = 2;</code>
     *
     * <pre>
     * 购买者当前可用资产时间戳（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    boolean hasUserAssetTimestamp();
    /**
     * <code>optional uint64 user_asset_timestamp = 2;</code>
     *
     * <pre>
     * 购买者当前可用资产时间戳（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    long getUserAssetTimestamp();

    /**
     * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
     *
     * <pre>
     *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    boolean hasGiftCard();
    /**
     * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
     *
     * <pre>
     *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.VGiftCard getGiftCard();
    /**
     * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
     *
     * <pre>
     *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.VGiftCardOrBuilder getGiftCardOrBuilder();

    /**
     * <code>optional uint32 receiver_total_tickets = 4;</code>
     *
     * <pre>
     * 主播此时的票数
     * </pre>
     */
    boolean hasReceiverTotalTickets();
    /**
     * <code>optional uint32 receiver_total_tickets = 4;</code>
     *
     * <pre>
     * 主播此时的票数
     * </pre>
     */
    int getReceiverTotalTickets();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.RewardTurntableRsp}
   */
  public static final class RewardTurntableRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.RewardTurntableRsp)
      RewardTurntableRspOrBuilder {
    // Use RewardTurntableRsp.newBuilder() to construct.
    private RewardTurntableRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RewardTurntableRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RewardTurntableRsp defaultInstance;
    public static RewardTurntableRsp getDefaultInstance() {
      return defaultInstance;
    }

    public RewardTurntableRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RewardTurntableRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userAssetTimestamp_ = input.readUInt64();
              break;
            }
            case 26: {
              com.wali.live.proto.BigTurnTableProto.VGiftCard.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = giftCard_.toBuilder();
              }
              giftCard_ = input.readMessage(com.wali.live.proto.BigTurnTableProto.VGiftCard.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(giftCard_);
                giftCard_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              receiverTotalTickets_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp.class, com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<RewardTurntableRsp> PARSER =
        new com.google.protobuf.AbstractParser<RewardTurntableRsp>() {
      public RewardTurntableRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RewardTurntableRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RewardTurntableRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    public static final int USER_ASSET_TIMESTAMP_FIELD_NUMBER = 2;
    private long userAssetTimestamp_;
    /**
     * <code>optional uint64 user_asset_timestamp = 2;</code>
     *
     * <pre>
     * 购买者当前可用资产时间戳（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    public boolean hasUserAssetTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 user_asset_timestamp = 2;</code>
     *
     * <pre>
     * 购买者当前可用资产时间戳（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    public long getUserAssetTimestamp() {
      return userAssetTimestamp_;
    }

    public static final int GIFT_CARD_FIELD_NUMBER = 3;
    private com.wali.live.proto.BigTurnTableProto.VGiftCard giftCard_;
    /**
     * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
     *
     * <pre>
     *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    public boolean hasGiftCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
     *
     * <pre>
     *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.VGiftCard getGiftCard() {
      return giftCard_;
    }
    /**
     * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
     *
     * <pre>
     *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.VGiftCardOrBuilder getGiftCardOrBuilder() {
      return giftCard_;
    }

    public static final int RECEIVER_TOTAL_TICKETS_FIELD_NUMBER = 4;
    private int receiverTotalTickets_;
    /**
     * <code>optional uint32 receiver_total_tickets = 4;</code>
     *
     * <pre>
     * 主播此时的票数
     * </pre>
     */
    public boolean hasReceiverTotalTickets() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 receiver_total_tickets = 4;</code>
     *
     * <pre>
     * 主播此时的票数
     * </pre>
     */
    public int getReceiverTotalTickets() {
      return receiverTotalTickets_;
    }

    private void initFields() {
      retCode_ = 0;
      userAssetTimestamp_ = 0L;
      giftCard_ = com.wali.live.proto.BigTurnTableProto.VGiftCard.getDefaultInstance();
      receiverTotalTickets_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, userAssetTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, giftCard_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, receiverTotalTickets_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, userAssetTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, giftCard_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, receiverTotalTickets_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.RewardTurntableRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.RewardTurntableRsp)
        com.wali.live.proto.BigTurnTableProto.RewardTurntableRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp.class, com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGiftCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        userAssetTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (giftCardBuilder_ == null) {
          giftCard_ = com.wali.live.proto.BigTurnTableProto.VGiftCard.getDefaultInstance();
        } else {
          giftCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        receiverTotalTickets_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_RewardTurntableRsp_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp build() {
        com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp buildPartial() {
        com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp result = new com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userAssetTimestamp_ = userAssetTimestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (giftCardBuilder_ == null) {
          result.giftCard_ = giftCard_;
        } else {
          result.giftCard_ = giftCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.receiverTotalTickets_ = receiverTotalTickets_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp other) {
        if (other == com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        if (other.hasUserAssetTimestamp()) {
          setUserAssetTimestamp(other.getUserAssetTimestamp());
        }
        if (other.hasGiftCard()) {
          mergeGiftCard(other.getGiftCard());
        }
        if (other.hasReceiverTotalTickets()) {
          setReceiverTotalTickets(other.getReceiverTotalTickets());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.RewardTurntableRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      private long userAssetTimestamp_ ;
      /**
       * <code>optional uint64 user_asset_timestamp = 2;</code>
       *
       * <pre>
       * 购买者当前可用资产时间戳（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public boolean hasUserAssetTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 user_asset_timestamp = 2;</code>
       *
       * <pre>
       * 购买者当前可用资产时间戳（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public long getUserAssetTimestamp() {
        return userAssetTimestamp_;
      }
      /**
       * <code>optional uint64 user_asset_timestamp = 2;</code>
       *
       * <pre>
       * 购买者当前可用资产时间戳（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public Builder setUserAssetTimestamp(long value) {
        bitField0_ |= 0x00000002;
        userAssetTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 user_asset_timestamp = 2;</code>
       *
       * <pre>
       * 购买者当前可用资产时间戳（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public Builder clearUserAssetTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userAssetTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.wali.live.proto.BigTurnTableProto.VGiftCard giftCard_ = com.wali.live.proto.BigTurnTableProto.VGiftCard.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.BigTurnTableProto.VGiftCard, com.wali.live.proto.BigTurnTableProto.VGiftCard.Builder, com.wali.live.proto.BigTurnTableProto.VGiftCardOrBuilder> giftCardBuilder_;
      /**
       * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
       *
       * <pre>
       *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public boolean hasGiftCard() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
       *
       * <pre>
       *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.VGiftCard getGiftCard() {
        if (giftCardBuilder_ == null) {
          return giftCard_;
        } else {
          return giftCardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
       *
       * <pre>
       *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public Builder setGiftCard(com.wali.live.proto.BigTurnTableProto.VGiftCard value) {
        if (giftCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          giftCard_ = value;
          onChanged();
        } else {
          giftCardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
       *
       * <pre>
       *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public Builder setGiftCard(
          com.wali.live.proto.BigTurnTableProto.VGiftCard.Builder builderForValue) {
        if (giftCardBuilder_ == null) {
          giftCard_ = builderForValue.build();
          onChanged();
        } else {
          giftCardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
       *
       * <pre>
       *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public Builder mergeGiftCard(com.wali.live.proto.BigTurnTableProto.VGiftCard value) {
        if (giftCardBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              giftCard_ != com.wali.live.proto.BigTurnTableProto.VGiftCard.getDefaultInstance()) {
            giftCard_ =
              com.wali.live.proto.BigTurnTableProto.VGiftCard.newBuilder(giftCard_).mergeFrom(value).buildPartial();
          } else {
            giftCard_ = value;
          }
          onChanged();
        } else {
          giftCardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
       *
       * <pre>
       *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public Builder clearGiftCard() {
        if (giftCardBuilder_ == null) {
          giftCard_ = com.wali.live.proto.BigTurnTableProto.VGiftCard.getDefaultInstance();
          onChanged();
        } else {
          giftCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
       *
       * <pre>
       *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.VGiftCard.Builder getGiftCardBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getGiftCardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
       *
       * <pre>
       *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.VGiftCardOrBuilder getGiftCardOrBuilder() {
        if (giftCardBuilder_ != null) {
          return giftCardBuilder_.getMessageOrBuilder();
        } else {
          return giftCard_;
        }
      }
      /**
       * <code>optional .com.wali.live.proto.VGiftCard gift_card = 3;</code>
       *
       * <pre>
       *礼品卡列表（只有是送给主播的奖品服务器才下发这个字段）
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.BigTurnTableProto.VGiftCard, com.wali.live.proto.BigTurnTableProto.VGiftCard.Builder, com.wali.live.proto.BigTurnTableProto.VGiftCardOrBuilder> 
          getGiftCardFieldBuilder() {
        if (giftCardBuilder_ == null) {
          giftCardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wali.live.proto.BigTurnTableProto.VGiftCard, com.wali.live.proto.BigTurnTableProto.VGiftCard.Builder, com.wali.live.proto.BigTurnTableProto.VGiftCardOrBuilder>(
                  getGiftCard(),
                  getParentForChildren(),
                  isClean());
          giftCard_ = null;
        }
        return giftCardBuilder_;
      }

      private int receiverTotalTickets_ ;
      /**
       * <code>optional uint32 receiver_total_tickets = 4;</code>
       *
       * <pre>
       * 主播此时的票数
       * </pre>
       */
      public boolean hasReceiverTotalTickets() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 receiver_total_tickets = 4;</code>
       *
       * <pre>
       * 主播此时的票数
       * </pre>
       */
      public int getReceiverTotalTickets() {
        return receiverTotalTickets_;
      }
      /**
       * <code>optional uint32 receiver_total_tickets = 4;</code>
       *
       * <pre>
       * 主播此时的票数
       * </pre>
       */
      public Builder setReceiverTotalTickets(int value) {
        bitField0_ |= 0x00000008;
        receiverTotalTickets_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 receiver_total_tickets = 4;</code>
       *
       * <pre>
       * 主播此时的票数
       * </pre>
       */
      public Builder clearReceiverTotalTickets() {
        bitField0_ = (bitField0_ & ~0x00000008);
        receiverTotalTickets_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.RewardTurntableRsp)
    }

    static {
      defaultInstance = new RewardTurntableRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.RewardTurntableRsp)
  }

  public interface VGiftCardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.VGiftCard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 gift_id = 1;</code>
     *
     * <pre>
     *礼品卡可兑换的礼物Id
     * </pre>
     */
    boolean hasGiftId();
    /**
     * <code>optional uint32 gift_id = 1;</code>
     *
     * <pre>
     *礼品卡可兑换的礼物Id
     * </pre>
     */
    int getGiftId();

    /**
     * <code>optional uint32 gift_card_cnt = 2;</code>
     *
     * <pre>
     *礼品卡数量
     * </pre>
     */
    boolean hasGiftCardCnt();
    /**
     * <code>optional uint32 gift_card_cnt = 2;</code>
     *
     * <pre>
     *礼品卡数量
     * </pre>
     */
    int getGiftCardCnt();

    /**
     * <code>optional uint64 end_time = 3;</code>
     *
     * <pre>
     *礼品卡有效期结束时间,单位s
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional uint64 end_time = 3;</code>
     *
     * <pre>
     *礼品卡有效期结束时间,单位s
     * </pre>
     */
    long getEndTime();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.VGiftCard}
   *
   * <pre>
   * 虚拟礼物卡
   * </pre>
   */
  public static final class VGiftCard extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.VGiftCard)
      VGiftCardOrBuilder {
    // Use VGiftCard.newBuilder() to construct.
    private VGiftCard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VGiftCard(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VGiftCard defaultInstance;
    public static VGiftCard getDefaultInstance() {
      return defaultInstance;
    }

    public VGiftCard getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VGiftCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              giftId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              giftCardCnt_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              endTime_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_VGiftCard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_VGiftCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.VGiftCard.class, com.wali.live.proto.BigTurnTableProto.VGiftCard.Builder.class);
    }

    public static com.google.protobuf.Parser<VGiftCard> PARSER =
        new com.google.protobuf.AbstractParser<VGiftCard>() {
      public VGiftCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VGiftCard(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VGiftCard> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int GIFT_ID_FIELD_NUMBER = 1;
    private int giftId_;
    /**
     * <code>optional uint32 gift_id = 1;</code>
     *
     * <pre>
     *礼品卡可兑换的礼物Id
     * </pre>
     */
    public boolean hasGiftId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 gift_id = 1;</code>
     *
     * <pre>
     *礼品卡可兑换的礼物Id
     * </pre>
     */
    public int getGiftId() {
      return giftId_;
    }

    public static final int GIFT_CARD_CNT_FIELD_NUMBER = 2;
    private int giftCardCnt_;
    /**
     * <code>optional uint32 gift_card_cnt = 2;</code>
     *
     * <pre>
     *礼品卡数量
     * </pre>
     */
    public boolean hasGiftCardCnt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 gift_card_cnt = 2;</code>
     *
     * <pre>
     *礼品卡数量
     * </pre>
     */
    public int getGiftCardCnt() {
      return giftCardCnt_;
    }

    public static final int END_TIME_FIELD_NUMBER = 3;
    private long endTime_;
    /**
     * <code>optional uint64 end_time = 3;</code>
     *
     * <pre>
     *礼品卡有效期结束时间,单位s
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 end_time = 3;</code>
     *
     * <pre>
     *礼品卡有效期结束时间,单位s
     * </pre>
     */
    public long getEndTime() {
      return endTime_;
    }

    private void initFields() {
      giftId_ = 0;
      giftCardCnt_ = 0;
      endTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, giftId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, giftCardCnt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, endTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, giftId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, giftCardCnt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, endTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.VGiftCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.VGiftCard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.VGiftCard}
     *
     * <pre>
     * 虚拟礼物卡
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.VGiftCard)
        com.wali.live.proto.BigTurnTableProto.VGiftCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_VGiftCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_VGiftCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.VGiftCard.class, com.wali.live.proto.BigTurnTableProto.VGiftCard.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.VGiftCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        giftId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        giftCardCnt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_VGiftCard_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.VGiftCard getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.VGiftCard.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.VGiftCard build() {
        com.wali.live.proto.BigTurnTableProto.VGiftCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.VGiftCard buildPartial() {
        com.wali.live.proto.BigTurnTableProto.VGiftCard result = new com.wali.live.proto.BigTurnTableProto.VGiftCard(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.giftId_ = giftId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.giftCardCnt_ = giftCardCnt_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endTime_ = endTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.VGiftCard) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.VGiftCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.VGiftCard other) {
        if (other == com.wali.live.proto.BigTurnTableProto.VGiftCard.getDefaultInstance()) return this;
        if (other.hasGiftId()) {
          setGiftId(other.getGiftId());
        }
        if (other.hasGiftCardCnt()) {
          setGiftCardCnt(other.getGiftCardCnt());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.VGiftCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.VGiftCard) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int giftId_ ;
      /**
       * <code>optional uint32 gift_id = 1;</code>
       *
       * <pre>
       *礼品卡可兑换的礼物Id
       * </pre>
       */
      public boolean hasGiftId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 gift_id = 1;</code>
       *
       * <pre>
       *礼品卡可兑换的礼物Id
       * </pre>
       */
      public int getGiftId() {
        return giftId_;
      }
      /**
       * <code>optional uint32 gift_id = 1;</code>
       *
       * <pre>
       *礼品卡可兑换的礼物Id
       * </pre>
       */
      public Builder setGiftId(int value) {
        bitField0_ |= 0x00000001;
        giftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gift_id = 1;</code>
       *
       * <pre>
       *礼品卡可兑换的礼物Id
       * </pre>
       */
      public Builder clearGiftId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        giftId_ = 0;
        onChanged();
        return this;
      }

      private int giftCardCnt_ ;
      /**
       * <code>optional uint32 gift_card_cnt = 2;</code>
       *
       * <pre>
       *礼品卡数量
       * </pre>
       */
      public boolean hasGiftCardCnt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 gift_card_cnt = 2;</code>
       *
       * <pre>
       *礼品卡数量
       * </pre>
       */
      public int getGiftCardCnt() {
        return giftCardCnt_;
      }
      /**
       * <code>optional uint32 gift_card_cnt = 2;</code>
       *
       * <pre>
       *礼品卡数量
       * </pre>
       */
      public Builder setGiftCardCnt(int value) {
        bitField0_ |= 0x00000002;
        giftCardCnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gift_card_cnt = 2;</code>
       *
       * <pre>
       *礼品卡数量
       * </pre>
       */
      public Builder clearGiftCardCnt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        giftCardCnt_ = 0;
        onChanged();
        return this;
      }

      private long endTime_ ;
      /**
       * <code>optional uint64 end_time = 3;</code>
       *
       * <pre>
       *礼品卡有效期结束时间,单位s
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 end_time = 3;</code>
       *
       * <pre>
       *礼品卡有效期结束时间,单位s
       * </pre>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional uint64 end_time = 3;</code>
       *
       * <pre>
       *礼品卡有效期结束时间,单位s
       * </pre>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000004;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 end_time = 3;</code>
       *
       * <pre>
       *礼品卡有效期结束时间,单位s
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.VGiftCard)
    }

    static {
      defaultInstance = new VGiftCard(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.VGiftCard)
  }

  public interface TurntableConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.TurntableConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
     */
    boolean hasPreConfig();
    /**
     * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
     */
    com.wali.live.proto.BigTurnTableProto.TurntablePreConfig getPreConfig();
    /**
     * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
     */
    com.wali.live.proto.BigTurnTableProto.TurntablePreConfigOrBuilder getPreConfigOrBuilder();

    /**
     * <code>optional uint32 status = 2;</code>
     *
     * <pre>
     *0:未开启, 1:已开启
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 2;</code>
     *
     * <pre>
     *0:未开启, 1:已开启
     * </pre>
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.TurntableConfig}
   */
  public static final class TurntableConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.TurntableConfig)
      TurntableConfigOrBuilder {
    // Use TurntableConfig.newBuilder() to construct.
    private TurntableConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TurntableConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TurntableConfig defaultInstance;
    public static TurntableConfig getDefaultInstance() {
      return defaultInstance;
    }

    public TurntableConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TurntableConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = preConfig_.toBuilder();
              }
              preConfig_ = input.readMessage(com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(preConfig_);
                preConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntableConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntableConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.TurntableConfig.class, com.wali.live.proto.BigTurnTableProto.TurntableConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<TurntableConfig> PARSER =
        new com.google.protobuf.AbstractParser<TurntableConfig>() {
      public TurntableConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TurntableConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TurntableConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PRECONFIG_FIELD_NUMBER = 1;
    private com.wali.live.proto.BigTurnTableProto.TurntablePreConfig preConfig_;
    /**
     * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
     */
    public boolean hasPreConfig() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
     */
    public com.wali.live.proto.BigTurnTableProto.TurntablePreConfig getPreConfig() {
      return preConfig_;
    }
    /**
     * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
     */
    public com.wali.live.proto.BigTurnTableProto.TurntablePreConfigOrBuilder getPreConfigOrBuilder() {
      return preConfig_;
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>optional uint32 status = 2;</code>
     *
     * <pre>
     *0:未开启, 1:已开启
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 status = 2;</code>
     *
     * <pre>
     *0:未开启, 1:已开启
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    private void initFields() {
      preConfig_ = com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.getDefaultInstance();
      status_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, preConfig_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, status_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, preConfig_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntableConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.TurntableConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.TurntableConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.TurntableConfig)
        com.wali.live.proto.BigTurnTableProto.TurntableConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntableConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntableConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.TurntableConfig.class, com.wali.live.proto.BigTurnTableProto.TurntableConfig.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.TurntableConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPreConfigFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (preConfigBuilder_ == null) {
          preConfig_ = com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.getDefaultInstance();
        } else {
          preConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntableConfig_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.TurntableConfig getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.TurntableConfig.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.TurntableConfig build() {
        com.wali.live.proto.BigTurnTableProto.TurntableConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.TurntableConfig buildPartial() {
        com.wali.live.proto.BigTurnTableProto.TurntableConfig result = new com.wali.live.proto.BigTurnTableProto.TurntableConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (preConfigBuilder_ == null) {
          result.preConfig_ = preConfig_;
        } else {
          result.preConfig_ = preConfigBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.TurntableConfig) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.TurntableConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.TurntableConfig other) {
        if (other == com.wali.live.proto.BigTurnTableProto.TurntableConfig.getDefaultInstance()) return this;
        if (other.hasPreConfig()) {
          mergePreConfig(other.getPreConfig());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.TurntableConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.TurntableConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.wali.live.proto.BigTurnTableProto.TurntablePreConfig preConfig_ = com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.BigTurnTableProto.TurntablePreConfig, com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.Builder, com.wali.live.proto.BigTurnTableProto.TurntablePreConfigOrBuilder> preConfigBuilder_;
      /**
       * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
       */
      public boolean hasPreConfig() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntablePreConfig getPreConfig() {
        if (preConfigBuilder_ == null) {
          return preConfig_;
        } else {
          return preConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
       */
      public Builder setPreConfig(com.wali.live.proto.BigTurnTableProto.TurntablePreConfig value) {
        if (preConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preConfig_ = value;
          onChanged();
        } else {
          preConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
       */
      public Builder setPreConfig(
          com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.Builder builderForValue) {
        if (preConfigBuilder_ == null) {
          preConfig_ = builderForValue.build();
          onChanged();
        } else {
          preConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
       */
      public Builder mergePreConfig(com.wali.live.proto.BigTurnTableProto.TurntablePreConfig value) {
        if (preConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              preConfig_ != com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.getDefaultInstance()) {
            preConfig_ =
              com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.newBuilder(preConfig_).mergeFrom(value).buildPartial();
          } else {
            preConfig_ = value;
          }
          onChanged();
        } else {
          preConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
       */
      public Builder clearPreConfig() {
        if (preConfigBuilder_ == null) {
          preConfig_ = com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.getDefaultInstance();
          onChanged();
        } else {
          preConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.Builder getPreConfigBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPreConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntablePreConfigOrBuilder getPreConfigOrBuilder() {
        if (preConfigBuilder_ != null) {
          return preConfigBuilder_.getMessageOrBuilder();
        } else {
          return preConfig_;
        }
      }
      /**
       * <code>optional .com.wali.live.proto.TurntablePreConfig preConfig = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.BigTurnTableProto.TurntablePreConfig, com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.Builder, com.wali.live.proto.BigTurnTableProto.TurntablePreConfigOrBuilder> 
          getPreConfigFieldBuilder() {
        if (preConfigBuilder_ == null) {
          preConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wali.live.proto.BigTurnTableProto.TurntablePreConfig, com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.Builder, com.wali.live.proto.BigTurnTableProto.TurntablePreConfigOrBuilder>(
                  getPreConfig(),
                  getParentForChildren(),
                  isClean());
          preConfig_ = null;
        }
        return preConfigBuilder_;
      }

      private int status_ ;
      /**
       * <code>optional uint32 status = 2;</code>
       *
       * <pre>
       *0:未开启, 1:已开启
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 status = 2;</code>
       *
       * <pre>
       *0:未开启, 1:已开启
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 2;</code>
       *
       * <pre>
       *0:未开启, 1:已开启
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 2;</code>
       *
       * <pre>
       *0:未开启, 1:已开启
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.TurntableConfig)
    }

    static {
      defaultInstance = new TurntableConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.TurntableConfig)
  }

  public interface PrizeItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.PrizeItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.wali.live.proto.GiftType giftType = 1;</code>
     *
     * <pre>
     *奖品类型
     * </pre>
     */
    boolean hasGiftType();
    /**
     * <code>optional .com.wali.live.proto.GiftType giftType = 1;</code>
     *
     * <pre>
     *奖品类型
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.GiftType getGiftType();

    /**
     * <code>optional uint32 num = 2;</code>
     *
     * <pre>
     *奖品个数
     * </pre>
     */
    boolean hasNum();
    /**
     * <code>optional uint32 num = 2;</code>
     *
     * <pre>
     *奖品个数
     * </pre>
     */
    int getNum();

    /**
     * <code>optional uint32 giftId = 3;</code>
     *
     * <pre>
     *giftType是虚拟礼物有效
     * </pre>
     */
    boolean hasGiftId();
    /**
     * <code>optional uint32 giftId = 3;</code>
     *
     * <pre>
     *giftType是虚拟礼物有效
     * </pre>
     */
    int getGiftId();

    /**
     * <code>optional .com.wali.live.proto.ToWhom toWhom = 4;</code>
     *
     * <pre>
     *奖品发给谁
     * </pre>
     */
    boolean hasToWhom();
    /**
     * <code>optional .com.wali.live.proto.ToWhom toWhom = 4;</code>
     *
     * <pre>
     *奖品发给谁
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.ToWhom getToWhom();

    /**
     * <code>optional string times = 5;</code>
     *
     * <pre>
     *giftType是虚拟钻石时用于展示发放多少倍的钻石数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional string times = 5;</code>
     *
     * <pre>
     *giftType是虚拟钻石时用于展示发放多少倍的钻石数
     * </pre>
     */
    java.lang.String getTimes();
    /**
     * <code>optional string times = 5;</code>
     *
     * <pre>
     *giftType是虚拟钻石时用于展示发放多少倍的钻石数
     * </pre>
     */
    com.google.protobuf.ByteString
        getTimesBytes();

    /**
     * <code>optional bool isCustom = 6;</code>
     *
     * <pre>
     *是否是主播自定义奖项
     * </pre>
     */
    boolean hasIsCustom();
    /**
     * <code>optional bool isCustom = 6;</code>
     *
     * <pre>
     *是否是主播自定义奖项
     * </pre>
     */
    boolean getIsCustom();

    /**
     * <code>optional string customPrizeName = 7;</code>
     *
     * <pre>
     *自定义奖项名字,isCustom为true读取
     * </pre>
     */
    boolean hasCustomPrizeName();
    /**
     * <code>optional string customPrizeName = 7;</code>
     *
     * <pre>
     *自定义奖项名字,isCustom为true读取
     * </pre>
     */
    java.lang.String getCustomPrizeName();
    /**
     * <code>optional string customPrizeName = 7;</code>
     *
     * <pre>
     *自定义奖项名字,isCustom为true读取
     * </pre>
     */
    com.google.protobuf.ByteString
        getCustomPrizeNameBytes();

    /**
     * <code>optional string giftName = 8;</code>
     *
     * <pre>
     *礼物名字,服务器内部使用，不对客户端下发
     * </pre>
     */
    boolean hasGiftName();
    /**
     * <code>optional string giftName = 8;</code>
     *
     * <pre>
     *礼物名字,服务器内部使用，不对客户端下发
     * </pre>
     */
    java.lang.String getGiftName();
    /**
     * <code>optional string giftName = 8;</code>
     *
     * <pre>
     *礼物名字,服务器内部使用，不对客户端下发
     * </pre>
     */
    com.google.protobuf.ByteString
        getGiftNameBytes();

    /**
     * <code>optional uint32 giftValue = 9;</code>
     *
     * <pre>
     *单个礼物价值
     * </pre>
     */
    boolean hasGiftValue();
    /**
     * <code>optional uint32 giftValue = 9;</code>
     *
     * <pre>
     *单个礼物价值
     * </pre>
     */
    int getGiftValue();

    /**
     * <code>optional bool needGlobalMsg = 10;</code>
     *
     * <pre>
     *是否需要发送全局push,服务器内部使用，不对客户端下发
     * </pre>
     */
    boolean hasNeedGlobalMsg();
    /**
     * <code>optional bool needGlobalMsg = 10;</code>
     *
     * <pre>
     *是否需要发送全局push,服务器内部使用，不对客户端下发
     * </pre>
     */
    boolean getNeedGlobalMsg();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.PrizeItem}
   */
  public static final class PrizeItem extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.PrizeItem)
      PrizeItemOrBuilder {
    // Use PrizeItem.newBuilder() to construct.
    private PrizeItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PrizeItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PrizeItem defaultInstance;
    public static PrizeItem getDefaultInstance() {
      return defaultInstance;
    }

    public PrizeItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PrizeItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.wali.live.proto.BigTurnTableProto.GiftType value = com.wali.live.proto.BigTurnTableProto.GiftType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                giftType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              num_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              giftId_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.wali.live.proto.BigTurnTableProto.ToWhom value = com.wali.live.proto.BigTurnTableProto.ToWhom.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                toWhom_ = value;
              }
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              times_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isCustom_ = input.readBool();
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              customPrizeName_ = bs;
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              giftName_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              giftValue_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              needGlobalMsg_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_PrizeItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_PrizeItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.PrizeItem.class, com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder.class);
    }

    public static com.google.protobuf.Parser<PrizeItem> PARSER =
        new com.google.protobuf.AbstractParser<PrizeItem>() {
      public PrizeItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PrizeItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PrizeItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int GIFTTYPE_FIELD_NUMBER = 1;
    private com.wali.live.proto.BigTurnTableProto.GiftType giftType_;
    /**
     * <code>optional .com.wali.live.proto.GiftType giftType = 1;</code>
     *
     * <pre>
     *奖品类型
     * </pre>
     */
    public boolean hasGiftType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.wali.live.proto.GiftType giftType = 1;</code>
     *
     * <pre>
     *奖品类型
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.GiftType getGiftType() {
      return giftType_;
    }

    public static final int NUM_FIELD_NUMBER = 2;
    private int num_;
    /**
     * <code>optional uint32 num = 2;</code>
     *
     * <pre>
     *奖品个数
     * </pre>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 num = 2;</code>
     *
     * <pre>
     *奖品个数
     * </pre>
     */
    public int getNum() {
      return num_;
    }

    public static final int GIFTID_FIELD_NUMBER = 3;
    private int giftId_;
    /**
     * <code>optional uint32 giftId = 3;</code>
     *
     * <pre>
     *giftType是虚拟礼物有效
     * </pre>
     */
    public boolean hasGiftId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 giftId = 3;</code>
     *
     * <pre>
     *giftType是虚拟礼物有效
     * </pre>
     */
    public int getGiftId() {
      return giftId_;
    }

    public static final int TOWHOM_FIELD_NUMBER = 4;
    private com.wali.live.proto.BigTurnTableProto.ToWhom toWhom_;
    /**
     * <code>optional .com.wali.live.proto.ToWhom toWhom = 4;</code>
     *
     * <pre>
     *奖品发给谁
     * </pre>
     */
    public boolean hasToWhom() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.wali.live.proto.ToWhom toWhom = 4;</code>
     *
     * <pre>
     *奖品发给谁
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.ToWhom getToWhom() {
      return toWhom_;
    }

    public static final int TIMES_FIELD_NUMBER = 5;
    private java.lang.Object times_;
    /**
     * <code>optional string times = 5;</code>
     *
     * <pre>
     *giftType是虚拟钻石时用于展示发放多少倍的钻石数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string times = 5;</code>
     *
     * <pre>
     *giftType是虚拟钻石时用于展示发放多少倍的钻石数
     * </pre>
     */
    public java.lang.String getTimes() {
      java.lang.Object ref = times_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          times_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string times = 5;</code>
     *
     * <pre>
     *giftType是虚拟钻石时用于展示发放多少倍的钻石数
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTimesBytes() {
      java.lang.Object ref = times_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        times_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISCUSTOM_FIELD_NUMBER = 6;
    private boolean isCustom_;
    /**
     * <code>optional bool isCustom = 6;</code>
     *
     * <pre>
     *是否是主播自定义奖项
     * </pre>
     */
    public boolean hasIsCustom() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool isCustom = 6;</code>
     *
     * <pre>
     *是否是主播自定义奖项
     * </pre>
     */
    public boolean getIsCustom() {
      return isCustom_;
    }

    public static final int CUSTOMPRIZENAME_FIELD_NUMBER = 7;
    private java.lang.Object customPrizeName_;
    /**
     * <code>optional string customPrizeName = 7;</code>
     *
     * <pre>
     *自定义奖项名字,isCustom为true读取
     * </pre>
     */
    public boolean hasCustomPrizeName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string customPrizeName = 7;</code>
     *
     * <pre>
     *自定义奖项名字,isCustom为true读取
     * </pre>
     */
    public java.lang.String getCustomPrizeName() {
      java.lang.Object ref = customPrizeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          customPrizeName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string customPrizeName = 7;</code>
     *
     * <pre>
     *自定义奖项名字,isCustom为true读取
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCustomPrizeNameBytes() {
      java.lang.Object ref = customPrizeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customPrizeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GIFTNAME_FIELD_NUMBER = 8;
    private java.lang.Object giftName_;
    /**
     * <code>optional string giftName = 8;</code>
     *
     * <pre>
     *礼物名字,服务器内部使用，不对客户端下发
     * </pre>
     */
    public boolean hasGiftName() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string giftName = 8;</code>
     *
     * <pre>
     *礼物名字,服务器内部使用，不对客户端下发
     * </pre>
     */
    public java.lang.String getGiftName() {
      java.lang.Object ref = giftName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          giftName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string giftName = 8;</code>
     *
     * <pre>
     *礼物名字,服务器内部使用，不对客户端下发
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGiftNameBytes() {
      java.lang.Object ref = giftName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        giftName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GIFTVALUE_FIELD_NUMBER = 9;
    private int giftValue_;
    /**
     * <code>optional uint32 giftValue = 9;</code>
     *
     * <pre>
     *单个礼物价值
     * </pre>
     */
    public boolean hasGiftValue() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 giftValue = 9;</code>
     *
     * <pre>
     *单个礼物价值
     * </pre>
     */
    public int getGiftValue() {
      return giftValue_;
    }

    public static final int NEEDGLOBALMSG_FIELD_NUMBER = 10;
    private boolean needGlobalMsg_;
    /**
     * <code>optional bool needGlobalMsg = 10;</code>
     *
     * <pre>
     *是否需要发送全局push,服务器内部使用，不对客户端下发
     * </pre>
     */
    public boolean hasNeedGlobalMsg() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool needGlobalMsg = 10;</code>
     *
     * <pre>
     *是否需要发送全局push,服务器内部使用，不对客户端下发
     * </pre>
     */
    public boolean getNeedGlobalMsg() {
      return needGlobalMsg_;
    }

    private void initFields() {
      giftType_ = com.wali.live.proto.BigTurnTableProto.GiftType.VIRTUAL_GIFT;
      num_ = 0;
      giftId_ = 0;
      toWhom_ = com.wali.live.proto.BigTurnTableProto.ToWhom.ANCHOR;
      times_ = "";
      isCustom_ = false;
      customPrizeName_ = "";
      giftName_ = "";
      giftValue_ = 0;
      needGlobalMsg_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, giftType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, num_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, giftId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, toWhom_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getTimesBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, isCustom_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getCustomPrizeNameBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getGiftNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, giftValue_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, needGlobalMsg_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, giftType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, num_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, giftId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, toWhom_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getTimesBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isCustom_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getCustomPrizeNameBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getGiftNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, giftValue_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, needGlobalMsg_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.PrizeItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.PrizeItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.PrizeItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.PrizeItem)
        com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_PrizeItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_PrizeItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.PrizeItem.class, com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.PrizeItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        giftType_ = com.wali.live.proto.BigTurnTableProto.GiftType.VIRTUAL_GIFT;
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        giftId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        toWhom_ = com.wali.live.proto.BigTurnTableProto.ToWhom.ANCHOR;
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        isCustom_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        customPrizeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        giftName_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        giftValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        needGlobalMsg_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_PrizeItem_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.PrizeItem getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.PrizeItem.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.PrizeItem build() {
        com.wali.live.proto.BigTurnTableProto.PrizeItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.PrizeItem buildPartial() {
        com.wali.live.proto.BigTurnTableProto.PrizeItem result = new com.wali.live.proto.BigTurnTableProto.PrizeItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.giftType_ = giftType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.num_ = num_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.giftId_ = giftId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.toWhom_ = toWhom_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.times_ = times_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isCustom_ = isCustom_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.customPrizeName_ = customPrizeName_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.giftName_ = giftName_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.giftValue_ = giftValue_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.needGlobalMsg_ = needGlobalMsg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.PrizeItem) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.PrizeItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.PrizeItem other) {
        if (other == com.wali.live.proto.BigTurnTableProto.PrizeItem.getDefaultInstance()) return this;
        if (other.hasGiftType()) {
          setGiftType(other.getGiftType());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        if (other.hasGiftId()) {
          setGiftId(other.getGiftId());
        }
        if (other.hasToWhom()) {
          setToWhom(other.getToWhom());
        }
        if (other.hasTimes()) {
          bitField0_ |= 0x00000010;
          times_ = other.times_;
          onChanged();
        }
        if (other.hasIsCustom()) {
          setIsCustom(other.getIsCustom());
        }
        if (other.hasCustomPrizeName()) {
          bitField0_ |= 0x00000040;
          customPrizeName_ = other.customPrizeName_;
          onChanged();
        }
        if (other.hasGiftName()) {
          bitField0_ |= 0x00000080;
          giftName_ = other.giftName_;
          onChanged();
        }
        if (other.hasGiftValue()) {
          setGiftValue(other.getGiftValue());
        }
        if (other.hasNeedGlobalMsg()) {
          setNeedGlobalMsg(other.getNeedGlobalMsg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.PrizeItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.PrizeItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.wali.live.proto.BigTurnTableProto.GiftType giftType_ = com.wali.live.proto.BigTurnTableProto.GiftType.VIRTUAL_GIFT;
      /**
       * <code>optional .com.wali.live.proto.GiftType giftType = 1;</code>
       *
       * <pre>
       *奖品类型
       * </pre>
       */
      public boolean hasGiftType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.wali.live.proto.GiftType giftType = 1;</code>
       *
       * <pre>
       *奖品类型
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.GiftType getGiftType() {
        return giftType_;
      }
      /**
       * <code>optional .com.wali.live.proto.GiftType giftType = 1;</code>
       *
       * <pre>
       *奖品类型
       * </pre>
       */
      public Builder setGiftType(com.wali.live.proto.BigTurnTableProto.GiftType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        giftType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.GiftType giftType = 1;</code>
       *
       * <pre>
       *奖品类型
       * </pre>
       */
      public Builder clearGiftType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        giftType_ = com.wali.live.proto.BigTurnTableProto.GiftType.VIRTUAL_GIFT;
        onChanged();
        return this;
      }

      private int num_ ;
      /**
       * <code>optional uint32 num = 2;</code>
       *
       * <pre>
       *奖品个数
       * </pre>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 num = 2;</code>
       *
       * <pre>
       *奖品个数
       * </pre>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <code>optional uint32 num = 2;</code>
       *
       * <pre>
       *奖品个数
       * </pre>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000002;
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num = 2;</code>
       *
       * <pre>
       *奖品个数
       * </pre>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        num_ = 0;
        onChanged();
        return this;
      }

      private int giftId_ ;
      /**
       * <code>optional uint32 giftId = 3;</code>
       *
       * <pre>
       *giftType是虚拟礼物有效
       * </pre>
       */
      public boolean hasGiftId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 giftId = 3;</code>
       *
       * <pre>
       *giftType是虚拟礼物有效
       * </pre>
       */
      public int getGiftId() {
        return giftId_;
      }
      /**
       * <code>optional uint32 giftId = 3;</code>
       *
       * <pre>
       *giftType是虚拟礼物有效
       * </pre>
       */
      public Builder setGiftId(int value) {
        bitField0_ |= 0x00000004;
        giftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 giftId = 3;</code>
       *
       * <pre>
       *giftType是虚拟礼物有效
       * </pre>
       */
      public Builder clearGiftId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        giftId_ = 0;
        onChanged();
        return this;
      }

      private com.wali.live.proto.BigTurnTableProto.ToWhom toWhom_ = com.wali.live.proto.BigTurnTableProto.ToWhom.ANCHOR;
      /**
       * <code>optional .com.wali.live.proto.ToWhom toWhom = 4;</code>
       *
       * <pre>
       *奖品发给谁
       * </pre>
       */
      public boolean hasToWhom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.wali.live.proto.ToWhom toWhom = 4;</code>
       *
       * <pre>
       *奖品发给谁
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.ToWhom getToWhom() {
        return toWhom_;
      }
      /**
       * <code>optional .com.wali.live.proto.ToWhom toWhom = 4;</code>
       *
       * <pre>
       *奖品发给谁
       * </pre>
       */
      public Builder setToWhom(com.wali.live.proto.BigTurnTableProto.ToWhom value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        toWhom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.ToWhom toWhom = 4;</code>
       *
       * <pre>
       *奖品发给谁
       * </pre>
       */
      public Builder clearToWhom() {
        bitField0_ = (bitField0_ & ~0x00000008);
        toWhom_ = com.wali.live.proto.BigTurnTableProto.ToWhom.ANCHOR;
        onChanged();
        return this;
      }

      private java.lang.Object times_ = "";
      /**
       * <code>optional string times = 5;</code>
       *
       * <pre>
       *giftType是虚拟钻石时用于展示发放多少倍的钻石数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string times = 5;</code>
       *
       * <pre>
       *giftType是虚拟钻石时用于展示发放多少倍的钻石数
       * </pre>
       */
      public java.lang.String getTimes() {
        java.lang.Object ref = times_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            times_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string times = 5;</code>
       *
       * <pre>
       *giftType是虚拟钻石时用于展示发放多少倍的钻石数
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTimesBytes() {
        java.lang.Object ref = times_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          times_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string times = 5;</code>
       *
       * <pre>
       *giftType是虚拟钻石时用于展示发放多少倍的钻石数
       * </pre>
       */
      public Builder setTimes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string times = 5;</code>
       *
       * <pre>
       *giftType是虚拟钻石时用于展示发放多少倍的钻石数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        times_ = getDefaultInstance().getTimes();
        onChanged();
        return this;
      }
      /**
       * <code>optional string times = 5;</code>
       *
       * <pre>
       *giftType是虚拟钻石时用于展示发放多少倍的钻石数
       * </pre>
       */
      public Builder setTimesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        times_ = value;
        onChanged();
        return this;
      }

      private boolean isCustom_ ;
      /**
       * <code>optional bool isCustom = 6;</code>
       *
       * <pre>
       *是否是主播自定义奖项
       * </pre>
       */
      public boolean hasIsCustom() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool isCustom = 6;</code>
       *
       * <pre>
       *是否是主播自定义奖项
       * </pre>
       */
      public boolean getIsCustom() {
        return isCustom_;
      }
      /**
       * <code>optional bool isCustom = 6;</code>
       *
       * <pre>
       *是否是主播自定义奖项
       * </pre>
       */
      public Builder setIsCustom(boolean value) {
        bitField0_ |= 0x00000020;
        isCustom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isCustom = 6;</code>
       *
       * <pre>
       *是否是主播自定义奖项
       * </pre>
       */
      public Builder clearIsCustom() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isCustom_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object customPrizeName_ = "";
      /**
       * <code>optional string customPrizeName = 7;</code>
       *
       * <pre>
       *自定义奖项名字,isCustom为true读取
       * </pre>
       */
      public boolean hasCustomPrizeName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string customPrizeName = 7;</code>
       *
       * <pre>
       *自定义奖项名字,isCustom为true读取
       * </pre>
       */
      public java.lang.String getCustomPrizeName() {
        java.lang.Object ref = customPrizeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            customPrizeName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string customPrizeName = 7;</code>
       *
       * <pre>
       *自定义奖项名字,isCustom为true读取
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCustomPrizeNameBytes() {
        java.lang.Object ref = customPrizeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          customPrizeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string customPrizeName = 7;</code>
       *
       * <pre>
       *自定义奖项名字,isCustom为true读取
       * </pre>
       */
      public Builder setCustomPrizeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        customPrizeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string customPrizeName = 7;</code>
       *
       * <pre>
       *自定义奖项名字,isCustom为true读取
       * </pre>
       */
      public Builder clearCustomPrizeName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        customPrizeName_ = getDefaultInstance().getCustomPrizeName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string customPrizeName = 7;</code>
       *
       * <pre>
       *自定义奖项名字,isCustom为true读取
       * </pre>
       */
      public Builder setCustomPrizeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        customPrizeName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object giftName_ = "";
      /**
       * <code>optional string giftName = 8;</code>
       *
       * <pre>
       *礼物名字,服务器内部使用，不对客户端下发
       * </pre>
       */
      public boolean hasGiftName() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string giftName = 8;</code>
       *
       * <pre>
       *礼物名字,服务器内部使用，不对客户端下发
       * </pre>
       */
      public java.lang.String getGiftName() {
        java.lang.Object ref = giftName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            giftName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string giftName = 8;</code>
       *
       * <pre>
       *礼物名字,服务器内部使用，不对客户端下发
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGiftNameBytes() {
        java.lang.Object ref = giftName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          giftName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string giftName = 8;</code>
       *
       * <pre>
       *礼物名字,服务器内部使用，不对客户端下发
       * </pre>
       */
      public Builder setGiftName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        giftName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string giftName = 8;</code>
       *
       * <pre>
       *礼物名字,服务器内部使用，不对客户端下发
       * </pre>
       */
      public Builder clearGiftName() {
        bitField0_ = (bitField0_ & ~0x00000080);
        giftName_ = getDefaultInstance().getGiftName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string giftName = 8;</code>
       *
       * <pre>
       *礼物名字,服务器内部使用，不对客户端下发
       * </pre>
       */
      public Builder setGiftNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        giftName_ = value;
        onChanged();
        return this;
      }

      private int giftValue_ ;
      /**
       * <code>optional uint32 giftValue = 9;</code>
       *
       * <pre>
       *单个礼物价值
       * </pre>
       */
      public boolean hasGiftValue() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 giftValue = 9;</code>
       *
       * <pre>
       *单个礼物价值
       * </pre>
       */
      public int getGiftValue() {
        return giftValue_;
      }
      /**
       * <code>optional uint32 giftValue = 9;</code>
       *
       * <pre>
       *单个礼物价值
       * </pre>
       */
      public Builder setGiftValue(int value) {
        bitField0_ |= 0x00000100;
        giftValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 giftValue = 9;</code>
       *
       * <pre>
       *单个礼物价值
       * </pre>
       */
      public Builder clearGiftValue() {
        bitField0_ = (bitField0_ & ~0x00000100);
        giftValue_ = 0;
        onChanged();
        return this;
      }

      private boolean needGlobalMsg_ ;
      /**
       * <code>optional bool needGlobalMsg = 10;</code>
       *
       * <pre>
       *是否需要发送全局push,服务器内部使用，不对客户端下发
       * </pre>
       */
      public boolean hasNeedGlobalMsg() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool needGlobalMsg = 10;</code>
       *
       * <pre>
       *是否需要发送全局push,服务器内部使用，不对客户端下发
       * </pre>
       */
      public boolean getNeedGlobalMsg() {
        return needGlobalMsg_;
      }
      /**
       * <code>optional bool needGlobalMsg = 10;</code>
       *
       * <pre>
       *是否需要发送全局push,服务器内部使用，不对客户端下发
       * </pre>
       */
      public Builder setNeedGlobalMsg(boolean value) {
        bitField0_ |= 0x00000200;
        needGlobalMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool needGlobalMsg = 10;</code>
       *
       * <pre>
       *是否需要发送全局push,服务器内部使用，不对客户端下发
       * </pre>
       */
      public Builder clearNeedGlobalMsg() {
        bitField0_ = (bitField0_ & ~0x00000200);
        needGlobalMsg_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.PrizeItem)
    }

    static {
      defaultInstance = new PrizeItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.PrizeItem)
  }

  public interface TurntablePreConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.TurntablePreConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 1;</code>
     *
     * <pre>
     *转盘类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 1;</code>
     *
     * <pre>
     *转盘类型
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.TurntableType getType();

    /**
     * <code>optional uint32 startCost = 2;</code>
     *
     * <pre>
     *开启需要的钻石数
     * </pre>
     */
    boolean hasStartCost();
    /**
     * <code>optional uint32 startCost = 2;</code>
     *
     * <pre>
     *开启需要的钻石数
     * </pre>
     */
    int getStartCost();

    /**
     * <code>optional uint32 drawCost = 3;</code>
     *
     * <pre>
     *一次抽奖需要的钻石数
     * </pre>
     */
    boolean hasDrawCost();
    /**
     * <code>optional uint32 drawCost = 3;</code>
     *
     * <pre>
     *一次抽奖需要的钻石数
     * </pre>
     */
    int getDrawCost();

    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    java.util.List<com.wali.live.proto.BigTurnTableProto.PrizeItem> 
        getPrizeItemList();
    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.PrizeItem getPrizeItem(int index);
    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    int getPrizeItemCount();
    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    java.util.List<? extends com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder> 
        getPrizeItemOrBuilderList();
    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder getPrizeItemOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.wali.live.proto.TurntablePreConfig}
   */
  public static final class TurntablePreConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.TurntablePreConfig)
      TurntablePreConfigOrBuilder {
    // Use TurntablePreConfig.newBuilder() to construct.
    private TurntablePreConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TurntablePreConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TurntablePreConfig defaultInstance;
    public static TurntablePreConfig getDefaultInstance() {
      return defaultInstance;
    }

    public TurntablePreConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TurntablePreConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.wali.live.proto.BigTurnTableProto.TurntableType value = com.wali.live.proto.BigTurnTableProto.TurntableType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startCost_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              drawCost_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                prizeItem_ = new java.util.ArrayList<com.wali.live.proto.BigTurnTableProto.PrizeItem>();
                mutable_bitField0_ |= 0x00000008;
              }
              prizeItem_.add(input.readMessage(com.wali.live.proto.BigTurnTableProto.PrizeItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          prizeItem_ = java.util.Collections.unmodifiableList(prizeItem_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePreConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePreConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.class, com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<TurntablePreConfig> PARSER =
        new com.google.protobuf.AbstractParser<TurntablePreConfig>() {
      public TurntablePreConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TurntablePreConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TurntablePreConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.wali.live.proto.BigTurnTableProto.TurntableType type_;
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 1;</code>
     *
     * <pre>
     *转盘类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.wali.live.proto.TurntableType type = 1;</code>
     *
     * <pre>
     *转盘类型
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.TurntableType getType() {
      return type_;
    }

    public static final int STARTCOST_FIELD_NUMBER = 2;
    private int startCost_;
    /**
     * <code>optional uint32 startCost = 2;</code>
     *
     * <pre>
     *开启需要的钻石数
     * </pre>
     */
    public boolean hasStartCost() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 startCost = 2;</code>
     *
     * <pre>
     *开启需要的钻石数
     * </pre>
     */
    public int getStartCost() {
      return startCost_;
    }

    public static final int DRAWCOST_FIELD_NUMBER = 3;
    private int drawCost_;
    /**
     * <code>optional uint32 drawCost = 3;</code>
     *
     * <pre>
     *一次抽奖需要的钻石数
     * </pre>
     */
    public boolean hasDrawCost() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 drawCost = 3;</code>
     *
     * <pre>
     *一次抽奖需要的钻石数
     * </pre>
     */
    public int getDrawCost() {
      return drawCost_;
    }

    public static final int PRIZEITEM_FIELD_NUMBER = 4;
    private java.util.List<com.wali.live.proto.BigTurnTableProto.PrizeItem> prizeItem_;
    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    public java.util.List<com.wali.live.proto.BigTurnTableProto.PrizeItem> getPrizeItemList() {
      return prizeItem_;
    }
    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    public java.util.List<? extends com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder> 
        getPrizeItemOrBuilderList() {
      return prizeItem_;
    }
    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    public int getPrizeItemCount() {
      return prizeItem_.size();
    }
    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.PrizeItem getPrizeItem(int index) {
      return prizeItem_.get(index);
    }
    /**
     * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
     *
     * <pre>
     *奖品内容
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder getPrizeItemOrBuilder(
        int index) {
      return prizeItem_.get(index);
    }

    private void initFields() {
      type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
      startCost_ = 0;
      drawCost_ = 0;
      prizeItem_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, startCost_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, drawCost_);
      }
      for (int i = 0; i < prizeItem_.size(); i++) {
        output.writeMessage(4, prizeItem_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, startCost_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, drawCost_);
      }
      for (int i = 0; i < prizeItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, prizeItem_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.TurntablePreConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.TurntablePreConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.TurntablePreConfig)
        com.wali.live.proto.BigTurnTableProto.TurntablePreConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePreConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePreConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.class, com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPrizeItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
        bitField0_ = (bitField0_ & ~0x00000001);
        startCost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        drawCost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (prizeItemBuilder_ == null) {
          prizeItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          prizeItemBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePreConfig_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.TurntablePreConfig getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.TurntablePreConfig build() {
        com.wali.live.proto.BigTurnTableProto.TurntablePreConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.TurntablePreConfig buildPartial() {
        com.wali.live.proto.BigTurnTableProto.TurntablePreConfig result = new com.wali.live.proto.BigTurnTableProto.TurntablePreConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startCost_ = startCost_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.drawCost_ = drawCost_;
        if (prizeItemBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            prizeItem_ = java.util.Collections.unmodifiableList(prizeItem_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.prizeItem_ = prizeItem_;
        } else {
          result.prizeItem_ = prizeItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.TurntablePreConfig) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.TurntablePreConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.TurntablePreConfig other) {
        if (other == com.wali.live.proto.BigTurnTableProto.TurntablePreConfig.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasStartCost()) {
          setStartCost(other.getStartCost());
        }
        if (other.hasDrawCost()) {
          setDrawCost(other.getDrawCost());
        }
        if (prizeItemBuilder_ == null) {
          if (!other.prizeItem_.isEmpty()) {
            if (prizeItem_.isEmpty()) {
              prizeItem_ = other.prizeItem_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePrizeItemIsMutable();
              prizeItem_.addAll(other.prizeItem_);
            }
            onChanged();
          }
        } else {
          if (!other.prizeItem_.isEmpty()) {
            if (prizeItemBuilder_.isEmpty()) {
              prizeItemBuilder_.dispose();
              prizeItemBuilder_ = null;
              prizeItem_ = other.prizeItem_;
              bitField0_ = (bitField0_ & ~0x00000008);
              prizeItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPrizeItemFieldBuilder() : null;
            } else {
              prizeItemBuilder_.addAllMessages(other.prizeItem_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.TurntablePreConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.TurntablePreConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.wali.live.proto.BigTurnTableProto.TurntableType type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 1;</code>
       *
       * <pre>
       *转盘类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 1;</code>
       *
       * <pre>
       *转盘类型
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntableType getType() {
        return type_;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 1;</code>
       *
       * <pre>
       *转盘类型
       * </pre>
       */
      public Builder setType(com.wali.live.proto.BigTurnTableProto.TurntableType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableType type = 1;</code>
       *
       * <pre>
       *转盘类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.wali.live.proto.BigTurnTableProto.TurntableType.TYPE_128;
        onChanged();
        return this;
      }

      private int startCost_ ;
      /**
       * <code>optional uint32 startCost = 2;</code>
       *
       * <pre>
       *开启需要的钻石数
       * </pre>
       */
      public boolean hasStartCost() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 startCost = 2;</code>
       *
       * <pre>
       *开启需要的钻石数
       * </pre>
       */
      public int getStartCost() {
        return startCost_;
      }
      /**
       * <code>optional uint32 startCost = 2;</code>
       *
       * <pre>
       *开启需要的钻石数
       * </pre>
       */
      public Builder setStartCost(int value) {
        bitField0_ |= 0x00000002;
        startCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 startCost = 2;</code>
       *
       * <pre>
       *开启需要的钻石数
       * </pre>
       */
      public Builder clearStartCost() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startCost_ = 0;
        onChanged();
        return this;
      }

      private int drawCost_ ;
      /**
       * <code>optional uint32 drawCost = 3;</code>
       *
       * <pre>
       *一次抽奖需要的钻石数
       * </pre>
       */
      public boolean hasDrawCost() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 drawCost = 3;</code>
       *
       * <pre>
       *一次抽奖需要的钻石数
       * </pre>
       */
      public int getDrawCost() {
        return drawCost_;
      }
      /**
       * <code>optional uint32 drawCost = 3;</code>
       *
       * <pre>
       *一次抽奖需要的钻石数
       * </pre>
       */
      public Builder setDrawCost(int value) {
        bitField0_ |= 0x00000004;
        drawCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 drawCost = 3;</code>
       *
       * <pre>
       *一次抽奖需要的钻石数
       * </pre>
       */
      public Builder clearDrawCost() {
        bitField0_ = (bitField0_ & ~0x00000004);
        drawCost_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.wali.live.proto.BigTurnTableProto.PrizeItem> prizeItem_ =
        java.util.Collections.emptyList();
      private void ensurePrizeItemIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          prizeItem_ = new java.util.ArrayList<com.wali.live.proto.BigTurnTableProto.PrizeItem>(prizeItem_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.wali.live.proto.BigTurnTableProto.PrizeItem, com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder, com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder> prizeItemBuilder_;

      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public java.util.List<com.wali.live.proto.BigTurnTableProto.PrizeItem> getPrizeItemList() {
        if (prizeItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(prizeItem_);
        } else {
          return prizeItemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public int getPrizeItemCount() {
        if (prizeItemBuilder_ == null) {
          return prizeItem_.size();
        } else {
          return prizeItemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.PrizeItem getPrizeItem(int index) {
        if (prizeItemBuilder_ == null) {
          return prizeItem_.get(index);
        } else {
          return prizeItemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public Builder setPrizeItem(
          int index, com.wali.live.proto.BigTurnTableProto.PrizeItem value) {
        if (prizeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrizeItemIsMutable();
          prizeItem_.set(index, value);
          onChanged();
        } else {
          prizeItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public Builder setPrizeItem(
          int index, com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder builderForValue) {
        if (prizeItemBuilder_ == null) {
          ensurePrizeItemIsMutable();
          prizeItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          prizeItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public Builder addPrizeItem(com.wali.live.proto.BigTurnTableProto.PrizeItem value) {
        if (prizeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrizeItemIsMutable();
          prizeItem_.add(value);
          onChanged();
        } else {
          prizeItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public Builder addPrizeItem(
          int index, com.wali.live.proto.BigTurnTableProto.PrizeItem value) {
        if (prizeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrizeItemIsMutable();
          prizeItem_.add(index, value);
          onChanged();
        } else {
          prizeItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public Builder addPrizeItem(
          com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder builderForValue) {
        if (prizeItemBuilder_ == null) {
          ensurePrizeItemIsMutable();
          prizeItem_.add(builderForValue.build());
          onChanged();
        } else {
          prizeItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public Builder addPrizeItem(
          int index, com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder builderForValue) {
        if (prizeItemBuilder_ == null) {
          ensurePrizeItemIsMutable();
          prizeItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          prizeItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public Builder addAllPrizeItem(
          java.lang.Iterable<? extends com.wali.live.proto.BigTurnTableProto.PrizeItem> values) {
        if (prizeItemBuilder_ == null) {
          ensurePrizeItemIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, prizeItem_);
          onChanged();
        } else {
          prizeItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public Builder clearPrizeItem() {
        if (prizeItemBuilder_ == null) {
          prizeItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          prizeItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public Builder removePrizeItem(int index) {
        if (prizeItemBuilder_ == null) {
          ensurePrizeItemIsMutable();
          prizeItem_.remove(index);
          onChanged();
        } else {
          prizeItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder getPrizeItemBuilder(
          int index) {
        return getPrizeItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder getPrizeItemOrBuilder(
          int index) {
        if (prizeItemBuilder_ == null) {
          return prizeItem_.get(index);  } else {
          return prizeItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public java.util.List<? extends com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder> 
           getPrizeItemOrBuilderList() {
        if (prizeItemBuilder_ != null) {
          return prizeItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(prizeItem_);
        }
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder addPrizeItemBuilder() {
        return getPrizeItemFieldBuilder().addBuilder(
            com.wali.live.proto.BigTurnTableProto.PrizeItem.getDefaultInstance());
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder addPrizeItemBuilder(
          int index) {
        return getPrizeItemFieldBuilder().addBuilder(
            index, com.wali.live.proto.BigTurnTableProto.PrizeItem.getDefaultInstance());
      }
      /**
       * <code>repeated .com.wali.live.proto.PrizeItem prizeItem = 4;</code>
       *
       * <pre>
       *奖品内容
       * </pre>
       */
      public java.util.List<com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder> 
           getPrizeItemBuilderList() {
        return getPrizeItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.wali.live.proto.BigTurnTableProto.PrizeItem, com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder, com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder> 
          getPrizeItemFieldBuilder() {
        if (prizeItemBuilder_ == null) {
          prizeItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.wali.live.proto.BigTurnTableProto.PrizeItem, com.wali.live.proto.BigTurnTableProto.PrizeItem.Builder, com.wali.live.proto.BigTurnTableProto.PrizeItemOrBuilder>(
                  prizeItem_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          prizeItem_ = null;
        }
        return prizeItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.TurntablePreConfig)
    }

    static {
      defaultInstance = new TurntablePreConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.TurntablePreConfig)
  }

  public interface TurntablePushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.TurntablePush)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
     *
     * <pre>
     *直播间大转盘内容
     * </pre>
     */
    boolean hasTurntableConfig();
    /**
     * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
     *
     * <pre>
     *直播间大转盘内容
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.TurntableConfig getTurntableConfig();
    /**
     * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
     *
     * <pre>
     *直播间大转盘内容
     * </pre>
     */
    com.wali.live.proto.BigTurnTableProto.TurntableConfigOrBuilder getTurntableConfigOrBuilder();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.TurntablePush}
   *
   * <pre>
   *大转盘直播间push
   *msg_type: 802  大转盘消息
   * </pre>
   */
  public static final class TurntablePush extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.TurntablePush)
      TurntablePushOrBuilder {
    // Use TurntablePush.newBuilder() to construct.
    private TurntablePush(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TurntablePush(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TurntablePush defaultInstance;
    public static TurntablePush getDefaultInstance() {
      return defaultInstance;
    }

    public TurntablePush getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TurntablePush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.wali.live.proto.BigTurnTableProto.TurntableConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = turntableConfig_.toBuilder();
              }
              turntableConfig_ = input.readMessage(com.wali.live.proto.BigTurnTableProto.TurntableConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(turntableConfig_);
                turntableConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.BigTurnTableProto.TurntablePush.class, com.wali.live.proto.BigTurnTableProto.TurntablePush.Builder.class);
    }

    public static com.google.protobuf.Parser<TurntablePush> PARSER =
        new com.google.protobuf.AbstractParser<TurntablePush>() {
      public TurntablePush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TurntablePush(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TurntablePush> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TURNTABLECONFIG_FIELD_NUMBER = 1;
    private com.wali.live.proto.BigTurnTableProto.TurntableConfig turntableConfig_;
    /**
     * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
     *
     * <pre>
     *直播间大转盘内容
     * </pre>
     */
    public boolean hasTurntableConfig() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
     *
     * <pre>
     *直播间大转盘内容
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.TurntableConfig getTurntableConfig() {
      return turntableConfig_;
    }
    /**
     * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
     *
     * <pre>
     *直播间大转盘内容
     * </pre>
     */
    public com.wali.live.proto.BigTurnTableProto.TurntableConfigOrBuilder getTurntableConfigOrBuilder() {
      return turntableConfig_;
    }

    private void initFields() {
      turntableConfig_ = com.wali.live.proto.BigTurnTableProto.TurntableConfig.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, turntableConfig_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, turntableConfig_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.BigTurnTableProto.TurntablePush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.BigTurnTableProto.TurntablePush prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.TurntablePush}
     *
     * <pre>
     *大转盘直播间push
     *msg_type: 802  大转盘消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.TurntablePush)
        com.wali.live.proto.BigTurnTableProto.TurntablePushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.BigTurnTableProto.TurntablePush.class, com.wali.live.proto.BigTurnTableProto.TurntablePush.Builder.class);
      }

      // Construct using com.wali.live.proto.BigTurnTableProto.TurntablePush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTurntableConfigFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (turntableConfigBuilder_ == null) {
          turntableConfig_ = com.wali.live.proto.BigTurnTableProto.TurntableConfig.getDefaultInstance();
        } else {
          turntableConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.BigTurnTableProto.internal_static_com_wali_live_proto_TurntablePush_descriptor;
      }

      public com.wali.live.proto.BigTurnTableProto.TurntablePush getDefaultInstanceForType() {
        return com.wali.live.proto.BigTurnTableProto.TurntablePush.getDefaultInstance();
      }

      public com.wali.live.proto.BigTurnTableProto.TurntablePush build() {
        com.wali.live.proto.BigTurnTableProto.TurntablePush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.BigTurnTableProto.TurntablePush buildPartial() {
        com.wali.live.proto.BigTurnTableProto.TurntablePush result = new com.wali.live.proto.BigTurnTableProto.TurntablePush(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (turntableConfigBuilder_ == null) {
          result.turntableConfig_ = turntableConfig_;
        } else {
          result.turntableConfig_ = turntableConfigBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.BigTurnTableProto.TurntablePush) {
          return mergeFrom((com.wali.live.proto.BigTurnTableProto.TurntablePush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.BigTurnTableProto.TurntablePush other) {
        if (other == com.wali.live.proto.BigTurnTableProto.TurntablePush.getDefaultInstance()) return this;
        if (other.hasTurntableConfig()) {
          mergeTurntableConfig(other.getTurntableConfig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.BigTurnTableProto.TurntablePush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.BigTurnTableProto.TurntablePush) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.wali.live.proto.BigTurnTableProto.TurntableConfig turntableConfig_ = com.wali.live.proto.BigTurnTableProto.TurntableConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.BigTurnTableProto.TurntableConfig, com.wali.live.proto.BigTurnTableProto.TurntableConfig.Builder, com.wali.live.proto.BigTurnTableProto.TurntableConfigOrBuilder> turntableConfigBuilder_;
      /**
       * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
       *
       * <pre>
       *直播间大转盘内容
       * </pre>
       */
      public boolean hasTurntableConfig() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
       *
       * <pre>
       *直播间大转盘内容
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntableConfig getTurntableConfig() {
        if (turntableConfigBuilder_ == null) {
          return turntableConfig_;
        } else {
          return turntableConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
       *
       * <pre>
       *直播间大转盘内容
       * </pre>
       */
      public Builder setTurntableConfig(com.wali.live.proto.BigTurnTableProto.TurntableConfig value) {
        if (turntableConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          turntableConfig_ = value;
          onChanged();
        } else {
          turntableConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
       *
       * <pre>
       *直播间大转盘内容
       * </pre>
       */
      public Builder setTurntableConfig(
          com.wali.live.proto.BigTurnTableProto.TurntableConfig.Builder builderForValue) {
        if (turntableConfigBuilder_ == null) {
          turntableConfig_ = builderForValue.build();
          onChanged();
        } else {
          turntableConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
       *
       * <pre>
       *直播间大转盘内容
       * </pre>
       */
      public Builder mergeTurntableConfig(com.wali.live.proto.BigTurnTableProto.TurntableConfig value) {
        if (turntableConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              turntableConfig_ != com.wali.live.proto.BigTurnTableProto.TurntableConfig.getDefaultInstance()) {
            turntableConfig_ =
              com.wali.live.proto.BigTurnTableProto.TurntableConfig.newBuilder(turntableConfig_).mergeFrom(value).buildPartial();
          } else {
            turntableConfig_ = value;
          }
          onChanged();
        } else {
          turntableConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
       *
       * <pre>
       *直播间大转盘内容
       * </pre>
       */
      public Builder clearTurntableConfig() {
        if (turntableConfigBuilder_ == null) {
          turntableConfig_ = com.wali.live.proto.BigTurnTableProto.TurntableConfig.getDefaultInstance();
          onChanged();
        } else {
          turntableConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
       *
       * <pre>
       *直播间大转盘内容
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntableConfig.Builder getTurntableConfigBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTurntableConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
       *
       * <pre>
       *直播间大转盘内容
       * </pre>
       */
      public com.wali.live.proto.BigTurnTableProto.TurntableConfigOrBuilder getTurntableConfigOrBuilder() {
        if (turntableConfigBuilder_ != null) {
          return turntableConfigBuilder_.getMessageOrBuilder();
        } else {
          return turntableConfig_;
        }
      }
      /**
       * <code>optional .com.wali.live.proto.TurntableConfig turntableConfig = 1;</code>
       *
       * <pre>
       *直播间大转盘内容
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.BigTurnTableProto.TurntableConfig, com.wali.live.proto.BigTurnTableProto.TurntableConfig.Builder, com.wali.live.proto.BigTurnTableProto.TurntableConfigOrBuilder> 
          getTurntableConfigFieldBuilder() {
        if (turntableConfigBuilder_ == null) {
          turntableConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wali.live.proto.BigTurnTableProto.TurntableConfig, com.wali.live.proto.BigTurnTableProto.TurntableConfig.Builder, com.wali.live.proto.BigTurnTableProto.TurntableConfigOrBuilder>(
                  getTurntableConfig(),
                  getParentForChildren(),
                  isClean());
          turntableConfig_ = null;
        }
        return turntableConfigBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.TurntablePush)
    }

    static {
      defaultInstance = new TurntablePush(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.TurntablePush)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_StartTurntableReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_StartTurntableReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_StartTurntableRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_StartTurntableRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_StopTurntableReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_StopTurntableReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_StopTurntableRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_StopTurntableRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_DrawTurntableReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_DrawTurntableReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_DrawTurntableRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_DrawTurntableRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_RewardTurntableReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_RewardTurntableReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_RewardTurntableRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_RewardTurntableRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_VGiftCard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_VGiftCard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_TurntableConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_TurntableConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_PrizeItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_PrizeItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_TurntablePreConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_TurntablePreConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_TurntablePush_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_TurntablePush_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022BigTurnTable.proto\022\023com.wali.live.prot" +
      "o\"|\n\021StartTurntableReq\022\014\n\004zuid\030\001 \002(\004\022\016\n\006" +
      "liveId\030\002 \001(\t\0220\n\004type\030\003 \001(\0162\".com.wali.li" +
      "ve.proto.TurntableType\022\027\n\017customPrizeNam" +
      "e\030\004 \001(\t\"$\n\021StartTurntableRsp\022\017\n\007retCode\030" +
      "\001 \002(\r\"b\n\020StopTurntableReq\022\014\n\004zuid\030\001 \002(\004\022" +
      "\016\n\006liveId\030\002 \001(\t\0220\n\004type\030\003 \001(\0162\".com.wali" +
      ".live.proto.TurntableType\"#\n\020StopTurntab" +
      "leRsp\022\017\n\007retCode\030\001 \002(\r\"p\n\020DrawTurntableR" +
      "eq\022\014\n\004uuid\030\001 \002(\004\022\014\n\004zuid\030\002 \002(\004\022\016\n\006liveId",
      "\030\003 \001(\t\0220\n\004type\030\004 \001(\0162\".com.wali.live.pro" +
      "to.TurntableType\"I\n\020DrawTurntableRsp\022\017\n\007" +
      "retCode\030\001 \002(\r\022\022\n\nprizeIndex\030\002 \001(\r\022\020\n\010pri" +
      "zeKey\030\003 \001(\t\"R\n\022RewardTurntableReq\022\014\n\004uui" +
      "d\030\001 \002(\004\022\014\n\004zuid\030\002 \002(\004\022\016\n\006liveId\030\003 \001(\t\022\020\n" +
      "\010prizeKey\030\004 \001(\t\"\226\001\n\022RewardTurntableRsp\022\017" +
      "\n\007retCode\030\001 \002(\r\022\034\n\024user_asset_timestamp\030" +
      "\002 \001(\004\0221\n\tgift_card\030\003 \001(\0132\036.com.wali.live" +
      ".proto.VGiftCard\022\036\n\026receiver_total_ticke" +
      "ts\030\004 \001(\r\"E\n\tVGiftCard\022\017\n\007gift_id\030\001 \001(\r\022\025",
      "\n\rgift_card_cnt\030\002 \001(\r\022\020\n\010end_time\030\003 \001(\004\"" +
      "]\n\017TurntableConfig\022:\n\tpreConfig\030\001 \001(\0132\'." +
      "com.wali.live.proto.TurntablePreConfig\022\016" +
      "\n\006status\030\002 \001(\r\"\374\001\n\tPrizeItem\022/\n\010giftType" +
      "\030\001 \001(\0162\035.com.wali.live.proto.GiftType\022\013\n" +
      "\003num\030\002 \001(\r\022\016\n\006giftId\030\003 \001(\r\022+\n\006toWhom\030\004 \001" +
      "(\0162\033.com.wali.live.proto.ToWhom\022\r\n\005times" +
      "\030\005 \001(\t\022\020\n\010isCustom\030\006 \001(\010\022\027\n\017customPrizeN" +
      "ame\030\007 \001(\t\022\020\n\010giftName\030\010 \001(\t\022\021\n\tgiftValue" +
      "\030\t \001(\r\022\025\n\rneedGlobalMsg\030\n \001(\010\"\236\001\n\022Turnta",
      "blePreConfig\0220\n\004type\030\001 \001(\0162\".com.wali.li" +
      "ve.proto.TurntableType\022\021\n\tstartCost\030\002 \001(" +
      "\r\022\020\n\010drawCost\030\003 \001(\r\0221\n\tprizeItem\030\004 \003(\0132\036" +
      ".com.wali.live.proto.PrizeItem\"N\n\rTurnta" +
      "blePush\022=\n\017turntableConfig\030\001 \001(\0132$.com.w" +
      "ali.live.proto.TurntableConfig*+\n\rTurnta" +
      "bleType\022\014\n\010TYPE_128\020\000\022\014\n\010TYPE_500\020\001*\036\n\006T" +
      "oWhom\022\n\n\006ANCHOR\020\000\022\010\n\004SELF\020\001*1\n\010GiftType\022" +
      "\020\n\014VIRTUAL_GIFT\020\000\022\023\n\017VIRTUAL_DIAMOND\020\001B(" +
      "\n\023com.wali.live.protoB\021BigTurnTableProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_wali_live_proto_StartTurntableReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_wali_live_proto_StartTurntableReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_StartTurntableReq_descriptor,
        new java.lang.String[] { "Zuid", "LiveId", "Type", "CustomPrizeName", });
    internal_static_com_wali_live_proto_StartTurntableRsp_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_wali_live_proto_StartTurntableRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_StartTurntableRsp_descriptor,
        new java.lang.String[] { "RetCode", });
    internal_static_com_wali_live_proto_StopTurntableReq_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_wali_live_proto_StopTurntableReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_StopTurntableReq_descriptor,
        new java.lang.String[] { "Zuid", "LiveId", "Type", });
    internal_static_com_wali_live_proto_StopTurntableRsp_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_wali_live_proto_StopTurntableRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_StopTurntableRsp_descriptor,
        new java.lang.String[] { "RetCode", });
    internal_static_com_wali_live_proto_DrawTurntableReq_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_wali_live_proto_DrawTurntableReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_DrawTurntableReq_descriptor,
        new java.lang.String[] { "Uuid", "Zuid", "LiveId", "Type", });
    internal_static_com_wali_live_proto_DrawTurntableRsp_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_wali_live_proto_DrawTurntableRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_DrawTurntableRsp_descriptor,
        new java.lang.String[] { "RetCode", "PrizeIndex", "PrizeKey", });
    internal_static_com_wali_live_proto_RewardTurntableReq_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_wali_live_proto_RewardTurntableReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_RewardTurntableReq_descriptor,
        new java.lang.String[] { "Uuid", "Zuid", "LiveId", "PrizeKey", });
    internal_static_com_wali_live_proto_RewardTurntableRsp_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_wali_live_proto_RewardTurntableRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_RewardTurntableRsp_descriptor,
        new java.lang.String[] { "RetCode", "UserAssetTimestamp", "GiftCard", "ReceiverTotalTickets", });
    internal_static_com_wali_live_proto_VGiftCard_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_wali_live_proto_VGiftCard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_VGiftCard_descriptor,
        new java.lang.String[] { "GiftId", "GiftCardCnt", "EndTime", });
    internal_static_com_wali_live_proto_TurntableConfig_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_wali_live_proto_TurntableConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_TurntableConfig_descriptor,
        new java.lang.String[] { "PreConfig", "Status", });
    internal_static_com_wali_live_proto_PrizeItem_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_wali_live_proto_PrizeItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_PrizeItem_descriptor,
        new java.lang.String[] { "GiftType", "Num", "GiftId", "ToWhom", "Times", "IsCustom", "CustomPrizeName", "GiftName", "GiftValue", "NeedGlobalMsg", });
    internal_static_com_wali_live_proto_TurntablePreConfig_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_wali_live_proto_TurntablePreConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_TurntablePreConfig_descriptor,
        new java.lang.String[] { "Type", "StartCost", "DrawCost", "PrizeItem", });
    internal_static_com_wali_live_proto_TurntablePush_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_wali_live_proto_TurntablePush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_TurntablePush_descriptor,
        new java.lang.String[] { "TurntableConfig", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
