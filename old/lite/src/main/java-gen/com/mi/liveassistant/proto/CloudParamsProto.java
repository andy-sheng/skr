// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CloudParams.proto

package com.mi.liveassistant.proto;

public final class CloudParamsProto {
  private CloudParamsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GetCameraRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mi.liveassistant.proto.GetCameraRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     *机型
     * </pre>
     */
    boolean hasModel();
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     *机型
     * </pre>
     */
    java.lang.String getModel();
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     *机型
     * </pre>
     */
    com.google.protobuf.ByteString
        getModelBytes();

    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *版本
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *版本
     * </pre>
     */
    java.lang.String getVersion();
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *版本
     * </pre>
     */
    com.google.protobuf.ByteString
        getVersionBytes();
  }
  /**
   * Protobuf type {@code com.mi.liveassistant.proto.GetCameraRequest}
   *
   * <pre>
   * 根据机型获取美颜配置
   * ServiceCmd=zhibo.getconfig.camera
   * </pre>
   */
  public static final class GetCameraRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mi.liveassistant.proto.GetCameraRequest)
      GetCameraRequestOrBuilder {
    // Use GetCameraRequest.newBuilder() to construct.
    private GetCameraRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetCameraRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetCameraRequest defaultInstance;
    public static GetCameraRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetCameraRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetCameraRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              model_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              version_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest.class, com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetCameraRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetCameraRequest>() {
      public GetCameraRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetCameraRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetCameraRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MODEL_FIELD_NUMBER = 1;
    private java.lang.Object model_;
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     *机型
     * </pre>
     */
    public boolean hasModel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     *机型
     * </pre>
     */
    public java.lang.String getModel() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          model_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     *机型
     * </pre>
     */
    public com.google.protobuf.ByteString
        getModelBytes() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        model_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private java.lang.Object version_;
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *版本
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *版本
     * </pre>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     *版本
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      model_ = "";
      version_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasModel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getModelBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getVersionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getModelBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getVersionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mi.liveassistant.proto.GetCameraRequest}
     *
     * <pre>
     * 根据机型获取美颜配置
     * ServiceCmd=zhibo.getconfig.camera
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mi.liveassistant.proto.GetCameraRequest)
        com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest.class, com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        model_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraRequest_descriptor;
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest build() {
        com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest buildPartial() {
        com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest result = new com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.model_ = model_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.version_ = version_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest) {
          return mergeFrom((com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest other) {
        if (other == com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest.getDefaultInstance()) return this;
        if (other.hasModel()) {
          bitField0_ |= 0x00000001;
          model_ = other.model_;
          onChanged();
        }
        if (other.hasVersion()) {
          bitField0_ |= 0x00000002;
          version_ = other.version_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasModel()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.CloudParamsProto.GetCameraRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object model_ = "";
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       *机型
       * </pre>
       */
      public boolean hasModel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       *机型
       * </pre>
       */
      public java.lang.String getModel() {
        java.lang.Object ref = model_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            model_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       *机型
       * </pre>
       */
      public com.google.protobuf.ByteString
          getModelBytes() {
        java.lang.Object ref = model_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          model_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       *机型
       * </pre>
       */
      public Builder setModel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        model_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       *机型
       * </pre>
       */
      public Builder clearModel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        model_ = getDefaultInstance().getModel();
        onChanged();
        return this;
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       *机型
       * </pre>
       */
      public Builder setModelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        model_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *版本
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *版本
       * </pre>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            version_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *版本
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *版本
       * </pre>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *版本
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       *版本
       * </pre>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mi.liveassistant.proto.GetCameraRequest)
    }

    static {
      defaultInstance = new GetCameraRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mi.liveassistant.proto.GetCameraRequest)
  }

  public interface GetCameraResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mi.liveassistant.proto.GetCameraResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 err_code = 1;</code>
     *
     * <pre>
     *返回码
     * </pre>
     */
    boolean hasErrCode();
    /**
     * <code>required int32 err_code = 1;</code>
     *
     * <pre>
     *返回码
     * </pre>
     */
    int getErrCode();

    /**
     * <code>optional int32 camera_config = 2;</code>
     */
    boolean hasCameraConfig();
    /**
     * <code>optional int32 camera_config = 2;</code>
     */
    int getCameraConfig();

    /**
     * <code>optional bool open_filter = 3;</code>
     *
     * <pre>
     *是否开启滤镜
     * </pre>
     */
    boolean hasOpenFilter();
    /**
     * <code>optional bool open_filter = 3;</code>
     *
     * <pre>
     *是否开启滤镜
     * </pre>
     */
    boolean getOpenFilter();

    /**
     * <code>repeated int32 camera_levels = 4;</code>
     *
     * <pre>
     *美颜级别. 一个数字为单级，多个为多级
     * </pre>
     */
    java.util.List<java.lang.Integer> getCameraLevelsList();
    /**
     * <code>repeated int32 camera_levels = 4;</code>
     *
     * <pre>
     *美颜级别. 一个数字为单级，多个为多级
     * </pre>
     */
    int getCameraLevelsCount();
    /**
     * <code>repeated int32 camera_levels = 4;</code>
     *
     * <pre>
     *美颜级别. 一个数字为单级，多个为多级
     * </pre>
     */
    int getCameraLevels(int index);

    /**
     * <code>optional bool open_videorecord = 5;</code>
     *
     * <pre>
     *是否开启录屏, 观众端
     * </pre>
     */
    boolean hasOpenVideorecord();
    /**
     * <code>optional bool open_videorecord = 5;</code>
     *
     * <pre>
     *是否开启录屏, 观众端
     * </pre>
     */
    boolean getOpenVideorecord();

    /**
     * <code>optional bool open_videorecord_anchor = 6;</code>
     *
     * <pre>
     *是否开启录屏，主播
     * </pre>
     */
    boolean hasOpenVideorecordAnchor();
    /**
     * <code>optional bool open_videorecord_anchor = 6;</code>
     *
     * <pre>
     *是否开启录屏，主播
     * </pre>
     */
    boolean getOpenVideorecordAnchor();

    /**
     * <code>optional uint32 videorecord_time = 7;</code>
     *
     * <pre>
     *录屏时长
     * </pre>
     */
    boolean hasVideorecordTime();
    /**
     * <code>optional uint32 videorecord_time = 7;</code>
     *
     * <pre>
     *录屏时长
     * </pre>
     */
    int getVideorecordTime();

    /**
     * <code>optional uint32 videorecord_time_anchor = 8;</code>
     *
     * <pre>
     *主播端录屏时长
     * </pre>
     */
    boolean hasVideorecordTimeAnchor();
    /**
     * <code>optional uint32 videorecord_time_anchor = 8;</code>
     *
     * <pre>
     *主播端录屏时长
     * </pre>
     */
    int getVideorecordTimeAnchor();
  }
  /**
   * Protobuf type {@code com.mi.liveassistant.proto.GetCameraResponse}
   */
  public static final class GetCameraResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mi.liveassistant.proto.GetCameraResponse)
      GetCameraResponseOrBuilder {
    // Use GetCameraResponse.newBuilder() to construct.
    private GetCameraResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetCameraResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetCameraResponse defaultInstance;
    public static GetCameraResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetCameraResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetCameraResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              errCode_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cameraConfig_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              openFilter_ = input.readBool();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cameraLevels_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cameraLevels_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cameraLevels_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cameraLevels_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              openVideorecord_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              openVideorecordAnchor_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              videorecordTime_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              videorecordTimeAnchor_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cameraLevels_ = java.util.Collections.unmodifiableList(cameraLevels_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse.class, com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetCameraResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetCameraResponse>() {
      public GetCameraResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetCameraResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetCameraResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ERR_CODE_FIELD_NUMBER = 1;
    private int errCode_;
    /**
     * <code>required int32 err_code = 1;</code>
     *
     * <pre>
     *返回码
     * </pre>
     */
    public boolean hasErrCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 err_code = 1;</code>
     *
     * <pre>
     *返回码
     * </pre>
     */
    public int getErrCode() {
      return errCode_;
    }

    public static final int CAMERA_CONFIG_FIELD_NUMBER = 2;
    private int cameraConfig_;
    /**
     * <code>optional int32 camera_config = 2;</code>
     */
    public boolean hasCameraConfig() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 camera_config = 2;</code>
     */
    public int getCameraConfig() {
      return cameraConfig_;
    }

    public static final int OPEN_FILTER_FIELD_NUMBER = 3;
    private boolean openFilter_;
    /**
     * <code>optional bool open_filter = 3;</code>
     *
     * <pre>
     *是否开启滤镜
     * </pre>
     */
    public boolean hasOpenFilter() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool open_filter = 3;</code>
     *
     * <pre>
     *是否开启滤镜
     * </pre>
     */
    public boolean getOpenFilter() {
      return openFilter_;
    }

    public static final int CAMERA_LEVELS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cameraLevels_;
    /**
     * <code>repeated int32 camera_levels = 4;</code>
     *
     * <pre>
     *美颜级别. 一个数字为单级，多个为多级
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCameraLevelsList() {
      return cameraLevels_;
    }
    /**
     * <code>repeated int32 camera_levels = 4;</code>
     *
     * <pre>
     *美颜级别. 一个数字为单级，多个为多级
     * </pre>
     */
    public int getCameraLevelsCount() {
      return cameraLevels_.size();
    }
    /**
     * <code>repeated int32 camera_levels = 4;</code>
     *
     * <pre>
     *美颜级别. 一个数字为单级，多个为多级
     * </pre>
     */
    public int getCameraLevels(int index) {
      return cameraLevels_.get(index);
    }

    public static final int OPEN_VIDEORECORD_FIELD_NUMBER = 5;
    private boolean openVideorecord_;
    /**
     * <code>optional bool open_videorecord = 5;</code>
     *
     * <pre>
     *是否开启录屏, 观众端
     * </pre>
     */
    public boolean hasOpenVideorecord() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool open_videorecord = 5;</code>
     *
     * <pre>
     *是否开启录屏, 观众端
     * </pre>
     */
    public boolean getOpenVideorecord() {
      return openVideorecord_;
    }

    public static final int OPEN_VIDEORECORD_ANCHOR_FIELD_NUMBER = 6;
    private boolean openVideorecordAnchor_;
    /**
     * <code>optional bool open_videorecord_anchor = 6;</code>
     *
     * <pre>
     *是否开启录屏，主播
     * </pre>
     */
    public boolean hasOpenVideorecordAnchor() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool open_videorecord_anchor = 6;</code>
     *
     * <pre>
     *是否开启录屏，主播
     * </pre>
     */
    public boolean getOpenVideorecordAnchor() {
      return openVideorecordAnchor_;
    }

    public static final int VIDEORECORD_TIME_FIELD_NUMBER = 7;
    private int videorecordTime_;
    /**
     * <code>optional uint32 videorecord_time = 7;</code>
     *
     * <pre>
     *录屏时长
     * </pre>
     */
    public boolean hasVideorecordTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 videorecord_time = 7;</code>
     *
     * <pre>
     *录屏时长
     * </pre>
     */
    public int getVideorecordTime() {
      return videorecordTime_;
    }

    public static final int VIDEORECORD_TIME_ANCHOR_FIELD_NUMBER = 8;
    private int videorecordTimeAnchor_;
    /**
     * <code>optional uint32 videorecord_time_anchor = 8;</code>
     *
     * <pre>
     *主播端录屏时长
     * </pre>
     */
    public boolean hasVideorecordTimeAnchor() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 videorecord_time_anchor = 8;</code>
     *
     * <pre>
     *主播端录屏时长
     * </pre>
     */
    public int getVideorecordTimeAnchor() {
      return videorecordTimeAnchor_;
    }

    private void initFields() {
      errCode_ = 0;
      cameraConfig_ = 0;
      openFilter_ = false;
      cameraLevels_ = java.util.Collections.emptyList();
      openVideorecord_ = false;
      openVideorecordAnchor_ = false;
      videorecordTime_ = 0;
      videorecordTimeAnchor_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasErrCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, errCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cameraConfig_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, openFilter_);
      }
      for (int i = 0; i < cameraLevels_.size(); i++) {
        output.writeInt32(4, cameraLevels_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(5, openVideorecord_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, openVideorecordAnchor_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(7, videorecordTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(8, videorecordTimeAnchor_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, errCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cameraConfig_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, openFilter_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cameraLevels_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cameraLevels_.get(i));
        }
        size += dataSize;
        size += 1 * getCameraLevelsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, openVideorecord_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, openVideorecordAnchor_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, videorecordTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, videorecordTimeAnchor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mi.liveassistant.proto.GetCameraResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mi.liveassistant.proto.GetCameraResponse)
        com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse.class, com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cameraConfig_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        openFilter_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        cameraLevels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        openVideorecord_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        openVideorecordAnchor_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        videorecordTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        videorecordTimeAnchor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetCameraResponse_descriptor;
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse build() {
        com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse buildPartial() {
        com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse result = new com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errCode_ = errCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cameraConfig_ = cameraConfig_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.openFilter_ = openFilter_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cameraLevels_ = java.util.Collections.unmodifiableList(cameraLevels_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cameraLevels_ = cameraLevels_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.openVideorecord_ = openVideorecord_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.openVideorecordAnchor_ = openVideorecordAnchor_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.videorecordTime_ = videorecordTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.videorecordTimeAnchor_ = videorecordTimeAnchor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse) {
          return mergeFrom((com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse other) {
        if (other == com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse.getDefaultInstance()) return this;
        if (other.hasErrCode()) {
          setErrCode(other.getErrCode());
        }
        if (other.hasCameraConfig()) {
          setCameraConfig(other.getCameraConfig());
        }
        if (other.hasOpenFilter()) {
          setOpenFilter(other.getOpenFilter());
        }
        if (!other.cameraLevels_.isEmpty()) {
          if (cameraLevels_.isEmpty()) {
            cameraLevels_ = other.cameraLevels_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCameraLevelsIsMutable();
            cameraLevels_.addAll(other.cameraLevels_);
          }
          onChanged();
        }
        if (other.hasOpenVideorecord()) {
          setOpenVideorecord(other.getOpenVideorecord());
        }
        if (other.hasOpenVideorecordAnchor()) {
          setOpenVideorecordAnchor(other.getOpenVideorecordAnchor());
        }
        if (other.hasVideorecordTime()) {
          setVideorecordTime(other.getVideorecordTime());
        }
        if (other.hasVideorecordTimeAnchor()) {
          setVideorecordTimeAnchor(other.getVideorecordTimeAnchor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasErrCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.CloudParamsProto.GetCameraResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int errCode_ ;
      /**
       * <code>required int32 err_code = 1;</code>
       *
       * <pre>
       *返回码
       * </pre>
       */
      public boolean hasErrCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 err_code = 1;</code>
       *
       * <pre>
       *返回码
       * </pre>
       */
      public int getErrCode() {
        return errCode_;
      }
      /**
       * <code>required int32 err_code = 1;</code>
       *
       * <pre>
       *返回码
       * </pre>
       */
      public Builder setErrCode(int value) {
        bitField0_ |= 0x00000001;
        errCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 err_code = 1;</code>
       *
       * <pre>
       *返回码
       * </pre>
       */
      public Builder clearErrCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errCode_ = 0;
        onChanged();
        return this;
      }

      private int cameraConfig_ ;
      /**
       * <code>optional int32 camera_config = 2;</code>
       */
      public boolean hasCameraConfig() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 camera_config = 2;</code>
       */
      public int getCameraConfig() {
        return cameraConfig_;
      }
      /**
       * <code>optional int32 camera_config = 2;</code>
       */
      public Builder setCameraConfig(int value) {
        bitField0_ |= 0x00000002;
        cameraConfig_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 camera_config = 2;</code>
       */
      public Builder clearCameraConfig() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cameraConfig_ = 0;
        onChanged();
        return this;
      }

      private boolean openFilter_ ;
      /**
       * <code>optional bool open_filter = 3;</code>
       *
       * <pre>
       *是否开启滤镜
       * </pre>
       */
      public boolean hasOpenFilter() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool open_filter = 3;</code>
       *
       * <pre>
       *是否开启滤镜
       * </pre>
       */
      public boolean getOpenFilter() {
        return openFilter_;
      }
      /**
       * <code>optional bool open_filter = 3;</code>
       *
       * <pre>
       *是否开启滤镜
       * </pre>
       */
      public Builder setOpenFilter(boolean value) {
        bitField0_ |= 0x00000004;
        openFilter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open_filter = 3;</code>
       *
       * <pre>
       *是否开启滤镜
       * </pre>
       */
      public Builder clearOpenFilter() {
        bitField0_ = (bitField0_ & ~0x00000004);
        openFilter_ = false;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> cameraLevels_ = java.util.Collections.emptyList();
      private void ensureCameraLevelsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cameraLevels_ = new java.util.ArrayList<java.lang.Integer>(cameraLevels_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 camera_levels = 4;</code>
       *
       * <pre>
       *美颜级别. 一个数字为单级，多个为多级
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCameraLevelsList() {
        return java.util.Collections.unmodifiableList(cameraLevels_);
      }
      /**
       * <code>repeated int32 camera_levels = 4;</code>
       *
       * <pre>
       *美颜级别. 一个数字为单级，多个为多级
       * </pre>
       */
      public int getCameraLevelsCount() {
        return cameraLevels_.size();
      }
      /**
       * <code>repeated int32 camera_levels = 4;</code>
       *
       * <pre>
       *美颜级别. 一个数字为单级，多个为多级
       * </pre>
       */
      public int getCameraLevels(int index) {
        return cameraLevels_.get(index);
      }
      /**
       * <code>repeated int32 camera_levels = 4;</code>
       *
       * <pre>
       *美颜级别. 一个数字为单级，多个为多级
       * </pre>
       */
      public Builder setCameraLevels(
          int index, int value) {
        ensureCameraLevelsIsMutable();
        cameraLevels_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 camera_levels = 4;</code>
       *
       * <pre>
       *美颜级别. 一个数字为单级，多个为多级
       * </pre>
       */
      public Builder addCameraLevels(int value) {
        ensureCameraLevelsIsMutable();
        cameraLevels_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 camera_levels = 4;</code>
       *
       * <pre>
       *美颜级别. 一个数字为单级，多个为多级
       * </pre>
       */
      public Builder addAllCameraLevels(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCameraLevelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cameraLevels_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 camera_levels = 4;</code>
       *
       * <pre>
       *美颜级别. 一个数字为单级，多个为多级
       * </pre>
       */
      public Builder clearCameraLevels() {
        cameraLevels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private boolean openVideorecord_ ;
      /**
       * <code>optional bool open_videorecord = 5;</code>
       *
       * <pre>
       *是否开启录屏, 观众端
       * </pre>
       */
      public boolean hasOpenVideorecord() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool open_videorecord = 5;</code>
       *
       * <pre>
       *是否开启录屏, 观众端
       * </pre>
       */
      public boolean getOpenVideorecord() {
        return openVideorecord_;
      }
      /**
       * <code>optional bool open_videorecord = 5;</code>
       *
       * <pre>
       *是否开启录屏, 观众端
       * </pre>
       */
      public Builder setOpenVideorecord(boolean value) {
        bitField0_ |= 0x00000010;
        openVideorecord_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open_videorecord = 5;</code>
       *
       * <pre>
       *是否开启录屏, 观众端
       * </pre>
       */
      public Builder clearOpenVideorecord() {
        bitField0_ = (bitField0_ & ~0x00000010);
        openVideorecord_ = false;
        onChanged();
        return this;
      }

      private boolean openVideorecordAnchor_ ;
      /**
       * <code>optional bool open_videorecord_anchor = 6;</code>
       *
       * <pre>
       *是否开启录屏，主播
       * </pre>
       */
      public boolean hasOpenVideorecordAnchor() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool open_videorecord_anchor = 6;</code>
       *
       * <pre>
       *是否开启录屏，主播
       * </pre>
       */
      public boolean getOpenVideorecordAnchor() {
        return openVideorecordAnchor_;
      }
      /**
       * <code>optional bool open_videorecord_anchor = 6;</code>
       *
       * <pre>
       *是否开启录屏，主播
       * </pre>
       */
      public Builder setOpenVideorecordAnchor(boolean value) {
        bitField0_ |= 0x00000020;
        openVideorecordAnchor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open_videorecord_anchor = 6;</code>
       *
       * <pre>
       *是否开启录屏，主播
       * </pre>
       */
      public Builder clearOpenVideorecordAnchor() {
        bitField0_ = (bitField0_ & ~0x00000020);
        openVideorecordAnchor_ = false;
        onChanged();
        return this;
      }

      private int videorecordTime_ ;
      /**
       * <code>optional uint32 videorecord_time = 7;</code>
       *
       * <pre>
       *录屏时长
       * </pre>
       */
      public boolean hasVideorecordTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 videorecord_time = 7;</code>
       *
       * <pre>
       *录屏时长
       * </pre>
       */
      public int getVideorecordTime() {
        return videorecordTime_;
      }
      /**
       * <code>optional uint32 videorecord_time = 7;</code>
       *
       * <pre>
       *录屏时长
       * </pre>
       */
      public Builder setVideorecordTime(int value) {
        bitField0_ |= 0x00000040;
        videorecordTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 videorecord_time = 7;</code>
       *
       * <pre>
       *录屏时长
       * </pre>
       */
      public Builder clearVideorecordTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        videorecordTime_ = 0;
        onChanged();
        return this;
      }

      private int videorecordTimeAnchor_ ;
      /**
       * <code>optional uint32 videorecord_time_anchor = 8;</code>
       *
       * <pre>
       *主播端录屏时长
       * </pre>
       */
      public boolean hasVideorecordTimeAnchor() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 videorecord_time_anchor = 8;</code>
       *
       * <pre>
       *主播端录屏时长
       * </pre>
       */
      public int getVideorecordTimeAnchor() {
        return videorecordTimeAnchor_;
      }
      /**
       * <code>optional uint32 videorecord_time_anchor = 8;</code>
       *
       * <pre>
       *主播端录屏时长
       * </pre>
       */
      public Builder setVideorecordTimeAnchor(int value) {
        bitField0_ |= 0x00000080;
        videorecordTimeAnchor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 videorecord_time_anchor = 8;</code>
       *
       * <pre>
       *主播端录屏时长
       * </pre>
       */
      public Builder clearVideorecordTimeAnchor() {
        bitField0_ = (bitField0_ & ~0x00000080);
        videorecordTimeAnchor_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mi.liveassistant.proto.GetCameraResponse)
    }

    static {
      defaultInstance = new GetCameraResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mi.liveassistant.proto.GetCameraResponse)
  }

  public interface GetVolumeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mi.liveassistant.proto.GetVolumeRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     * 机型
     * </pre>
     */
    boolean hasModel();
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     * 机型
     * </pre>
     */
    java.lang.String getModel();
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     * 机型
     * </pre>
     */
    com.google.protobuf.ByteString
        getModelBytes();

    /**
     * <code>required string os = 2;</code>
     *
     * <pre>
     * 操作系统
     * </pre>
     */
    boolean hasOs();
    /**
     * <code>required string os = 2;</code>
     *
     * <pre>
     * 操作系统
     * </pre>
     */
    java.lang.String getOs();
    /**
     * <code>required string os = 2;</code>
     *
     * <pre>
     * 操作系统
     * </pre>
     */
    com.google.protobuf.ByteString
        getOsBytes();

    /**
     * <code>optional string engine = 3;</code>
     *
     * <pre>
     * 引擎版本，仅ios使用
     * </pre>
     */
    boolean hasEngine();
    /**
     * <code>optional string engine = 3;</code>
     *
     * <pre>
     * 引擎版本，仅ios使用
     * </pre>
     */
    java.lang.String getEngine();
    /**
     * <code>optional string engine = 3;</code>
     *
     * <pre>
     * 引擎版本，仅ios使用
     * </pre>
     */
    com.google.protobuf.ByteString
        getEngineBytes();

    /**
     * <code>optional string app_version = 4;</code>
     *
     * <pre>
     *app版本
     * </pre>
     */
    boolean hasAppVersion();
    /**
     * <code>optional string app_version = 4;</code>
     *
     * <pre>
     *app版本
     * </pre>
     */
    java.lang.String getAppVersion();
    /**
     * <code>optional string app_version = 4;</code>
     *
     * <pre>
     *app版本
     * </pre>
     */
    com.google.protobuf.ByteString
        getAppVersionBytes();
  }
  /**
   * Protobuf type {@code com.mi.liveassistant.proto.GetVolumeRequest}
   *
   * <pre>
   * 根据机型获取音量配置
   * </pre>
   */
  public static final class GetVolumeRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mi.liveassistant.proto.GetVolumeRequest)
      GetVolumeRequestOrBuilder {
    // Use GetVolumeRequest.newBuilder() to construct.
    private GetVolumeRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetVolumeRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetVolumeRequest defaultInstance;
    public static GetVolumeRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GetVolumeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetVolumeRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              model_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              os_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              engine_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              appVersion_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest.class, com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GetVolumeRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetVolumeRequest>() {
      public GetVolumeRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetVolumeRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetVolumeRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MODEL_FIELD_NUMBER = 1;
    private java.lang.Object model_;
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     * 机型
     * </pre>
     */
    public boolean hasModel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     * 机型
     * </pre>
     */
    public java.lang.String getModel() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          model_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string model = 1;</code>
     *
     * <pre>
     * 机型
     * </pre>
     */
    public com.google.protobuf.ByteString
        getModelBytes() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        model_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OS_FIELD_NUMBER = 2;
    private java.lang.Object os_;
    /**
     * <code>required string os = 2;</code>
     *
     * <pre>
     * 操作系统
     * </pre>
     */
    public boolean hasOs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string os = 2;</code>
     *
     * <pre>
     * 操作系统
     * </pre>
     */
    public java.lang.String getOs() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          os_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string os = 2;</code>
     *
     * <pre>
     * 操作系统
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOsBytes() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        os_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENGINE_FIELD_NUMBER = 3;
    private java.lang.Object engine_;
    /**
     * <code>optional string engine = 3;</code>
     *
     * <pre>
     * 引擎版本，仅ios使用
     * </pre>
     */
    public boolean hasEngine() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string engine = 3;</code>
     *
     * <pre>
     * 引擎版本，仅ios使用
     * </pre>
     */
    public java.lang.String getEngine() {
      java.lang.Object ref = engine_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          engine_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string engine = 3;</code>
     *
     * <pre>
     * 引擎版本，仅ios使用
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEngineBytes() {
      java.lang.Object ref = engine_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        engine_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APP_VERSION_FIELD_NUMBER = 4;
    private java.lang.Object appVersion_;
    /**
     * <code>optional string app_version = 4;</code>
     *
     * <pre>
     *app版本
     * </pre>
     */
    public boolean hasAppVersion() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string app_version = 4;</code>
     *
     * <pre>
     *app版本
     * </pre>
     */
    public java.lang.String getAppVersion() {
      java.lang.Object ref = appVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string app_version = 4;</code>
     *
     * <pre>
     *app版本
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAppVersionBytes() {
      java.lang.Object ref = appVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      model_ = "";
      os_ = "";
      engine_ = "";
      appVersion_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasModel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getModelBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getOsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getEngineBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getAppVersionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getModelBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getOsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEngineBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getAppVersionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mi.liveassistant.proto.GetVolumeRequest}
     *
     * <pre>
     * 根据机型获取音量配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mi.liveassistant.proto.GetVolumeRequest)
        com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest.class, com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        model_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        os_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        engine_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        appVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeRequest_descriptor;
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest build() {
        com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest buildPartial() {
        com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest result = new com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.model_ = model_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.os_ = os_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.engine_ = engine_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.appVersion_ = appVersion_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest) {
          return mergeFrom((com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest other) {
        if (other == com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest.getDefaultInstance()) return this;
        if (other.hasModel()) {
          bitField0_ |= 0x00000001;
          model_ = other.model_;
          onChanged();
        }
        if (other.hasOs()) {
          bitField0_ |= 0x00000002;
          os_ = other.os_;
          onChanged();
        }
        if (other.hasEngine()) {
          bitField0_ |= 0x00000004;
          engine_ = other.engine_;
          onChanged();
        }
        if (other.hasAppVersion()) {
          bitField0_ |= 0x00000008;
          appVersion_ = other.appVersion_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasModel()) {
          
          return false;
        }
        if (!hasOs()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.CloudParamsProto.GetVolumeRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object model_ = "";
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       * 机型
       * </pre>
       */
      public boolean hasModel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       * 机型
       * </pre>
       */
      public java.lang.String getModel() {
        java.lang.Object ref = model_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            model_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       * 机型
       * </pre>
       */
      public com.google.protobuf.ByteString
          getModelBytes() {
        java.lang.Object ref = model_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          model_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       * 机型
       * </pre>
       */
      public Builder setModel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        model_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       * 机型
       * </pre>
       */
      public Builder clearModel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        model_ = getDefaultInstance().getModel();
        onChanged();
        return this;
      }
      /**
       * <code>required string model = 1;</code>
       *
       * <pre>
       * 机型
       * </pre>
       */
      public Builder setModelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        model_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object os_ = "";
      /**
       * <code>required string os = 2;</code>
       *
       * <pre>
       * 操作系统
       * </pre>
       */
      public boolean hasOs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string os = 2;</code>
       *
       * <pre>
       * 操作系统
       * </pre>
       */
      public java.lang.String getOs() {
        java.lang.Object ref = os_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            os_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string os = 2;</code>
       *
       * <pre>
       * 操作系统
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOsBytes() {
        java.lang.Object ref = os_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          os_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string os = 2;</code>
       *
       * <pre>
       * 操作系统
       * </pre>
       */
      public Builder setOs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        os_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string os = 2;</code>
       *
       * <pre>
       * 操作系统
       * </pre>
       */
      public Builder clearOs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        os_ = getDefaultInstance().getOs();
        onChanged();
        return this;
      }
      /**
       * <code>required string os = 2;</code>
       *
       * <pre>
       * 操作系统
       * </pre>
       */
      public Builder setOsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        os_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object engine_ = "";
      /**
       * <code>optional string engine = 3;</code>
       *
       * <pre>
       * 引擎版本，仅ios使用
       * </pre>
       */
      public boolean hasEngine() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string engine = 3;</code>
       *
       * <pre>
       * 引擎版本，仅ios使用
       * </pre>
       */
      public java.lang.String getEngine() {
        java.lang.Object ref = engine_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            engine_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string engine = 3;</code>
       *
       * <pre>
       * 引擎版本，仅ios使用
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEngineBytes() {
        java.lang.Object ref = engine_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          engine_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string engine = 3;</code>
       *
       * <pre>
       * 引擎版本，仅ios使用
       * </pre>
       */
      public Builder setEngine(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        engine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string engine = 3;</code>
       *
       * <pre>
       * 引擎版本，仅ios使用
       * </pre>
       */
      public Builder clearEngine() {
        bitField0_ = (bitField0_ & ~0x00000004);
        engine_ = getDefaultInstance().getEngine();
        onChanged();
        return this;
      }
      /**
       * <code>optional string engine = 3;</code>
       *
       * <pre>
       * 引擎版本，仅ios使用
       * </pre>
       */
      public Builder setEngineBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        engine_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object appVersion_ = "";
      /**
       * <code>optional string app_version = 4;</code>
       *
       * <pre>
       *app版本
       * </pre>
       */
      public boolean hasAppVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string app_version = 4;</code>
       *
       * <pre>
       *app版本
       * </pre>
       */
      public java.lang.String getAppVersion() {
        java.lang.Object ref = appVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            appVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string app_version = 4;</code>
       *
       * <pre>
       *app版本
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAppVersionBytes() {
        java.lang.Object ref = appVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string app_version = 4;</code>
       *
       * <pre>
       *app版本
       * </pre>
       */
      public Builder setAppVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        appVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string app_version = 4;</code>
       *
       * <pre>
       *app版本
       * </pre>
       */
      public Builder clearAppVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        appVersion_ = getDefaultInstance().getAppVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string app_version = 4;</code>
       *
       * <pre>
       *app版本
       * </pre>
       */
      public Builder setAppVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        appVersion_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mi.liveassistant.proto.GetVolumeRequest)
    }

    static {
      defaultInstance = new GetVolumeRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mi.liveassistant.proto.GetVolumeRequest)
  }

  public interface GetVolumeResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mi.liveassistant.proto.GetVolumeResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 err_code = 1;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    boolean hasErrCode();
    /**
     * <code>required int32 err_code = 1;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    int getErrCode();

    /**
     * <code>optional float music_volume_in_speaker_mode = 2;</code>
     *
     * <pre>
     * 外放模式下音乐播放的默认音量[0,1], 安卓,ios共有
     * </pre>
     */
    boolean hasMusicVolumeInSpeakerMode();
    /**
     * <code>optional float music_volume_in_speaker_mode = 2;</code>
     *
     * <pre>
     * 外放模式下音乐播放的默认音量[0,1], 安卓,ios共有
     * </pre>
     */
    float getMusicVolumeInSpeakerMode();

    /**
     * <code>optional float voice_volume_in_speaker_mode = 3;</code>
     *
     * <pre>
     * 外放模式下录音(包括人声及外放的音乐)的默认音量 [0, 2], 安卓,ios共有
     * </pre>
     */
    boolean hasVoiceVolumeInSpeakerMode();
    /**
     * <code>optional float voice_volume_in_speaker_mode = 3;</code>
     *
     * <pre>
     * 外放模式下录音(包括人声及外放的音乐)的默认音量 [0, 2], 安卓,ios共有
     * </pre>
     */
    float getVoiceVolumeInSpeakerMode();

    /**
     * <code>optional float music_volume_in_headset_mode = 4;</code>
     *
     * <pre>
     * 耳机模式下主播端和观众端听到的音乐播放的默认音量 [0, 1]，仅安卓有， ios为0
     * </pre>
     */
    boolean hasMusicVolumeInHeadsetMode();
    /**
     * <code>optional float music_volume_in_headset_mode = 4;</code>
     *
     * <pre>
     * 耳机模式下主播端和观众端听到的音乐播放的默认音量 [0, 1]，仅安卓有， ios为0
     * </pre>
     */
    float getMusicVolumeInHeadsetMode();

    /**
     * <code>optional float voice_volume_in_headset_mode = 5;</code>
     *
     * <pre>
     * 耳机模式下录音(只包括人声)的默认音量 [0, 2]， 仅安卓有， iOS为0
     * </pre>
     */
    boolean hasVoiceVolumeInHeadsetMode();
    /**
     * <code>optional float voice_volume_in_headset_mode = 5;</code>
     *
     * <pre>
     * 耳机模式下录音(只包括人声)的默认音量 [0, 2]， 仅安卓有， iOS为0
     * </pre>
     */
    float getVoiceVolumeInHeadsetMode();

    /**
     * <code>optional int32 intrinsic_music_voice_delay = 6;</code>
     *
     * <pre>
     * 音乐播放和人声录音的固有时间偏差 [-500, +500](单位毫秒)
     * </pre>
     */
    boolean hasIntrinsicMusicVoiceDelay();
    /**
     * <code>optional int32 intrinsic_music_voice_delay = 6;</code>
     *
     * <pre>
     * 音乐播放和人声录音的固有时间偏差 [-500, +500](单位毫秒)
     * </pre>
     */
    int getIntrinsicMusicVoiceDelay();

    /**
     * <code>optional int32 audience_music_volume_in_headset_mode = 7;</code>
     *
     * <pre>
     * 耳机模式观众端听到的音乐大小, 仅iOS有，安卓为0
     * </pre>
     */
    boolean hasAudienceMusicVolumeInHeadsetMode();
    /**
     * <code>optional int32 audience_music_volume_in_headset_mode = 7;</code>
     *
     * <pre>
     * 耳机模式观众端听到的音乐大小, 仅iOS有，安卓为0
     * </pre>
     */
    int getAudienceMusicVolumeInHeadsetMode();

    /**
     * <code>optional int32 host_music_volume_in_headset_mode = 8;</code>
     *
     * <pre>
     * 耳机模式主播端听到的音乐大小，仅iOS有，安卓为0
     * </pre>
     */
    boolean hasHostMusicVolumeInHeadsetMode();
    /**
     * <code>optional int32 host_music_volume_in_headset_mode = 8;</code>
     *
     * <pre>
     * 耳机模式主播端听到的音乐大小，仅iOS有，安卓为0
     * </pre>
     */
    int getHostMusicVolumeInHeadsetMode();

    /**
     * <code>optional int32 all_voice_volume_in_headset_mode = 9;</code>
     *
     * <pre>
     * 主播端和观众端听到的人声大小,仅iOS有，安卓为0
     * </pre>
     */
    boolean hasAllVoiceVolumeInHeadsetMode();
    /**
     * <code>optional int32 all_voice_volume_in_headset_mode = 9;</code>
     *
     * <pre>
     * 主播端和观众端听到的人声大小,仅iOS有，安卓为0
     * </pre>
     */
    int getAllVoiceVolumeInHeadsetMode();

    /**
     * <code>optional int32 only_voice_volume_in_speaker_mode = 10;</code>
     *
     * <pre>
     * 外放模式下录音音量(仅包括人声，无音乐)的默认音量, 安卓,ios共有
     * </pre>
     */
    boolean hasOnlyVoiceVolumeInSpeakerMode();
    /**
     * <code>optional int32 only_voice_volume_in_speaker_mode = 10;</code>
     *
     * <pre>
     * 外放模式下录音音量(仅包括人声，无音乐)的默认音量, 安卓,ios共有
     * </pre>
     */
    int getOnlyVoiceVolumeInSpeakerMode();
  }
  /**
   * Protobuf type {@code com.mi.liveassistant.proto.GetVolumeResponse}
   */
  public static final class GetVolumeResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mi.liveassistant.proto.GetVolumeResponse)
      GetVolumeResponseOrBuilder {
    // Use GetVolumeResponse.newBuilder() to construct.
    private GetVolumeResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetVolumeResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetVolumeResponse defaultInstance;
    public static GetVolumeResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GetVolumeResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetVolumeResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              errCode_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              musicVolumeInSpeakerMode_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              voiceVolumeInSpeakerMode_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              musicVolumeInHeadsetMode_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              voiceVolumeInHeadsetMode_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              intrinsicMusicVoiceDelay_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              audienceMusicVolumeInHeadsetMode_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              hostMusicVolumeInHeadsetMode_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              allVoiceVolumeInHeadsetMode_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              onlyVoiceVolumeInSpeakerMode_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse.class, com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GetVolumeResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetVolumeResponse>() {
      public GetVolumeResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetVolumeResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetVolumeResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ERR_CODE_FIELD_NUMBER = 1;
    private int errCode_;
    /**
     * <code>required int32 err_code = 1;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    public boolean hasErrCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 err_code = 1;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    public int getErrCode() {
      return errCode_;
    }

    public static final int MUSIC_VOLUME_IN_SPEAKER_MODE_FIELD_NUMBER = 2;
    private float musicVolumeInSpeakerMode_;
    /**
     * <code>optional float music_volume_in_speaker_mode = 2;</code>
     *
     * <pre>
     * 外放模式下音乐播放的默认音量[0,1], 安卓,ios共有
     * </pre>
     */
    public boolean hasMusicVolumeInSpeakerMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float music_volume_in_speaker_mode = 2;</code>
     *
     * <pre>
     * 外放模式下音乐播放的默认音量[0,1], 安卓,ios共有
     * </pre>
     */
    public float getMusicVolumeInSpeakerMode() {
      return musicVolumeInSpeakerMode_;
    }

    public static final int VOICE_VOLUME_IN_SPEAKER_MODE_FIELD_NUMBER = 3;
    private float voiceVolumeInSpeakerMode_;
    /**
     * <code>optional float voice_volume_in_speaker_mode = 3;</code>
     *
     * <pre>
     * 外放模式下录音(包括人声及外放的音乐)的默认音量 [0, 2], 安卓,ios共有
     * </pre>
     */
    public boolean hasVoiceVolumeInSpeakerMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float voice_volume_in_speaker_mode = 3;</code>
     *
     * <pre>
     * 外放模式下录音(包括人声及外放的音乐)的默认音量 [0, 2], 安卓,ios共有
     * </pre>
     */
    public float getVoiceVolumeInSpeakerMode() {
      return voiceVolumeInSpeakerMode_;
    }

    public static final int MUSIC_VOLUME_IN_HEADSET_MODE_FIELD_NUMBER = 4;
    private float musicVolumeInHeadsetMode_;
    /**
     * <code>optional float music_volume_in_headset_mode = 4;</code>
     *
     * <pre>
     * 耳机模式下主播端和观众端听到的音乐播放的默认音量 [0, 1]，仅安卓有， ios为0
     * </pre>
     */
    public boolean hasMusicVolumeInHeadsetMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float music_volume_in_headset_mode = 4;</code>
     *
     * <pre>
     * 耳机模式下主播端和观众端听到的音乐播放的默认音量 [0, 1]，仅安卓有， ios为0
     * </pre>
     */
    public float getMusicVolumeInHeadsetMode() {
      return musicVolumeInHeadsetMode_;
    }

    public static final int VOICE_VOLUME_IN_HEADSET_MODE_FIELD_NUMBER = 5;
    private float voiceVolumeInHeadsetMode_;
    /**
     * <code>optional float voice_volume_in_headset_mode = 5;</code>
     *
     * <pre>
     * 耳机模式下录音(只包括人声)的默认音量 [0, 2]， 仅安卓有， iOS为0
     * </pre>
     */
    public boolean hasVoiceVolumeInHeadsetMode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float voice_volume_in_headset_mode = 5;</code>
     *
     * <pre>
     * 耳机模式下录音(只包括人声)的默认音量 [0, 2]， 仅安卓有， iOS为0
     * </pre>
     */
    public float getVoiceVolumeInHeadsetMode() {
      return voiceVolumeInHeadsetMode_;
    }

    public static final int INTRINSIC_MUSIC_VOICE_DELAY_FIELD_NUMBER = 6;
    private int intrinsicMusicVoiceDelay_;
    /**
     * <code>optional int32 intrinsic_music_voice_delay = 6;</code>
     *
     * <pre>
     * 音乐播放和人声录音的固有时间偏差 [-500, +500](单位毫秒)
     * </pre>
     */
    public boolean hasIntrinsicMusicVoiceDelay() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 intrinsic_music_voice_delay = 6;</code>
     *
     * <pre>
     * 音乐播放和人声录音的固有时间偏差 [-500, +500](单位毫秒)
     * </pre>
     */
    public int getIntrinsicMusicVoiceDelay() {
      return intrinsicMusicVoiceDelay_;
    }

    public static final int AUDIENCE_MUSIC_VOLUME_IN_HEADSET_MODE_FIELD_NUMBER = 7;
    private int audienceMusicVolumeInHeadsetMode_;
    /**
     * <code>optional int32 audience_music_volume_in_headset_mode = 7;</code>
     *
     * <pre>
     * 耳机模式观众端听到的音乐大小, 仅iOS有，安卓为0
     * </pre>
     */
    public boolean hasAudienceMusicVolumeInHeadsetMode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 audience_music_volume_in_headset_mode = 7;</code>
     *
     * <pre>
     * 耳机模式观众端听到的音乐大小, 仅iOS有，安卓为0
     * </pre>
     */
    public int getAudienceMusicVolumeInHeadsetMode() {
      return audienceMusicVolumeInHeadsetMode_;
    }

    public static final int HOST_MUSIC_VOLUME_IN_HEADSET_MODE_FIELD_NUMBER = 8;
    private int hostMusicVolumeInHeadsetMode_;
    /**
     * <code>optional int32 host_music_volume_in_headset_mode = 8;</code>
     *
     * <pre>
     * 耳机模式主播端听到的音乐大小，仅iOS有，安卓为0
     * </pre>
     */
    public boolean hasHostMusicVolumeInHeadsetMode() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 host_music_volume_in_headset_mode = 8;</code>
     *
     * <pre>
     * 耳机模式主播端听到的音乐大小，仅iOS有，安卓为0
     * </pre>
     */
    public int getHostMusicVolumeInHeadsetMode() {
      return hostMusicVolumeInHeadsetMode_;
    }

    public static final int ALL_VOICE_VOLUME_IN_HEADSET_MODE_FIELD_NUMBER = 9;
    private int allVoiceVolumeInHeadsetMode_;
    /**
     * <code>optional int32 all_voice_volume_in_headset_mode = 9;</code>
     *
     * <pre>
     * 主播端和观众端听到的人声大小,仅iOS有，安卓为0
     * </pre>
     */
    public boolean hasAllVoiceVolumeInHeadsetMode() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 all_voice_volume_in_headset_mode = 9;</code>
     *
     * <pre>
     * 主播端和观众端听到的人声大小,仅iOS有，安卓为0
     * </pre>
     */
    public int getAllVoiceVolumeInHeadsetMode() {
      return allVoiceVolumeInHeadsetMode_;
    }

    public static final int ONLY_VOICE_VOLUME_IN_SPEAKER_MODE_FIELD_NUMBER = 10;
    private int onlyVoiceVolumeInSpeakerMode_;
    /**
     * <code>optional int32 only_voice_volume_in_speaker_mode = 10;</code>
     *
     * <pre>
     * 外放模式下录音音量(仅包括人声，无音乐)的默认音量, 安卓,ios共有
     * </pre>
     */
    public boolean hasOnlyVoiceVolumeInSpeakerMode() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 only_voice_volume_in_speaker_mode = 10;</code>
     *
     * <pre>
     * 外放模式下录音音量(仅包括人声，无音乐)的默认音量, 安卓,ios共有
     * </pre>
     */
    public int getOnlyVoiceVolumeInSpeakerMode() {
      return onlyVoiceVolumeInSpeakerMode_;
    }

    private void initFields() {
      errCode_ = 0;
      musicVolumeInSpeakerMode_ = 0F;
      voiceVolumeInSpeakerMode_ = 0F;
      musicVolumeInHeadsetMode_ = 0F;
      voiceVolumeInHeadsetMode_ = 0F;
      intrinsicMusicVoiceDelay_ = 0;
      audienceMusicVolumeInHeadsetMode_ = 0;
      hostMusicVolumeInHeadsetMode_ = 0;
      allVoiceVolumeInHeadsetMode_ = 0;
      onlyVoiceVolumeInSpeakerMode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasErrCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, errCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, musicVolumeInSpeakerMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, voiceVolumeInSpeakerMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, musicVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, voiceVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, intrinsicMusicVoiceDelay_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, audienceMusicVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, hostMusicVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, allVoiceVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, onlyVoiceVolumeInSpeakerMode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, errCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, musicVolumeInSpeakerMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, voiceVolumeInSpeakerMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, musicVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, voiceVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, intrinsicMusicVoiceDelay_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, audienceMusicVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, hostMusicVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, allVoiceVolumeInHeadsetMode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, onlyVoiceVolumeInSpeakerMode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mi.liveassistant.proto.GetVolumeResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mi.liveassistant.proto.GetVolumeResponse)
        com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse.class, com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        musicVolumeInSpeakerMode_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        voiceVolumeInSpeakerMode_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        musicVolumeInHeadsetMode_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        voiceVolumeInHeadsetMode_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        intrinsicMusicVoiceDelay_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        audienceMusicVolumeInHeadsetMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        hostMusicVolumeInHeadsetMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        allVoiceVolumeInHeadsetMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        onlyVoiceVolumeInSpeakerMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.CloudParamsProto.internal_static_com_mi_liveassistant_proto_GetVolumeResponse_descriptor;
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse build() {
        com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse buildPartial() {
        com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse result = new com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errCode_ = errCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.musicVolumeInSpeakerMode_ = musicVolumeInSpeakerMode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.voiceVolumeInSpeakerMode_ = voiceVolumeInSpeakerMode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.musicVolumeInHeadsetMode_ = musicVolumeInHeadsetMode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.voiceVolumeInHeadsetMode_ = voiceVolumeInHeadsetMode_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.intrinsicMusicVoiceDelay_ = intrinsicMusicVoiceDelay_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.audienceMusicVolumeInHeadsetMode_ = audienceMusicVolumeInHeadsetMode_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.hostMusicVolumeInHeadsetMode_ = hostMusicVolumeInHeadsetMode_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.allVoiceVolumeInHeadsetMode_ = allVoiceVolumeInHeadsetMode_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.onlyVoiceVolumeInSpeakerMode_ = onlyVoiceVolumeInSpeakerMode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse) {
          return mergeFrom((com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse other) {
        if (other == com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse.getDefaultInstance()) return this;
        if (other.hasErrCode()) {
          setErrCode(other.getErrCode());
        }
        if (other.hasMusicVolumeInSpeakerMode()) {
          setMusicVolumeInSpeakerMode(other.getMusicVolumeInSpeakerMode());
        }
        if (other.hasVoiceVolumeInSpeakerMode()) {
          setVoiceVolumeInSpeakerMode(other.getVoiceVolumeInSpeakerMode());
        }
        if (other.hasMusicVolumeInHeadsetMode()) {
          setMusicVolumeInHeadsetMode(other.getMusicVolumeInHeadsetMode());
        }
        if (other.hasVoiceVolumeInHeadsetMode()) {
          setVoiceVolumeInHeadsetMode(other.getVoiceVolumeInHeadsetMode());
        }
        if (other.hasIntrinsicMusicVoiceDelay()) {
          setIntrinsicMusicVoiceDelay(other.getIntrinsicMusicVoiceDelay());
        }
        if (other.hasAudienceMusicVolumeInHeadsetMode()) {
          setAudienceMusicVolumeInHeadsetMode(other.getAudienceMusicVolumeInHeadsetMode());
        }
        if (other.hasHostMusicVolumeInHeadsetMode()) {
          setHostMusicVolumeInHeadsetMode(other.getHostMusicVolumeInHeadsetMode());
        }
        if (other.hasAllVoiceVolumeInHeadsetMode()) {
          setAllVoiceVolumeInHeadsetMode(other.getAllVoiceVolumeInHeadsetMode());
        }
        if (other.hasOnlyVoiceVolumeInSpeakerMode()) {
          setOnlyVoiceVolumeInSpeakerMode(other.getOnlyVoiceVolumeInSpeakerMode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasErrCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.CloudParamsProto.GetVolumeResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int errCode_ ;
      /**
       * <code>required int32 err_code = 1;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public boolean hasErrCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 err_code = 1;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public int getErrCode() {
        return errCode_;
      }
      /**
       * <code>required int32 err_code = 1;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public Builder setErrCode(int value) {
        bitField0_ |= 0x00000001;
        errCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 err_code = 1;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public Builder clearErrCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errCode_ = 0;
        onChanged();
        return this;
      }

      private float musicVolumeInSpeakerMode_ ;
      /**
       * <code>optional float music_volume_in_speaker_mode = 2;</code>
       *
       * <pre>
       * 外放模式下音乐播放的默认音量[0,1], 安卓,ios共有
       * </pre>
       */
      public boolean hasMusicVolumeInSpeakerMode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float music_volume_in_speaker_mode = 2;</code>
       *
       * <pre>
       * 外放模式下音乐播放的默认音量[0,1], 安卓,ios共有
       * </pre>
       */
      public float getMusicVolumeInSpeakerMode() {
        return musicVolumeInSpeakerMode_;
      }
      /**
       * <code>optional float music_volume_in_speaker_mode = 2;</code>
       *
       * <pre>
       * 外放模式下音乐播放的默认音量[0,1], 安卓,ios共有
       * </pre>
       */
      public Builder setMusicVolumeInSpeakerMode(float value) {
        bitField0_ |= 0x00000002;
        musicVolumeInSpeakerMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float music_volume_in_speaker_mode = 2;</code>
       *
       * <pre>
       * 外放模式下音乐播放的默认音量[0,1], 安卓,ios共有
       * </pre>
       */
      public Builder clearMusicVolumeInSpeakerMode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        musicVolumeInSpeakerMode_ = 0F;
        onChanged();
        return this;
      }

      private float voiceVolumeInSpeakerMode_ ;
      /**
       * <code>optional float voice_volume_in_speaker_mode = 3;</code>
       *
       * <pre>
       * 外放模式下录音(包括人声及外放的音乐)的默认音量 [0, 2], 安卓,ios共有
       * </pre>
       */
      public boolean hasVoiceVolumeInSpeakerMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float voice_volume_in_speaker_mode = 3;</code>
       *
       * <pre>
       * 外放模式下录音(包括人声及外放的音乐)的默认音量 [0, 2], 安卓,ios共有
       * </pre>
       */
      public float getVoiceVolumeInSpeakerMode() {
        return voiceVolumeInSpeakerMode_;
      }
      /**
       * <code>optional float voice_volume_in_speaker_mode = 3;</code>
       *
       * <pre>
       * 外放模式下录音(包括人声及外放的音乐)的默认音量 [0, 2], 安卓,ios共有
       * </pre>
       */
      public Builder setVoiceVolumeInSpeakerMode(float value) {
        bitField0_ |= 0x00000004;
        voiceVolumeInSpeakerMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float voice_volume_in_speaker_mode = 3;</code>
       *
       * <pre>
       * 外放模式下录音(包括人声及外放的音乐)的默认音量 [0, 2], 安卓,ios共有
       * </pre>
       */
      public Builder clearVoiceVolumeInSpeakerMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        voiceVolumeInSpeakerMode_ = 0F;
        onChanged();
        return this;
      }

      private float musicVolumeInHeadsetMode_ ;
      /**
       * <code>optional float music_volume_in_headset_mode = 4;</code>
       *
       * <pre>
       * 耳机模式下主播端和观众端听到的音乐播放的默认音量 [0, 1]，仅安卓有， ios为0
       * </pre>
       */
      public boolean hasMusicVolumeInHeadsetMode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float music_volume_in_headset_mode = 4;</code>
       *
       * <pre>
       * 耳机模式下主播端和观众端听到的音乐播放的默认音量 [0, 1]，仅安卓有， ios为0
       * </pre>
       */
      public float getMusicVolumeInHeadsetMode() {
        return musicVolumeInHeadsetMode_;
      }
      /**
       * <code>optional float music_volume_in_headset_mode = 4;</code>
       *
       * <pre>
       * 耳机模式下主播端和观众端听到的音乐播放的默认音量 [0, 1]，仅安卓有， ios为0
       * </pre>
       */
      public Builder setMusicVolumeInHeadsetMode(float value) {
        bitField0_ |= 0x00000008;
        musicVolumeInHeadsetMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float music_volume_in_headset_mode = 4;</code>
       *
       * <pre>
       * 耳机模式下主播端和观众端听到的音乐播放的默认音量 [0, 1]，仅安卓有， ios为0
       * </pre>
       */
      public Builder clearMusicVolumeInHeadsetMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        musicVolumeInHeadsetMode_ = 0F;
        onChanged();
        return this;
      }

      private float voiceVolumeInHeadsetMode_ ;
      /**
       * <code>optional float voice_volume_in_headset_mode = 5;</code>
       *
       * <pre>
       * 耳机模式下录音(只包括人声)的默认音量 [0, 2]， 仅安卓有， iOS为0
       * </pre>
       */
      public boolean hasVoiceVolumeInHeadsetMode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float voice_volume_in_headset_mode = 5;</code>
       *
       * <pre>
       * 耳机模式下录音(只包括人声)的默认音量 [0, 2]， 仅安卓有， iOS为0
       * </pre>
       */
      public float getVoiceVolumeInHeadsetMode() {
        return voiceVolumeInHeadsetMode_;
      }
      /**
       * <code>optional float voice_volume_in_headset_mode = 5;</code>
       *
       * <pre>
       * 耳机模式下录音(只包括人声)的默认音量 [0, 2]， 仅安卓有， iOS为0
       * </pre>
       */
      public Builder setVoiceVolumeInHeadsetMode(float value) {
        bitField0_ |= 0x00000010;
        voiceVolumeInHeadsetMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float voice_volume_in_headset_mode = 5;</code>
       *
       * <pre>
       * 耳机模式下录音(只包括人声)的默认音量 [0, 2]， 仅安卓有， iOS为0
       * </pre>
       */
      public Builder clearVoiceVolumeInHeadsetMode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        voiceVolumeInHeadsetMode_ = 0F;
        onChanged();
        return this;
      }

      private int intrinsicMusicVoiceDelay_ ;
      /**
       * <code>optional int32 intrinsic_music_voice_delay = 6;</code>
       *
       * <pre>
       * 音乐播放和人声录音的固有时间偏差 [-500, +500](单位毫秒)
       * </pre>
       */
      public boolean hasIntrinsicMusicVoiceDelay() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 intrinsic_music_voice_delay = 6;</code>
       *
       * <pre>
       * 音乐播放和人声录音的固有时间偏差 [-500, +500](单位毫秒)
       * </pre>
       */
      public int getIntrinsicMusicVoiceDelay() {
        return intrinsicMusicVoiceDelay_;
      }
      /**
       * <code>optional int32 intrinsic_music_voice_delay = 6;</code>
       *
       * <pre>
       * 音乐播放和人声录音的固有时间偏差 [-500, +500](单位毫秒)
       * </pre>
       */
      public Builder setIntrinsicMusicVoiceDelay(int value) {
        bitField0_ |= 0x00000020;
        intrinsicMusicVoiceDelay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 intrinsic_music_voice_delay = 6;</code>
       *
       * <pre>
       * 音乐播放和人声录音的固有时间偏差 [-500, +500](单位毫秒)
       * </pre>
       */
      public Builder clearIntrinsicMusicVoiceDelay() {
        bitField0_ = (bitField0_ & ~0x00000020);
        intrinsicMusicVoiceDelay_ = 0;
        onChanged();
        return this;
      }

      private int audienceMusicVolumeInHeadsetMode_ ;
      /**
       * <code>optional int32 audience_music_volume_in_headset_mode = 7;</code>
       *
       * <pre>
       * 耳机模式观众端听到的音乐大小, 仅iOS有，安卓为0
       * </pre>
       */
      public boolean hasAudienceMusicVolumeInHeadsetMode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 audience_music_volume_in_headset_mode = 7;</code>
       *
       * <pre>
       * 耳机模式观众端听到的音乐大小, 仅iOS有，安卓为0
       * </pre>
       */
      public int getAudienceMusicVolumeInHeadsetMode() {
        return audienceMusicVolumeInHeadsetMode_;
      }
      /**
       * <code>optional int32 audience_music_volume_in_headset_mode = 7;</code>
       *
       * <pre>
       * 耳机模式观众端听到的音乐大小, 仅iOS有，安卓为0
       * </pre>
       */
      public Builder setAudienceMusicVolumeInHeadsetMode(int value) {
        bitField0_ |= 0x00000040;
        audienceMusicVolumeInHeadsetMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 audience_music_volume_in_headset_mode = 7;</code>
       *
       * <pre>
       * 耳机模式观众端听到的音乐大小, 仅iOS有，安卓为0
       * </pre>
       */
      public Builder clearAudienceMusicVolumeInHeadsetMode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        audienceMusicVolumeInHeadsetMode_ = 0;
        onChanged();
        return this;
      }

      private int hostMusicVolumeInHeadsetMode_ ;
      /**
       * <code>optional int32 host_music_volume_in_headset_mode = 8;</code>
       *
       * <pre>
       * 耳机模式主播端听到的音乐大小，仅iOS有，安卓为0
       * </pre>
       */
      public boolean hasHostMusicVolumeInHeadsetMode() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 host_music_volume_in_headset_mode = 8;</code>
       *
       * <pre>
       * 耳机模式主播端听到的音乐大小，仅iOS有，安卓为0
       * </pre>
       */
      public int getHostMusicVolumeInHeadsetMode() {
        return hostMusicVolumeInHeadsetMode_;
      }
      /**
       * <code>optional int32 host_music_volume_in_headset_mode = 8;</code>
       *
       * <pre>
       * 耳机模式主播端听到的音乐大小，仅iOS有，安卓为0
       * </pre>
       */
      public Builder setHostMusicVolumeInHeadsetMode(int value) {
        bitField0_ |= 0x00000080;
        hostMusicVolumeInHeadsetMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 host_music_volume_in_headset_mode = 8;</code>
       *
       * <pre>
       * 耳机模式主播端听到的音乐大小，仅iOS有，安卓为0
       * </pre>
       */
      public Builder clearHostMusicVolumeInHeadsetMode() {
        bitField0_ = (bitField0_ & ~0x00000080);
        hostMusicVolumeInHeadsetMode_ = 0;
        onChanged();
        return this;
      }

      private int allVoiceVolumeInHeadsetMode_ ;
      /**
       * <code>optional int32 all_voice_volume_in_headset_mode = 9;</code>
       *
       * <pre>
       * 主播端和观众端听到的人声大小,仅iOS有，安卓为0
       * </pre>
       */
      public boolean hasAllVoiceVolumeInHeadsetMode() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 all_voice_volume_in_headset_mode = 9;</code>
       *
       * <pre>
       * 主播端和观众端听到的人声大小,仅iOS有，安卓为0
       * </pre>
       */
      public int getAllVoiceVolumeInHeadsetMode() {
        return allVoiceVolumeInHeadsetMode_;
      }
      /**
       * <code>optional int32 all_voice_volume_in_headset_mode = 9;</code>
       *
       * <pre>
       * 主播端和观众端听到的人声大小,仅iOS有，安卓为0
       * </pre>
       */
      public Builder setAllVoiceVolumeInHeadsetMode(int value) {
        bitField0_ |= 0x00000100;
        allVoiceVolumeInHeadsetMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 all_voice_volume_in_headset_mode = 9;</code>
       *
       * <pre>
       * 主播端和观众端听到的人声大小,仅iOS有，安卓为0
       * </pre>
       */
      public Builder clearAllVoiceVolumeInHeadsetMode() {
        bitField0_ = (bitField0_ & ~0x00000100);
        allVoiceVolumeInHeadsetMode_ = 0;
        onChanged();
        return this;
      }

      private int onlyVoiceVolumeInSpeakerMode_ ;
      /**
       * <code>optional int32 only_voice_volume_in_speaker_mode = 10;</code>
       *
       * <pre>
       * 外放模式下录音音量(仅包括人声，无音乐)的默认音量, 安卓,ios共有
       * </pre>
       */
      public boolean hasOnlyVoiceVolumeInSpeakerMode() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 only_voice_volume_in_speaker_mode = 10;</code>
       *
       * <pre>
       * 外放模式下录音音量(仅包括人声，无音乐)的默认音量, 安卓,ios共有
       * </pre>
       */
      public int getOnlyVoiceVolumeInSpeakerMode() {
        return onlyVoiceVolumeInSpeakerMode_;
      }
      /**
       * <code>optional int32 only_voice_volume_in_speaker_mode = 10;</code>
       *
       * <pre>
       * 外放模式下录音音量(仅包括人声，无音乐)的默认音量, 安卓,ios共有
       * </pre>
       */
      public Builder setOnlyVoiceVolumeInSpeakerMode(int value) {
        bitField0_ |= 0x00000200;
        onlyVoiceVolumeInSpeakerMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 only_voice_volume_in_speaker_mode = 10;</code>
       *
       * <pre>
       * 外放模式下录音音量(仅包括人声，无音乐)的默认音量, 安卓,ios共有
       * </pre>
       */
      public Builder clearOnlyVoiceVolumeInSpeakerMode() {
        bitField0_ = (bitField0_ & ~0x00000200);
        onlyVoiceVolumeInSpeakerMode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mi.liveassistant.proto.GetVolumeResponse)
    }

    static {
      defaultInstance = new GetVolumeResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mi.liveassistant.proto.GetVolumeResponse)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mi_liveassistant_proto_GetCameraRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mi_liveassistant_proto_GetCameraRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mi_liveassistant_proto_GetCameraResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mi_liveassistant_proto_GetCameraResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mi_liveassistant_proto_GetVolumeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mi_liveassistant_proto_GetVolumeRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mi_liveassistant_proto_GetVolumeResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mi_liveassistant_proto_GetVolumeResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021CloudParams.proto\022\032com.mi.liveassistan" +
      "t.proto\"2\n\020GetCameraRequest\022\r\n\005model\030\001 \002" +
      "(\t\022\017\n\007version\030\002 \002(\t\"\336\001\n\021GetCameraRespons" +
      "e\022\020\n\010err_code\030\001 \002(\005\022\025\n\rcamera_config\030\002 \001" +
      "(\005\022\023\n\013open_filter\030\003 \001(\010\022\025\n\rcamera_levels" +
      "\030\004 \003(\005\022\030\n\020open_videorecord\030\005 \001(\010\022\037\n\027open" +
      "_videorecord_anchor\030\006 \001(\010\022\030\n\020videorecord" +
      "_time\030\007 \001(\r\022\037\n\027videorecord_time_anchor\030\010" +
      " \001(\r\"R\n\020GetVolumeRequest\022\r\n\005model\030\001 \002(\t\022" +
      "\n\n\002os\030\002 \002(\t\022\016\n\006engine\030\003 \001(\t\022\023\n\013app_versi",
      "on\030\004 \001(\t\"\221\003\n\021GetVolumeResponse\022\020\n\010err_co" +
      "de\030\001 \002(\005\022$\n\034music_volume_in_speaker_mode" +
      "\030\002 \001(\002\022$\n\034voice_volume_in_speaker_mode\030\003" +
      " \001(\002\022$\n\034music_volume_in_headset_mode\030\004 \001" +
      "(\002\022$\n\034voice_volume_in_headset_mode\030\005 \001(\002" +
      "\022#\n\033intrinsic_music_voice_delay\030\006 \001(\005\022-\n" +
      "%audience_music_volume_in_headset_mode\030\007" +
      " \001(\005\022)\n!host_music_volume_in_headset_mod" +
      "e\030\010 \001(\005\022(\n all_voice_volume_in_headset_m" +
      "ode\030\t \001(\005\022)\n!only_voice_volume_in_speake",
      "r_mode\030\n \001(\005B.\n\032com.mi.liveassistant.pro" +
      "toB\020CloudParamsProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_mi_liveassistant_proto_GetCameraRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_mi_liveassistant_proto_GetCameraRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mi_liveassistant_proto_GetCameraRequest_descriptor,
        new java.lang.String[] { "Model", "Version", });
    internal_static_com_mi_liveassistant_proto_GetCameraResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_mi_liveassistant_proto_GetCameraResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mi_liveassistant_proto_GetCameraResponse_descriptor,
        new java.lang.String[] { "ErrCode", "CameraConfig", "OpenFilter", "CameraLevels", "OpenVideorecord", "OpenVideorecordAnchor", "VideorecordTime", "VideorecordTimeAnchor", });
    internal_static_com_mi_liveassistant_proto_GetVolumeRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_mi_liveassistant_proto_GetVolumeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mi_liveassistant_proto_GetVolumeRequest_descriptor,
        new java.lang.String[] { "Model", "Os", "Engine", "AppVersion", });
    internal_static_com_mi_liveassistant_proto_GetVolumeResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_mi_liveassistant_proto_GetVolumeResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mi_liveassistant_proto_GetVolumeResponse_descriptor,
        new java.lang.String[] { "ErrCode", "MusicVolumeInSpeakerMode", "VoiceVolumeInSpeakerMode", "MusicVolumeInHeadsetMode", "VoiceVolumeInHeadsetMode", "IntrinsicMusicVoiceDelay", "AudienceMusicVolumeInHeadsetMode", "HostMusicVolumeInHeadsetMode", "AllVoiceVolumeInHeadsetMode", "OnlyVoiceVolumeInSpeakerMode", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
