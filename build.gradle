// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: "config.gradle"

/**
 * buildscript里是gradle脚本执行所需依赖，分别是对应的maven库和插件
 */
buildscript {
    ext.kotlin_version = '1.3.50'
    //加载本地全局变量 local.properties 存入 rootProject.ext 中 所有的特有的本地变量在这里加载
//    Properties properties = new Properties()
//    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
//    properties.load(inputStream)
//    ext.local_maven = properties.getProperty('local_maven')
//    ext.nexus_name = properties.getProperty('nexus_name')
//    ext.nexus_password = properties.getProperty('nexus_password')

    ext.local_maven = local_maven
    ext.nexus_name = nexus_name
    ext.nexus_password = nexus_password

    repositories {
        /*** 优先从本地 Maven 中找库 ***/
//        flatDir{dirs '...replugin-host-gradle.jar'} // 直接找 jar 包
        if (selfPluginOpenForCompile.toBoolean()) {
            maven {
                //远程maven路径
                url 'https://raw.githubusercontent.com/simonjava/maven_repo/master'
            }
        }
        // 这里改成自己的本地路径
        maven { url rootProject.ext.local_maven }

//        if (aliFeedback.toBoolean()) {
//            maven {
//                url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
//            }
//        }

        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }

        maven { url 'https://dl.bintray.com/umsdk/release' }

        maven { url "https://plugins.gradle.org/m2/" }

        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        // 因为svga 用的是kotlin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.dicedmelon.gradle:jacoco-android:0.1.4"
        if (virtualApkEnable.toBoolean()) {
            //VirtualApk
            classpath 'com.didi.virtualapk:gradle:0.9.8.6'
        }
        if (repluginHostEnable.toBoolean()) {
            // replugin 9.9 版本在本地 maven 中
            classpath 'com.qihoo360.replugin:replugin-host-gradle:9.9'
        }
        if (repluginPluginEnable.toBoolean()) {
            // replugin 9.9 版本在本地 maven 中
            classpath 'com.qihoo360.replugin:replugin-plugin-gradle:9.8'
        }
        if (arouterTableLoadOnBuild.toBoolean()) {
            classpath "com.alibaba:arouter-register:1.0.2"
        }
        if (selfPluginOpenForCompile.toBoolean()) {
            classpath "com.csm.gradleutils:manyutils:1.1"
        }
        if (walleEnable.toBoolean()) {
            classpath 'com.meituan.android.walle:plugin:1.1.6'
        }
        if (MatrixEnable.toBoolean()) {
            classpath("com.tencent.matrix:matrix-gradle-plugin:${MATRIX_VERSION}") {
                changing = true
            }
        }
        // SuperTextView需要
        //classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
//        if (aliFeedback.toBoolean()) {
//            classpath 'com.aliyun.ams:emas-services:1.0.1'
//        }
        classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.5"
    }
}

/**
 * allprojects里是项目本身需要的依赖，比如我现在要依赖我自己maven库的
 */
allprojects {
    repositories {
        if (selfPluginOpenForCompile.toBoolean()) {
            maven {
                //远程maven路径
                url 'https://raw.githubusercontent.com/simonjava/maven_repo/master'
            }
        }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }

        // 为了同步component框架,后期改框架可去掉
        maven {
            url 'https://raw.githubusercontent.com/ModerateFish/mvn-repo/master/'
        }

        maven { url 'https://dl.bintray.com/umsdk/release' }

        maven { url 'https://jitpack.io' }

        maven { url rootProject.ext.local_maven }

        if (aliFeedback.toBoolean()) {
            maven {
                url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
            }
        }

        google()
        jcenter()

        if (JPushEnable.toBoolean() || RomPushUseRC.toBoolean()) {
            maven { url 'http://developer.huawei.com/repo/' }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply plugin: "com.dorongold.task-tree"