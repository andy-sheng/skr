// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Room.proto
package com.zq.live.proto.Room;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import com.zq.live.proto.Common.UserInfo;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class QJoinNoticeMsg extends Message<QJoinNoticeMsg, QJoinNoticeMsg.Builder> {
  public static final ProtoAdapter<QJoinNoticeMsg> ADAPTER = new ProtoAdapter_QJoinNoticeMsg();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_JOINTIMEMS = 0L;

  public static final EQUserRole DEFAULT_ROLE = EQUserRole.EQUR_UNKNOWN;

  public static final Integer DEFAULT_ROUNDSEQ = 0;

  /**
   * 加入游戏的信息
   */
  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.Common.UserInfo#ADAPTER"
  )
  private final UserInfo user;

  /**
   * 加入毫秒时间戳
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#SINT64"
  )
  private final Long joinTimeMs;

  /**
   * 角色
   */
  @WireField(
      tag = 3,
      adapter = "com.zq.live.proto.Room.EQUserRole#ADAPTER"
  )
  private final EQUserRole role;

  /**
   * 轮次顺序
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer roundSeq;

  public QJoinNoticeMsg(UserInfo user, Long joinTimeMs, EQUserRole role, Integer roundSeq) {
    this(user, joinTimeMs, role, roundSeq, ByteString.EMPTY);
  }

  public QJoinNoticeMsg(UserInfo user, Long joinTimeMs, EQUserRole role, Integer roundSeq,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.user = user;
    this.joinTimeMs = joinTimeMs;
    this.role = role;
    this.roundSeq = roundSeq;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.user = user;
    builder.joinTimeMs = joinTimeMs;
    builder.role = role;
    builder.roundSeq = roundSeq;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof QJoinNoticeMsg)) return false;
    QJoinNoticeMsg o = (QJoinNoticeMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(user, o.user)
        && Internal.equals(joinTimeMs, o.joinTimeMs)
        && Internal.equals(role, o.role)
        && Internal.equals(roundSeq, o.roundSeq);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (user != null ? user.hashCode() : 0);
      result = result * 37 + (joinTimeMs != null ? joinTimeMs.hashCode() : 0);
      result = result * 37 + (role != null ? role.hashCode() : 0);
      result = result * 37 + (roundSeq != null ? roundSeq.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (user != null) builder.append(", user=").append(user);
    if (joinTimeMs != null) builder.append(", joinTimeMs=").append(joinTimeMs);
    if (role != null) builder.append(", role=").append(role);
    if (roundSeq != null) builder.append(", roundSeq=").append(roundSeq);
    return builder.replace(0, 2, "QJoinNoticeMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return QJoinNoticeMsg.ADAPTER.encode(this);
  }

  public static final QJoinNoticeMsg parseFrom(byte[] data) throws IOException {
    QJoinNoticeMsg c = null;
       c = QJoinNoticeMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 加入游戏的信息
   */
  public UserInfo getUser() {
    if(user==null){
        return new UserInfo.Builder().build();
    }
    return user;
  }

  /**
   * 加入毫秒时间戳
   */
  public Long getJoinTimeMs() {
    if(joinTimeMs==null){
        return DEFAULT_JOINTIMEMS;
    }
    return joinTimeMs;
  }

  /**
   * 角色
   */
  public EQUserRole getRole() {
    if(role==null){
        return new EQUserRole.Builder().build();
    }
    return role;
  }

  /**
   * 轮次顺序
   */
  public Integer getRoundSeq() {
    if(roundSeq==null){
        return DEFAULT_ROUNDSEQ;
    }
    return roundSeq;
  }

  /**
   * 加入游戏的信息
   */
  public boolean hasUser() {
    return user!=null;
  }

  /**
   * 加入毫秒时间戳
   */
  public boolean hasJoinTimeMs() {
    return joinTimeMs!=null;
  }

  /**
   * 角色
   */
  public boolean hasRole() {
    return role!=null;
  }

  /**
   * 轮次顺序
   */
  public boolean hasRoundSeq() {
    return roundSeq!=null;
  }

  public static final class Builder extends Message.Builder<QJoinNoticeMsg, Builder> {
    private UserInfo user;

    private Long joinTimeMs;

    private EQUserRole role;

    private Integer roundSeq;

    public Builder() {
    }

    /**
     * 加入游戏的信息
     */
    public Builder setUser(UserInfo user) {
      this.user = user;
      return this;
    }

    /**
     * 加入毫秒时间戳
     */
    public Builder setJoinTimeMs(Long joinTimeMs) {
      this.joinTimeMs = joinTimeMs;
      return this;
    }

    /**
     * 角色
     */
    public Builder setRole(EQUserRole role) {
      this.role = role;
      return this;
    }

    /**
     * 轮次顺序
     */
    public Builder setRoundSeq(Integer roundSeq) {
      this.roundSeq = roundSeq;
      return this;
    }

    @Override
    public QJoinNoticeMsg build() {
      return new QJoinNoticeMsg(user, joinTimeMs, role, roundSeq, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_QJoinNoticeMsg extends ProtoAdapter<QJoinNoticeMsg> {
    public ProtoAdapter_QJoinNoticeMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, QJoinNoticeMsg.class);
    }

    @Override
    public int encodedSize(QJoinNoticeMsg value) {
      return UserInfo.ADAPTER.encodedSizeWithTag(1, value.user)
          + ProtoAdapter.SINT64.encodedSizeWithTag(2, value.joinTimeMs)
          + EQUserRole.ADAPTER.encodedSizeWithTag(3, value.role)
          + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.roundSeq)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, QJoinNoticeMsg value) throws IOException {
      UserInfo.ADAPTER.encodeWithTag(writer, 1, value.user);
      ProtoAdapter.SINT64.encodeWithTag(writer, 2, value.joinTimeMs);
      EQUserRole.ADAPTER.encodeWithTag(writer, 3, value.role);
      ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.roundSeq);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public QJoinNoticeMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUser(UserInfo.ADAPTER.decode(reader)); break;
          case 2: builder.setJoinTimeMs(ProtoAdapter.SINT64.decode(reader)); break;
          case 3: {
            try {
              builder.setRole(EQUserRole.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 4: builder.setRoundSeq(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public QJoinNoticeMsg redact(QJoinNoticeMsg value) {
      Builder builder = value.newBuilder();
      if (builder.user != null) builder.user = UserInfo.ADAPTER.redact(builder.user);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
