// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: relay_room.proto
package com.zq.live.proto.RelayRoom;

import com.squareup.wire.EnumAdapter;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

public enum ERelayRoomMsgType implements WireEnum {
  /**
   * 未知消息
   */
  RRT_UNKNOWN(0),

  /**
   * 进入房间
   */
  RRT_USER_ENTER(10),

  /**
   * 进入房间
   */
  RRT_GAME_OVER(11),

  /**
   * 加载下个轮次
   */
  RRT_NEXT_ROUND(12),

  /**
   * 解锁点歌
   */
  RRT_UNLOCK(13),

  /**
   * 同步
   */
  RRT_SYNC(14),

  /**
   * 请求接唱
   */
  RRT_REQ_ADD_MUSIC(15),

  /**
   * 点歌
   */
  RRT_ADD_MUSIC(16),

  /**
   * 删歌
   */
  RRT_DEL_MUSIC(17),

  /**
   * 置顶
   */
  RRT_UP_MUSIC(18),

  /**
   * 静音
   */
  RRT_MUTE(19);

  public static final ProtoAdapter<ERelayRoomMsgType> ADAPTER = new ProtoAdapter_ERelayRoomMsgType();

  private final int value;

  ERelayRoomMsgType(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static ERelayRoomMsgType fromValue(int value) {
    switch (value) {
      case 0: return RRT_UNKNOWN;
      case 10: return RRT_USER_ENTER;
      case 11: return RRT_GAME_OVER;
      case 12: return RRT_NEXT_ROUND;
      case 13: return RRT_UNLOCK;
      case 14: return RRT_SYNC;
      case 15: return RRT_REQ_ADD_MUSIC;
      case 16: return RRT_ADD_MUSIC;
      case 17: return RRT_DEL_MUSIC;
      case 18: return RRT_UP_MUSIC;
      case 19: return RRT_MUTE;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }

  public static final class Builder {
    public ERelayRoomMsgType build() {
      return RRT_UNKNOWN;
    }
  }

  private static final class ProtoAdapter_ERelayRoomMsgType extends EnumAdapter<ERelayRoomMsgType> {
    ProtoAdapter_ERelayRoomMsgType() {
      super(ERelayRoomMsgType.class);
    }

    @Override
    protected ERelayRoomMsgType fromValue(int value) {
      return ERelayRoomMsgType.fromValue(value);
    }
  }
}
