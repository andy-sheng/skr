// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: party_room.proto
package com.zq.live.proto.PartyRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import com.zq.live.proto.Common.POnlineInfo;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PJoinNoticeMsg extends Message<PJoinNoticeMsg, PJoinNoticeMsg.Builder> {
  public static final ProtoAdapter<PJoinNoticeMsg> ADAPTER = new ProtoAdapter_PJoinNoticeMsg();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_JOINTIMEMS = 0L;

  /**
   * 加入用户
   */
  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.Common.POnlineInfo#ADAPTER"
  )
  private final POnlineInfo user;

  /**
   * 加入时间
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#SINT64"
  )
  private final Long joinTimeMs;

  /**
   * 以嘉宾身份进入时，占用席位信息;其他身份加入，此字段为空
   */
  @WireField(
      tag = 3,
      adapter = "com.zq.live.proto.PartyRoom.SeatInfo#ADAPTER"
  )
  private final SeatInfo seat;

  public PJoinNoticeMsg(POnlineInfo user, Long joinTimeMs, SeatInfo seat) {
    this(user, joinTimeMs, seat, ByteString.EMPTY);
  }

  public PJoinNoticeMsg(POnlineInfo user, Long joinTimeMs, SeatInfo seat,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.user = user;
    this.joinTimeMs = joinTimeMs;
    this.seat = seat;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.user = user;
    builder.joinTimeMs = joinTimeMs;
    builder.seat = seat;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PJoinNoticeMsg)) return false;
    PJoinNoticeMsg o = (PJoinNoticeMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(user, o.user)
        && Internal.equals(joinTimeMs, o.joinTimeMs)
        && Internal.equals(seat, o.seat);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (user != null ? user.hashCode() : 0);
      result = result * 37 + (joinTimeMs != null ? joinTimeMs.hashCode() : 0);
      result = result * 37 + (seat != null ? seat.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (user != null) builder.append(", user=").append(user);
    if (joinTimeMs != null) builder.append(", joinTimeMs=").append(joinTimeMs);
    if (seat != null) builder.append(", seat=").append(seat);
    return builder.replace(0, 2, "PJoinNoticeMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return PJoinNoticeMsg.ADAPTER.encode(this);
  }

  public static final PJoinNoticeMsg parseFrom(byte[] data) throws IOException {
    PJoinNoticeMsg c = null;
       c = PJoinNoticeMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 加入用户
   */
  public POnlineInfo getUser() {
    if(user==null){
        return new POnlineInfo.Builder().build();
    }
    return user;
  }

  /**
   * 加入时间
   */
  public Long getJoinTimeMs() {
    if(joinTimeMs==null){
        return DEFAULT_JOINTIMEMS;
    }
    return joinTimeMs;
  }

  /**
   * 以嘉宾身份进入时，占用席位信息;其他身份加入，此字段为空
   */
  public SeatInfo getSeat() {
    if(seat==null){
        return new SeatInfo.Builder().build();
    }
    return seat;
  }

  /**
   * 加入用户
   */
  public boolean hasUser() {
    return user!=null;
  }

  /**
   * 加入时间
   */
  public boolean hasJoinTimeMs() {
    return joinTimeMs!=null;
  }

  /**
   * 以嘉宾身份进入时，占用席位信息;其他身份加入，此字段为空
   */
  public boolean hasSeat() {
    return seat!=null;
  }

  public static final class Builder extends Message.Builder<PJoinNoticeMsg, Builder> {
    private POnlineInfo user;

    private Long joinTimeMs;

    private SeatInfo seat;

    public Builder() {
    }

    /**
     * 加入用户
     */
    public Builder setUser(POnlineInfo user) {
      this.user = user;
      return this;
    }

    /**
     * 加入时间
     */
    public Builder setJoinTimeMs(Long joinTimeMs) {
      this.joinTimeMs = joinTimeMs;
      return this;
    }

    /**
     * 以嘉宾身份进入时，占用席位信息;其他身份加入，此字段为空
     */
    public Builder setSeat(SeatInfo seat) {
      this.seat = seat;
      return this;
    }

    @Override
    public PJoinNoticeMsg build() {
      return new PJoinNoticeMsg(user, joinTimeMs, seat, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PJoinNoticeMsg extends ProtoAdapter<PJoinNoticeMsg> {
    public ProtoAdapter_PJoinNoticeMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, PJoinNoticeMsg.class);
    }

    @Override
    public int encodedSize(PJoinNoticeMsg value) {
      return POnlineInfo.ADAPTER.encodedSizeWithTag(1, value.user)
          + ProtoAdapter.SINT64.encodedSizeWithTag(2, value.joinTimeMs)
          + SeatInfo.ADAPTER.encodedSizeWithTag(3, value.seat)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PJoinNoticeMsg value) throws IOException {
      POnlineInfo.ADAPTER.encodeWithTag(writer, 1, value.user);
      ProtoAdapter.SINT64.encodeWithTag(writer, 2, value.joinTimeMs);
      SeatInfo.ADAPTER.encodeWithTag(writer, 3, value.seat);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PJoinNoticeMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUser(POnlineInfo.ADAPTER.decode(reader)); break;
          case 2: builder.setJoinTimeMs(ProtoAdapter.SINT64.decode(reader)); break;
          case 3: builder.setSeat(SeatInfo.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PJoinNoticeMsg redact(PJoinNoticeMsg value) {
      Builder builder = value.newBuilder();
      if (builder.user != null) builder.user = POnlineInfo.ADAPTER.redact(builder.user);
      if (builder.seat != null) builder.seat = SeatInfo.ADAPTER.redact(builder.seat);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
