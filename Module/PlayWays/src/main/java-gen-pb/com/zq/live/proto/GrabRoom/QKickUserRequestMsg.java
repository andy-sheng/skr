// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: grab_room.proto
package com.zq.live.proto.GrabRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class QKickUserRequestMsg extends Message<QKickUserRequestMsg, QKickUserRequestMsg.Builder> {
  public static final ProtoAdapter<QKickUserRequestMsg> ADAPTER = new ProtoAdapter_QKickUserRequestMsg();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_SOURCEUSERID = 0;

  public static final Integer DEFAULT_KICKUSERID = 0;

  /**
   * 发起者id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer sourceUserID;

  /**
   * 被踢者id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer kickUserID;

  /**
   * 其他在线用户id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REPEATED
  )
  private final List<Integer> otherOnlineUserIDs;

  public QKickUserRequestMsg(Integer sourceUserID, Integer kickUserID,
      List<Integer> otherOnlineUserIDs) {
    this(sourceUserID, kickUserID, otherOnlineUserIDs, ByteString.EMPTY);
  }

  public QKickUserRequestMsg(Integer sourceUserID, Integer kickUserID,
      List<Integer> otherOnlineUserIDs, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.sourceUserID = sourceUserID;
    this.kickUserID = kickUserID;
    this.otherOnlineUserIDs = Internal.immutableCopyOf("otherOnlineUserIDs", otherOnlineUserIDs);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.sourceUserID = sourceUserID;
    builder.kickUserID = kickUserID;
    builder.otherOnlineUserIDs = Internal.copyOf("otherOnlineUserIDs", otherOnlineUserIDs);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof QKickUserRequestMsg)) return false;
    QKickUserRequestMsg o = (QKickUserRequestMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(sourceUserID, o.sourceUserID)
        && Internal.equals(kickUserID, o.kickUserID)
        && otherOnlineUserIDs.equals(o.otherOnlineUserIDs);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (sourceUserID != null ? sourceUserID.hashCode() : 0);
      result = result * 37 + (kickUserID != null ? kickUserID.hashCode() : 0);
      result = result * 37 + otherOnlineUserIDs.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (sourceUserID != null) builder.append(", sourceUserID=").append(sourceUserID);
    if (kickUserID != null) builder.append(", kickUserID=").append(kickUserID);
    if (!otherOnlineUserIDs.isEmpty()) builder.append(", otherOnlineUserIDs=").append(otherOnlineUserIDs);
    return builder.replace(0, 2, "QKickUserRequestMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return QKickUserRequestMsg.ADAPTER.encode(this);
  }

  public static final QKickUserRequestMsg parseFrom(byte[] data) throws IOException {
    QKickUserRequestMsg c = null;
       c = QKickUserRequestMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 发起者id
   */
  public Integer getSourceUserID() {
    if(sourceUserID==null){
        return DEFAULT_SOURCEUSERID;
    }
    return sourceUserID;
  }

  /**
   * 被踢者id
   */
  public Integer getKickUserID() {
    if(kickUserID==null){
        return DEFAULT_KICKUSERID;
    }
    return kickUserID;
  }

  /**
   * 其他在线用户id
   */
  public List<Integer> getOtherOnlineUserIDsList() {
    if(otherOnlineUserIDs==null){
        return new java.util.ArrayList<Integer>();
    }
    return otherOnlineUserIDs;
  }

  /**
   * 发起者id
   */
  public boolean hasSourceUserID() {
    return sourceUserID!=null;
  }

  /**
   * 被踢者id
   */
  public boolean hasKickUserID() {
    return kickUserID!=null;
  }

  /**
   * 其他在线用户id
   */
  public boolean hasOtherOnlineUserIDsList() {
    return otherOnlineUserIDs!=null;
  }

  public static final class Builder extends Message.Builder<QKickUserRequestMsg, Builder> {
    private Integer sourceUserID;

    private Integer kickUserID;

    private List<Integer> otherOnlineUserIDs;

    public Builder() {
      otherOnlineUserIDs = Internal.newMutableList();
    }

    /**
     * 发起者id
     */
    public Builder setSourceUserID(Integer sourceUserID) {
      this.sourceUserID = sourceUserID;
      return this;
    }

    /**
     * 被踢者id
     */
    public Builder setKickUserID(Integer kickUserID) {
      this.kickUserID = kickUserID;
      return this;
    }

    /**
     * 其他在线用户id
     */
    public Builder addAllOtherOnlineUserIDs(List<Integer> otherOnlineUserIDs) {
      Internal.checkElementsNotNull(otherOnlineUserIDs);
      this.otherOnlineUserIDs = otherOnlineUserIDs;
      return this;
    }

    @Override
    public QKickUserRequestMsg build() {
      return new QKickUserRequestMsg(sourceUserID, kickUserID, otherOnlineUserIDs, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_QKickUserRequestMsg extends ProtoAdapter<QKickUserRequestMsg> {
    public ProtoAdapter_QKickUserRequestMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, QKickUserRequestMsg.class);
    }

    @Override
    public int encodedSize(QKickUserRequestMsg value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.sourceUserID)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.kickUserID)
          + ProtoAdapter.UINT32.asRepeated().encodedSizeWithTag(3, value.otherOnlineUserIDs)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, QKickUserRequestMsg value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.sourceUserID);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.kickUserID);
      ProtoAdapter.UINT32.asRepeated().encodeWithTag(writer, 3, value.otherOnlineUserIDs);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public QKickUserRequestMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setSourceUserID(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setKickUserID(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.otherOnlineUserIDs.add(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public QKickUserRequestMsg redact(QKickUserRequestMsg value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
