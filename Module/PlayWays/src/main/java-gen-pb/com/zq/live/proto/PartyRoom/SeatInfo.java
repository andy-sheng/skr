// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: party_room.proto
package com.zq.live.proto.PartyRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class SeatInfo extends Message<SeatInfo, SeatInfo.Builder> {
  public static final ProtoAdapter<SeatInfo> ADAPTER = new ProtoAdapter_SeatInfo();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_SEATSEQ = 0;

  public static final ESeatStatus DEFAULT_SEATSTATUS = ESeatStatus.SS_UNKNOWN;

  public static final Integer DEFAULT_USERID = 0;

  public static final EMicStatus DEFAULT_MICSTATUS = EMicStatus.MS_UNKNOWN;

  /**
   * 席位顺序
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer seatSeq;

  /**
   * 座位状态
   */
  @WireField(
      tag = 2,
      adapter = "com.zq.live.proto.PartyRoom.ESeatStatus#ADAPTER"
  )
  private final ESeatStatus seatStatus;

  /**
   * 发起邀请的用户详情
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer userID;

  /**
   * 麦状态
   */
  @WireField(
      tag = 4,
      adapter = "com.zq.live.proto.PartyRoom.EMicStatus#ADAPTER"
  )
  private final EMicStatus micStatus;

  public SeatInfo(Integer seatSeq, ESeatStatus seatStatus, Integer userID, EMicStatus micStatus) {
    this(seatSeq, seatStatus, userID, micStatus, ByteString.EMPTY);
  }

  public SeatInfo(Integer seatSeq, ESeatStatus seatStatus, Integer userID, EMicStatus micStatus,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.seatSeq = seatSeq;
    this.seatStatus = seatStatus;
    this.userID = userID;
    this.micStatus = micStatus;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.seatSeq = seatSeq;
    builder.seatStatus = seatStatus;
    builder.userID = userID;
    builder.micStatus = micStatus;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SeatInfo)) return false;
    SeatInfo o = (SeatInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(seatSeq, o.seatSeq)
        && Internal.equals(seatStatus, o.seatStatus)
        && Internal.equals(userID, o.userID)
        && Internal.equals(micStatus, o.micStatus);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (seatSeq != null ? seatSeq.hashCode() : 0);
      result = result * 37 + (seatStatus != null ? seatStatus.hashCode() : 0);
      result = result * 37 + (userID != null ? userID.hashCode() : 0);
      result = result * 37 + (micStatus != null ? micStatus.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (seatSeq != null) builder.append(", seatSeq=").append(seatSeq);
    if (seatStatus != null) builder.append(", seatStatus=").append(seatStatus);
    if (userID != null) builder.append(", userID=").append(userID);
    if (micStatus != null) builder.append(", micStatus=").append(micStatus);
    return builder.replace(0, 2, "SeatInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return SeatInfo.ADAPTER.encode(this);
  }

  public static final SeatInfo parseFrom(byte[] data) throws IOException {
    SeatInfo c = null;
       c = SeatInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 席位顺序
   */
  public Integer getSeatSeq() {
    if(seatSeq==null){
        return DEFAULT_SEATSEQ;
    }
    return seatSeq;
  }

  /**
   * 座位状态
   */
  public ESeatStatus getSeatStatus() {
    if(seatStatus==null){
        return new ESeatStatus.Builder().build();
    }
    return seatStatus;
  }

  /**
   * 发起邀请的用户详情
   */
  public Integer getUserID() {
    if(userID==null){
        return DEFAULT_USERID;
    }
    return userID;
  }

  /**
   * 麦状态
   */
  public EMicStatus getMicStatus() {
    if(micStatus==null){
        return new EMicStatus.Builder().build();
    }
    return micStatus;
  }

  /**
   * 席位顺序
   */
  public boolean hasSeatSeq() {
    return seatSeq!=null;
  }

  /**
   * 座位状态
   */
  public boolean hasSeatStatus() {
    return seatStatus!=null;
  }

  /**
   * 发起邀请的用户详情
   */
  public boolean hasUserID() {
    return userID!=null;
  }

  /**
   * 麦状态
   */
  public boolean hasMicStatus() {
    return micStatus!=null;
  }

  public static final class Builder extends Message.Builder<SeatInfo, Builder> {
    private Integer seatSeq;

    private ESeatStatus seatStatus;

    private Integer userID;

    private EMicStatus micStatus;

    public Builder() {
    }

    /**
     * 席位顺序
     */
    public Builder setSeatSeq(Integer seatSeq) {
      this.seatSeq = seatSeq;
      return this;
    }

    /**
     * 座位状态
     */
    public Builder setSeatStatus(ESeatStatus seatStatus) {
      this.seatStatus = seatStatus;
      return this;
    }

    /**
     * 发起邀请的用户详情
     */
    public Builder setUserID(Integer userID) {
      this.userID = userID;
      return this;
    }

    /**
     * 麦状态
     */
    public Builder setMicStatus(EMicStatus micStatus) {
      this.micStatus = micStatus;
      return this;
    }

    @Override
    public SeatInfo build() {
      return new SeatInfo(seatSeq, seatStatus, userID, micStatus, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SeatInfo extends ProtoAdapter<SeatInfo> {
    public ProtoAdapter_SeatInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, SeatInfo.class);
    }

    @Override
    public int encodedSize(SeatInfo value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.seatSeq)
          + ESeatStatus.ADAPTER.encodedSizeWithTag(2, value.seatStatus)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.userID)
          + EMicStatus.ADAPTER.encodedSizeWithTag(4, value.micStatus)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SeatInfo value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.seatSeq);
      ESeatStatus.ADAPTER.encodeWithTag(writer, 2, value.seatStatus);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.userID);
      EMicStatus.ADAPTER.encodeWithTag(writer, 4, value.micStatus);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SeatInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setSeatSeq(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: {
            try {
              builder.setSeatStatus(ESeatStatus.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 3: builder.setUserID(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: {
            try {
              builder.setMicStatus(EMicStatus.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SeatInfo redact(SeatInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
