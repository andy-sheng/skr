// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Room.proto
package com.zq.live.proto.GrabRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class QCoinChangeMsg extends Message<QCoinChangeMsg, QCoinChangeMsg.Builder> {
  public static final ProtoAdapter<QCoinChangeMsg> ADAPTER = new ProtoAdapter_QCoinChangeMsg();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_USERID = 0;

  public static final Integer DEFAULT_CHANGECOIN = 0;

  public static final Integer DEFAULT_REMAINCOIN = 0;

  public static final EQCoinChangeReason DEFAULT_REASON = EQCoinChangeReason.OAR_UNKNOWN;

  public static final String DEFAULT_DESC = "";

  /**
   * 用户id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer userID;

  /**
   * 变动金币数量
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  private final Integer changeCoin;

  /**
   * 最终金币数量
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer remainCoin;

  /**
   * 变动原因
   */
  @WireField(
      tag = 4,
      adapter = "com.zq.live.proto.GrabRoom.EQCoinChangeReason#ADAPTER"
  )
  private final EQCoinChangeReason reason;

  /**
   * 描述信息
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String desc;

  public QCoinChangeMsg(Integer userID, Integer changeCoin, Integer remainCoin,
      EQCoinChangeReason reason, String desc) {
    this(userID, changeCoin, remainCoin, reason, desc, ByteString.EMPTY);
  }

  public QCoinChangeMsg(Integer userID, Integer changeCoin, Integer remainCoin,
      EQCoinChangeReason reason, String desc, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.userID = userID;
    this.changeCoin = changeCoin;
    this.remainCoin = remainCoin;
    this.reason = reason;
    this.desc = desc;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.userID = userID;
    builder.changeCoin = changeCoin;
    builder.remainCoin = remainCoin;
    builder.reason = reason;
    builder.desc = desc;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof QCoinChangeMsg)) return false;
    QCoinChangeMsg o = (QCoinChangeMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(userID, o.userID)
        && Internal.equals(changeCoin, o.changeCoin)
        && Internal.equals(remainCoin, o.remainCoin)
        && Internal.equals(reason, o.reason)
        && Internal.equals(desc, o.desc);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (userID != null ? userID.hashCode() : 0);
      result = result * 37 + (changeCoin != null ? changeCoin.hashCode() : 0);
      result = result * 37 + (remainCoin != null ? remainCoin.hashCode() : 0);
      result = result * 37 + (reason != null ? reason.hashCode() : 0);
      result = result * 37 + (desc != null ? desc.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (userID != null) builder.append(", userID=").append(userID);
    if (changeCoin != null) builder.append(", changeCoin=").append(changeCoin);
    if (remainCoin != null) builder.append(", remainCoin=").append(remainCoin);
    if (reason != null) builder.append(", reason=").append(reason);
    if (desc != null) builder.append(", desc=").append(desc);
    return builder.replace(0, 2, "QCoinChangeMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return QCoinChangeMsg.ADAPTER.encode(this);
  }

  public static final QCoinChangeMsg parseFrom(byte[] data) throws IOException {
    QCoinChangeMsg c = null;
       c = QCoinChangeMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 用户id
   */
  public Integer getUserID() {
    if(userID==null){
        return DEFAULT_USERID;
    }
    return userID;
  }

  /**
   * 变动金币数量
   */
  public Integer getChangeCoin() {
    if(changeCoin==null){
        return DEFAULT_CHANGECOIN;
    }
    return changeCoin;
  }

  /**
   * 最终金币数量
   */
  public Integer getRemainCoin() {
    if(remainCoin==null){
        return DEFAULT_REMAINCOIN;
    }
    return remainCoin;
  }

  /**
   * 变动原因
   */
  public EQCoinChangeReason getReason() {
    if(reason==null){
        return new EQCoinChangeReason.Builder().build();
    }
    return reason;
  }

  /**
   * 描述信息
   */
  public String getDesc() {
    if(desc==null){
        return DEFAULT_DESC;
    }
    return desc;
  }

  /**
   * 用户id
   */
  public boolean hasUserID() {
    return userID!=null;
  }

  /**
   * 变动金币数量
   */
  public boolean hasChangeCoin() {
    return changeCoin!=null;
  }

  /**
   * 最终金币数量
   */
  public boolean hasRemainCoin() {
    return remainCoin!=null;
  }

  /**
   * 变动原因
   */
  public boolean hasReason() {
    return reason!=null;
  }

  /**
   * 描述信息
   */
  public boolean hasDesc() {
    return desc!=null;
  }

  public static final class Builder extends Message.Builder<QCoinChangeMsg, Builder> {
    private Integer userID;

    private Integer changeCoin;

    private Integer remainCoin;

    private EQCoinChangeReason reason;

    private String desc;

    public Builder() {
    }

    /**
     * 用户id
     */
    public Builder setUserID(Integer userID) {
      this.userID = userID;
      return this;
    }

    /**
     * 变动金币数量
     */
    public Builder setChangeCoin(Integer changeCoin) {
      this.changeCoin = changeCoin;
      return this;
    }

    /**
     * 最终金币数量
     */
    public Builder setRemainCoin(Integer remainCoin) {
      this.remainCoin = remainCoin;
      return this;
    }

    /**
     * 变动原因
     */
    public Builder setReason(EQCoinChangeReason reason) {
      this.reason = reason;
      return this;
    }

    /**
     * 描述信息
     */
    public Builder setDesc(String desc) {
      this.desc = desc;
      return this;
    }

    @Override
    public QCoinChangeMsg build() {
      return new QCoinChangeMsg(userID, changeCoin, remainCoin, reason, desc, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_QCoinChangeMsg extends ProtoAdapter<QCoinChangeMsg> {
    public ProtoAdapter_QCoinChangeMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, QCoinChangeMsg.class);
    }

    @Override
    public int encodedSize(QCoinChangeMsg value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.userID)
          + ProtoAdapter.INT32.encodedSizeWithTag(2, value.changeCoin)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.remainCoin)
          + EQCoinChangeReason.ADAPTER.encodedSizeWithTag(4, value.reason)
          + ProtoAdapter.STRING.encodedSizeWithTag(5, value.desc)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, QCoinChangeMsg value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.userID);
      ProtoAdapter.INT32.encodeWithTag(writer, 2, value.changeCoin);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.remainCoin);
      EQCoinChangeReason.ADAPTER.encodeWithTag(writer, 4, value.reason);
      ProtoAdapter.STRING.encodeWithTag(writer, 5, value.desc);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public QCoinChangeMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUserID(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setChangeCoin(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.setRemainCoin(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: {
            try {
              builder.setReason(EQCoinChangeReason.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 5: builder.setDesc(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public QCoinChangeMsg redact(QCoinChangeMsg value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
