// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: party_room.proto
package com.zq.live.proto.PartyRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import com.zq.live.proto.Common.UserInfo;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class POnlineInfo extends Message<POnlineInfo, POnlineInfo.Builder> {
  public static final ProtoAdapter<POnlineInfo> ADAPTER = new ProtoAdapter_POnlineInfo();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_POPULARITY = 0;

  /**
   * 用户信息
   */
  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.Common.UserInfo#ADAPTER"
  )
  private final UserInfo userInfo;

  /**
   * 用户角色
   */
  @WireField(
      tag = 2,
      adapter = "com.zq.live.proto.PartyRoom.EPUserRole#ADAPTER",
      label = WireField.Label.REPEATED
  )
  private final List<EPUserRole> role;

  /**
   * 人气
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer popularity;

  public POnlineInfo(UserInfo userInfo, List<EPUserRole> role, Integer popularity) {
    this(userInfo, role, popularity, ByteString.EMPTY);
  }

  public POnlineInfo(UserInfo userInfo, List<EPUserRole> role, Integer popularity,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.userInfo = userInfo;
    this.role = Internal.immutableCopyOf("role", role);
    this.popularity = popularity;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.userInfo = userInfo;
    builder.role = Internal.copyOf("role", role);
    builder.popularity = popularity;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof POnlineInfo)) return false;
    POnlineInfo o = (POnlineInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(userInfo, o.userInfo)
        && role.equals(o.role)
        && Internal.equals(popularity, o.popularity);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (userInfo != null ? userInfo.hashCode() : 0);
      result = result * 37 + role.hashCode();
      result = result * 37 + (popularity != null ? popularity.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (userInfo != null) builder.append(", userInfo=").append(userInfo);
    if (!role.isEmpty()) builder.append(", role=").append(role);
    if (popularity != null) builder.append(", popularity=").append(popularity);
    return builder.replace(0, 2, "POnlineInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return POnlineInfo.ADAPTER.encode(this);
  }

  public static final POnlineInfo parseFrom(byte[] data) throws IOException {
    POnlineInfo c = null;
       c = POnlineInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 用户信息
   */
  public UserInfo getUserInfo() {
    if(userInfo==null){
        return new UserInfo.Builder().build();
    }
    return userInfo;
  }

  /**
   * 用户角色
   */
  public List<EPUserRole> getRoleList() {
    if(role==null){
        return new java.util.ArrayList<EPUserRole>();
    }
    return role;
  }

  /**
   * 人气
   */
  public Integer getPopularity() {
    if(popularity==null){
        return DEFAULT_POPULARITY;
    }
    return popularity;
  }

  /**
   * 用户信息
   */
  public boolean hasUserInfo() {
    return userInfo!=null;
  }

  /**
   * 用户角色
   */
  public boolean hasRoleList() {
    return role!=null;
  }

  /**
   * 人气
   */
  public boolean hasPopularity() {
    return popularity!=null;
  }

  public static final class Builder extends Message.Builder<POnlineInfo, Builder> {
    private UserInfo userInfo;

    private List<EPUserRole> role;

    private Integer popularity;

    public Builder() {
      role = Internal.newMutableList();
    }

    /**
     * 用户信息
     */
    public Builder setUserInfo(UserInfo userInfo) {
      this.userInfo = userInfo;
      return this;
    }

    /**
     * 用户角色
     */
    public Builder addAllRole(List<EPUserRole> role) {
      Internal.checkElementsNotNull(role);
      this.role = role;
      return this;
    }

    /**
     * 人气
     */
    public Builder setPopularity(Integer popularity) {
      this.popularity = popularity;
      return this;
    }

    @Override
    public POnlineInfo build() {
      return new POnlineInfo(userInfo, role, popularity, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_POnlineInfo extends ProtoAdapter<POnlineInfo> {
    public ProtoAdapter_POnlineInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, POnlineInfo.class);
    }

    @Override
    public int encodedSize(POnlineInfo value) {
      return UserInfo.ADAPTER.encodedSizeWithTag(1, value.userInfo)
          + EPUserRole.ADAPTER.asRepeated().encodedSizeWithTag(2, value.role)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.popularity)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, POnlineInfo value) throws IOException {
      UserInfo.ADAPTER.encodeWithTag(writer, 1, value.userInfo);
      EPUserRole.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.role);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.popularity);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public POnlineInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUserInfo(UserInfo.ADAPTER.decode(reader)); break;
          case 2: {
            try {
              builder.role.add(EPUserRole.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 3: builder.setPopularity(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public POnlineInfo redact(POnlineInfo value) {
      Builder builder = value.newBuilder();
      if (builder.userInfo != null) builder.userInfo = UserInfo.ADAPTER.redact(builder.userInfo);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
