// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Room.proto
package com.zq.live.proto.Room;

import com.squareup.wire.EnumAdapter;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

public enum EScoreType implements WireEnum {
  /**
   * 未知
   */
  ST_UNKNOWN(0),

  /**
   * 主段位
   */
  ST_RANKING(1),

  /**
   * 子段位
   */
  ST_SUB_RANKING(2),

  /**
   * 子段位当前星星数
   */
  ST_SUB_RANKING_STAR(3),

  /**
   * 子段位星星数上限
   */
  ST_SUB_RANKING_TOTAL_STAR(4),

  /**
   * 晋级赛开启状态值。可看作布尔值，scoreNow不为0表示处于某种晋级赛当中
   */
  ST_RANKING_UPGRADE(5),

  /**
   * 晋级赛当前星星数
   */
  ST_RANKING_UPGRADE_STAR(6),

  /**
   * 晋级赛星星数上限
   */
  ST_RANKING_UPGRADE_TOTAL_STAR(7),

  /**
   * 当前战力值
   */
  ST_BATTLE_INDEX_REAL(8),

  /**
   * 战力值上限
   */
  ST_BATTLE_INDEX_TOTAL(9),

  /**
   * 战斗评价, sss or ss or s or a...
   */
  ST_BATTLE_RATING(10),

  /**
   * 掉段保护需要的战力值。用作阈值，用scoreNow表示大小
   */
  ST_RANKING_PROTECT_TOTAL_BATTLE_INDEX(11),

  /**
   * 总星星数
   */
  ST_STAR(12);

  public static final ProtoAdapter<EScoreType> ADAPTER = new ProtoAdapter_EScoreType();

  private final int value;

  EScoreType(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static EScoreType fromValue(int value) {
    switch (value) {
      case 0: return ST_UNKNOWN;
      case 1: return ST_RANKING;
      case 2: return ST_SUB_RANKING;
      case 3: return ST_SUB_RANKING_STAR;
      case 4: return ST_SUB_RANKING_TOTAL_STAR;
      case 5: return ST_RANKING_UPGRADE;
      case 6: return ST_RANKING_UPGRADE_STAR;
      case 7: return ST_RANKING_UPGRADE_TOTAL_STAR;
      case 8: return ST_BATTLE_INDEX_REAL;
      case 9: return ST_BATTLE_INDEX_TOTAL;
      case 10: return ST_BATTLE_RATING;
      case 11: return ST_RANKING_PROTECT_TOTAL_BATTLE_INDEX;
      case 12: return ST_STAR;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }

  public static final class Builder {
    public EScoreType build() {
      return ST_UNKNOWN;
    }
  }

  private static final class ProtoAdapter_EScoreType extends EnumAdapter<EScoreType> {
    ProtoAdapter_EScoreType() {
      super(EScoreType.class);
    }

    @Override
    protected EScoreType fromValue(int value) {
      return EScoreType.fromValue(value);
    }
  }
}
