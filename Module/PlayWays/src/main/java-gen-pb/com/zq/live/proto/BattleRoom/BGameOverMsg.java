// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: battle_room.proto
package com.zq.live.proto.BattleRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class BGameOverMsg extends Message<BGameOverMsg, BGameOverMsg.Builder> {
  public static final ProtoAdapter<BGameOverMsg> ADAPTER = new ProtoAdapter_BGameOverMsg();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_GAMEOVERTIMEMS = 0L;

  public static final EBGameOverReason DEFAULT_OVERREASON = EBGameOverReason.BOR_UNKNOWN;

  /**
   * 游戏结束的毫秒时间戳
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#SINT64"
  )
  private final Long gameOverTimeMs;

  /**
   * 游戏结束原因
   */
  @WireField(
      tag = 2,
      adapter = "com.zq.live.proto.BattleRoom.EBGameOverReason#ADAPTER"
  )
  private final EBGameOverReason overReason;

  public BGameOverMsg(Long gameOverTimeMs, EBGameOverReason overReason) {
    this(gameOverTimeMs, overReason, ByteString.EMPTY);
  }

  public BGameOverMsg(Long gameOverTimeMs, EBGameOverReason overReason, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.gameOverTimeMs = gameOverTimeMs;
    this.overReason = overReason;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.gameOverTimeMs = gameOverTimeMs;
    builder.overReason = overReason;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BGameOverMsg)) return false;
    BGameOverMsg o = (BGameOverMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(gameOverTimeMs, o.gameOverTimeMs)
        && Internal.equals(overReason, o.overReason);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (gameOverTimeMs != null ? gameOverTimeMs.hashCode() : 0);
      result = result * 37 + (overReason != null ? overReason.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (gameOverTimeMs != null) builder.append(", gameOverTimeMs=").append(gameOverTimeMs);
    if (overReason != null) builder.append(", overReason=").append(overReason);
    return builder.replace(0, 2, "BGameOverMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return BGameOverMsg.ADAPTER.encode(this);
  }

  public static final BGameOverMsg parseFrom(byte[] data) throws IOException {
    BGameOverMsg c = null;
       c = BGameOverMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 游戏结束的毫秒时间戳
   */
  public Long getGameOverTimeMs() {
    if(gameOverTimeMs==null){
        return DEFAULT_GAMEOVERTIMEMS;
    }
    return gameOverTimeMs;
  }

  /**
   * 游戏结束原因
   */
  public EBGameOverReason getOverReason() {
    if(overReason==null){
        return new EBGameOverReason.Builder().build();
    }
    return overReason;
  }

  /**
   * 游戏结束的毫秒时间戳
   */
  public boolean hasGameOverTimeMs() {
    return gameOverTimeMs!=null;
  }

  /**
   * 游戏结束原因
   */
  public boolean hasOverReason() {
    return overReason!=null;
  }

  public static final class Builder extends Message.Builder<BGameOverMsg, Builder> {
    private Long gameOverTimeMs;

    private EBGameOverReason overReason;

    public Builder() {
    }

    /**
     * 游戏结束的毫秒时间戳
     */
    public Builder setGameOverTimeMs(Long gameOverTimeMs) {
      this.gameOverTimeMs = gameOverTimeMs;
      return this;
    }

    /**
     * 游戏结束原因
     */
    public Builder setOverReason(EBGameOverReason overReason) {
      this.overReason = overReason;
      return this;
    }

    @Override
    public BGameOverMsg build() {
      return new BGameOverMsg(gameOverTimeMs, overReason, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_BGameOverMsg extends ProtoAdapter<BGameOverMsg> {
    public ProtoAdapter_BGameOverMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, BGameOverMsg.class);
    }

    @Override
    public int encodedSize(BGameOverMsg value) {
      return ProtoAdapter.SINT64.encodedSizeWithTag(1, value.gameOverTimeMs)
          + EBGameOverReason.ADAPTER.encodedSizeWithTag(2, value.overReason)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, BGameOverMsg value) throws IOException {
      ProtoAdapter.SINT64.encodeWithTag(writer, 1, value.gameOverTimeMs);
      EBGameOverReason.ADAPTER.encodeWithTag(writer, 2, value.overReason);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public BGameOverMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setGameOverTimeMs(ProtoAdapter.SINT64.decode(reader)); break;
          case 2: {
            try {
              builder.setOverReason(EBGameOverReason.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public BGameOverMsg redact(BGameOverMsg value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
