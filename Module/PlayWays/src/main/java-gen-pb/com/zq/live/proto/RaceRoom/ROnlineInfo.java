// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: race_room.proto
package com.zq.live.proto.RaceRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import com.zq.live.proto.Common.UserInfo;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ROnlineInfo extends Message<ROnlineInfo, ROnlineInfo.Builder> {
  public static final ProtoAdapter<ROnlineInfo> ADAPTER = new ProtoAdapter_ROnlineInfo();

  private static final long serialVersionUID = 0L;

  public static final Boolean DEFAULT_ISONLINE = false;

  public static final ERUserRole DEFAULT_ROLE = ERUserRole.ERUR_UNKNOWN;

  /**
   * 用户信息
   */
  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.Common.UserInfo#ADAPTER"
  )
  private final UserInfo user;

  /**
   * 是否在线
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  private final Boolean isOnline;

  /**
   * 用户角色
   */
  @WireField(
      tag = 3,
      adapter = "com.zq.live.proto.RaceRoom.ERUserRole#ADAPTER"
  )
  private final ERUserRole role;

  public ROnlineInfo(UserInfo user, Boolean isOnline, ERUserRole role) {
    this(user, isOnline, role, ByteString.EMPTY);
  }

  public ROnlineInfo(UserInfo user, Boolean isOnline, ERUserRole role, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.user = user;
    this.isOnline = isOnline;
    this.role = role;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.user = user;
    builder.isOnline = isOnline;
    builder.role = role;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ROnlineInfo)) return false;
    ROnlineInfo o = (ROnlineInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(user, o.user)
        && Internal.equals(isOnline, o.isOnline)
        && Internal.equals(role, o.role);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (user != null ? user.hashCode() : 0);
      result = result * 37 + (isOnline != null ? isOnline.hashCode() : 0);
      result = result * 37 + (role != null ? role.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (user != null) builder.append(", user=").append(user);
    if (isOnline != null) builder.append(", isOnline=").append(isOnline);
    if (role != null) builder.append(", role=").append(role);
    return builder.replace(0, 2, "ROnlineInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ROnlineInfo.ADAPTER.encode(this);
  }

  public static final ROnlineInfo parseFrom(byte[] data) throws IOException {
    ROnlineInfo c = null;
       c = ROnlineInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 用户信息
   */
  public UserInfo getUser() {
    if(user==null){
        return new UserInfo.Builder().build();
    }
    return user;
  }

  /**
   * 是否在线
   */
  public Boolean getIsOnline() {
    if(isOnline==null){
        return DEFAULT_ISONLINE;
    }
    return isOnline;
  }

  /**
   * 用户角色
   */
  public ERUserRole getRole() {
    if(role==null){
        return new ERUserRole.Builder().build();
    }
    return role;
  }

  /**
   * 用户信息
   */
  public boolean hasUser() {
    return user!=null;
  }

  /**
   * 是否在线
   */
  public boolean hasIsOnline() {
    return isOnline!=null;
  }

  /**
   * 用户角色
   */
  public boolean hasRole() {
    return role!=null;
  }

  public static final class Builder extends Message.Builder<ROnlineInfo, Builder> {
    private UserInfo user;

    private Boolean isOnline;

    private ERUserRole role;

    public Builder() {
    }

    /**
     * 用户信息
     */
    public Builder setUser(UserInfo user) {
      this.user = user;
      return this;
    }

    /**
     * 是否在线
     */
    public Builder setIsOnline(Boolean isOnline) {
      this.isOnline = isOnline;
      return this;
    }

    /**
     * 用户角色
     */
    public Builder setRole(ERUserRole role) {
      this.role = role;
      return this;
    }

    @Override
    public ROnlineInfo build() {
      return new ROnlineInfo(user, isOnline, role, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ROnlineInfo extends ProtoAdapter<ROnlineInfo> {
    public ProtoAdapter_ROnlineInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, ROnlineInfo.class);
    }

    @Override
    public int encodedSize(ROnlineInfo value) {
      return UserInfo.ADAPTER.encodedSizeWithTag(1, value.user)
          + ProtoAdapter.BOOL.encodedSizeWithTag(2, value.isOnline)
          + ERUserRole.ADAPTER.encodedSizeWithTag(3, value.role)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ROnlineInfo value) throws IOException {
      UserInfo.ADAPTER.encodeWithTag(writer, 1, value.user);
      ProtoAdapter.BOOL.encodeWithTag(writer, 2, value.isOnline);
      ERUserRole.ADAPTER.encodeWithTag(writer, 3, value.role);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ROnlineInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUser(UserInfo.ADAPTER.decode(reader)); break;
          case 2: builder.setIsOnline(ProtoAdapter.BOOL.decode(reader)); break;
          case 3: {
            try {
              builder.setRole(ERUserRole.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ROnlineInfo redact(ROnlineInfo value) {
      Builder builder = value.newBuilder();
      if (builder.user != null) builder.user = UserInfo.ADAPTER.redact(builder.user);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
