// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: race_room.proto
package com.zq.live.proto.RaceRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class RJoinActionMsg extends Message<RJoinActionMsg, RJoinActionMsg.Builder> {
  public static final ProtoAdapter<RJoinActionMsg> ADAPTER = new ProtoAdapter_RJoinActionMsg();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_GAMEID = 0;

  public static final Long DEFAULT_CREATETIMEMS = 0L;

  public static final String DEFAULT_AGORATOKEN = "";

  /**
   * 游戏ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer gameID;

  /**
   * 创建毫秒时间戳
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#SINT64"
  )
  private final Long createTimeMs;

  /**
   * 声网token
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String agoraToken;

  /**
   * 配置信息
   */
  @WireField(
      tag = 4,
      adapter = "com.zq.live.proto.RaceRoom.RGameConfig#ADAPTER"
  )
  private final RGameConfig config;

  public RJoinActionMsg(Integer gameID, Long createTimeMs, String agoraToken, RGameConfig config) {
    this(gameID, createTimeMs, agoraToken, config, ByteString.EMPTY);
  }

  public RJoinActionMsg(Integer gameID, Long createTimeMs, String agoraToken, RGameConfig config,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.gameID = gameID;
    this.createTimeMs = createTimeMs;
    this.agoraToken = agoraToken;
    this.config = config;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.gameID = gameID;
    builder.createTimeMs = createTimeMs;
    builder.agoraToken = agoraToken;
    builder.config = config;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RJoinActionMsg)) return false;
    RJoinActionMsg o = (RJoinActionMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(gameID, o.gameID)
        && Internal.equals(createTimeMs, o.createTimeMs)
        && Internal.equals(agoraToken, o.agoraToken)
        && Internal.equals(config, o.config);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (gameID != null ? gameID.hashCode() : 0);
      result = result * 37 + (createTimeMs != null ? createTimeMs.hashCode() : 0);
      result = result * 37 + (agoraToken != null ? agoraToken.hashCode() : 0);
      result = result * 37 + (config != null ? config.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (gameID != null) builder.append(", gameID=").append(gameID);
    if (createTimeMs != null) builder.append(", createTimeMs=").append(createTimeMs);
    if (agoraToken != null) builder.append(", agoraToken=").append(agoraToken);
    if (config != null) builder.append(", config=").append(config);
    return builder.replace(0, 2, "RJoinActionMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return RJoinActionMsg.ADAPTER.encode(this);
  }

  public static final RJoinActionMsg parseFrom(byte[] data) throws IOException {
    RJoinActionMsg c = null;
       c = RJoinActionMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 游戏ID
   */
  public Integer getGameID() {
    if(gameID==null){
        return DEFAULT_GAMEID;
    }
    return gameID;
  }

  /**
   * 创建毫秒时间戳
   */
  public Long getCreateTimeMs() {
    if(createTimeMs==null){
        return DEFAULT_CREATETIMEMS;
    }
    return createTimeMs;
  }

  /**
   * 声网token
   */
  public String getAgoraToken() {
    if(agoraToken==null){
        return DEFAULT_AGORATOKEN;
    }
    return agoraToken;
  }

  /**
   * 配置信息
   */
  public RGameConfig getConfig() {
    if(config==null){
        return new RGameConfig.Builder().build();
    }
    return config;
  }

  /**
   * 游戏ID
   */
  public boolean hasGameID() {
    return gameID!=null;
  }

  /**
   * 创建毫秒时间戳
   */
  public boolean hasCreateTimeMs() {
    return createTimeMs!=null;
  }

  /**
   * 声网token
   */
  public boolean hasAgoraToken() {
    return agoraToken!=null;
  }

  /**
   * 配置信息
   */
  public boolean hasConfig() {
    return config!=null;
  }

  public static final class Builder extends Message.Builder<RJoinActionMsg, Builder> {
    private Integer gameID;

    private Long createTimeMs;

    private String agoraToken;

    private RGameConfig config;

    public Builder() {
    }

    /**
     * 游戏ID
     */
    public Builder setGameID(Integer gameID) {
      this.gameID = gameID;
      return this;
    }

    /**
     * 创建毫秒时间戳
     */
    public Builder setCreateTimeMs(Long createTimeMs) {
      this.createTimeMs = createTimeMs;
      return this;
    }

    /**
     * 声网token
     */
    public Builder setAgoraToken(String agoraToken) {
      this.agoraToken = agoraToken;
      return this;
    }

    /**
     * 配置信息
     */
    public Builder setConfig(RGameConfig config) {
      this.config = config;
      return this;
    }

    @Override
    public RJoinActionMsg build() {
      return new RJoinActionMsg(gameID, createTimeMs, agoraToken, config, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_RJoinActionMsg extends ProtoAdapter<RJoinActionMsg> {
    public ProtoAdapter_RJoinActionMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, RJoinActionMsg.class);
    }

    @Override
    public int encodedSize(RJoinActionMsg value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.gameID)
          + ProtoAdapter.SINT64.encodedSizeWithTag(2, value.createTimeMs)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.agoraToken)
          + RGameConfig.ADAPTER.encodedSizeWithTag(4, value.config)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, RJoinActionMsg value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.gameID);
      ProtoAdapter.SINT64.encodeWithTag(writer, 2, value.createTimeMs);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.agoraToken);
      RGameConfig.ADAPTER.encodeWithTag(writer, 4, value.config);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public RJoinActionMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setGameID(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setCreateTimeMs(ProtoAdapter.SINT64.decode(reader)); break;
          case 3: builder.setAgoraToken(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setConfig(RGameConfig.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public RJoinActionMsg redact(RJoinActionMsg value) {
      Builder builder = value.newBuilder();
      if (builder.config != null) builder.config = RGameConfig.ADAPTER.redact(builder.config);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
