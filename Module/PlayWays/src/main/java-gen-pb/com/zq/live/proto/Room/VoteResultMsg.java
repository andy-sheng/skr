// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Room.proto
package com.zq.live.proto.Room;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 投票结果
 */
public final class VoteResultMsg extends Message<VoteResultMsg, VoteResultMsg.Builder> {
  public static final ProtoAdapter<VoteResultMsg> ADAPTER = new ProtoAdapter_VoteResultMsg();

  private static final long serialVersionUID = 0L;

  /**
   * 投票打分信息
   */
  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.Room.VoteInfo#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<VoteInfo> voteInfo;

  /**
   * 分值信息
   */
  @WireField(
      tag = 2,
      adapter = "com.zq.live.proto.Room.UserScoreRecord#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<UserScoreRecord> userScoreRecord;

  public VoteResultMsg(List<VoteInfo> voteInfo, List<UserScoreRecord> userScoreRecord) {
    this(voteInfo, userScoreRecord, ByteString.EMPTY);
  }

  public VoteResultMsg(List<VoteInfo> voteInfo, List<UserScoreRecord> userScoreRecord,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.voteInfo = Internal.immutableCopyOf("voteInfo", voteInfo);
    this.userScoreRecord = Internal.immutableCopyOf("userScoreRecord", userScoreRecord);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.voteInfo = Internal.copyOf("voteInfo", voteInfo);
    builder.userScoreRecord = Internal.copyOf("userScoreRecord", userScoreRecord);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof VoteResultMsg)) return false;
    VoteResultMsg o = (VoteResultMsg) other;
    return unknownFields().equals(o.unknownFields())
        && voteInfo.equals(o.voteInfo)
        && userScoreRecord.equals(o.userScoreRecord);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + voteInfo.hashCode();
      result = result * 37 + userScoreRecord.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!voteInfo.isEmpty()) builder.append(", voteInfo=").append(voteInfo);
    if (!userScoreRecord.isEmpty()) builder.append(", userScoreRecord=").append(userScoreRecord);
    return builder.replace(0, 2, "VoteResultMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return VoteResultMsg.ADAPTER.encode(this);
  }

  public static final VoteResultMsg parseFrom(byte[] data) throws IOException {
    VoteResultMsg c = null;
       c = VoteResultMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 投票打分信息
   */
  public List<VoteInfo> getVoteInfoList() {
    if(voteInfo==null){
        return new java.util.ArrayList<VoteInfo>();
    }
    return voteInfo;
  }

  /**
   * 分值信息
   */
  public List<UserScoreRecord> getUserScoreRecordList() {
    if(userScoreRecord==null){
        return new java.util.ArrayList<UserScoreRecord>();
    }
    return userScoreRecord;
  }

  /**
   * 投票打分信息
   */
  public boolean hasVoteInfoList() {
    return voteInfo!=null;
  }

  /**
   * 分值信息
   */
  public boolean hasUserScoreRecordList() {
    return userScoreRecord!=null;
  }

  public static final class Builder extends Message.Builder<VoteResultMsg, Builder> {
    public List<VoteInfo> voteInfo;

    public List<UserScoreRecord> userScoreRecord;

    public Builder() {
      voteInfo = Internal.newMutableList();
      userScoreRecord = Internal.newMutableList();
    }

    /**
     * 投票打分信息
     */
    public Builder addAllVoteInfo(List<VoteInfo> voteInfo) {
      Internal.checkElementsNotNull(voteInfo);
      this.voteInfo = voteInfo;
      return this;
    }

    /**
     * 分值信息
     */
    public Builder addAllUserScoreRecord(List<UserScoreRecord> userScoreRecord) {
      Internal.checkElementsNotNull(userScoreRecord);
      this.userScoreRecord = userScoreRecord;
      return this;
    }

    @Override
    public VoteResultMsg build() {
      return new VoteResultMsg(voteInfo, userScoreRecord, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_VoteResultMsg extends ProtoAdapter<VoteResultMsg> {
    public ProtoAdapter_VoteResultMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, VoteResultMsg.class);
    }

    @Override
    public int encodedSize(VoteResultMsg value) {
      return VoteInfo.ADAPTER.asRepeated().encodedSizeWithTag(1, value.voteInfo)
          + UserScoreRecord.ADAPTER.asRepeated().encodedSizeWithTag(2, value.userScoreRecord)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, VoteResultMsg value) throws IOException {
      VoteInfo.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.voteInfo);
      UserScoreRecord.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.userScoreRecord);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public VoteResultMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.voteInfo.add(VoteInfo.ADAPTER.decode(reader)); break;
          case 2: builder.userScoreRecord.add(UserScoreRecord.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public VoteResultMsg redact(VoteResultMsg value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.voteInfo, VoteInfo.ADAPTER);
      Internal.redactElements(builder.userScoreRecord, UserScoreRecord.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
