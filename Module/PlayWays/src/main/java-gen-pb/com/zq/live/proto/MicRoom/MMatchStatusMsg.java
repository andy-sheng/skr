// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: mic_room.proto
package com.zq.live.proto.MicRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class MMatchStatusMsg extends Message<MMatchStatusMsg, MMatchStatusMsg.Builder> {
  public static final ProtoAdapter<MMatchStatusMsg> ADAPTER = new ProtoAdapter_MMatchStatusMsg();

  private static final long serialVersionUID = 0L;

  public static final ERoomMatchStatus DEFAULT_MATCHSTATUS = ERoomMatchStatus.EMMS_UNKNOWN;

  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.MicRoom.ERoomMatchStatus#ADAPTER"
  )
  private final ERoomMatchStatus matchStatus;

  public MMatchStatusMsg(ERoomMatchStatus matchStatus) {
    this(matchStatus, ByteString.EMPTY);
  }

  public MMatchStatusMsg(ERoomMatchStatus matchStatus, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.matchStatus = matchStatus;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.matchStatus = matchStatus;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MMatchStatusMsg)) return false;
    MMatchStatusMsg o = (MMatchStatusMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(matchStatus, o.matchStatus);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (matchStatus != null ? matchStatus.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (matchStatus != null) builder.append(", matchStatus=").append(matchStatus);
    return builder.replace(0, 2, "MMatchStatusMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return MMatchStatusMsg.ADAPTER.encode(this);
  }

  public static final MMatchStatusMsg parseFrom(byte[] data) throws IOException {
    MMatchStatusMsg c = null;
       c = MMatchStatusMsg.ADAPTER.decode(data);
    return c;
  }

  public ERoomMatchStatus getMatchStatus() {
    if(matchStatus==null){
        return new ERoomMatchStatus.Builder().build();
    }
    return matchStatus;
  }

  public boolean hasMatchStatus() {
    return matchStatus!=null;
  }

  public static final class Builder extends Message.Builder<MMatchStatusMsg, Builder> {
    private ERoomMatchStatus matchStatus;

    public Builder() {
    }

    public Builder setMatchStatus(ERoomMatchStatus matchStatus) {
      this.matchStatus = matchStatus;
      return this;
    }

    @Override
    public MMatchStatusMsg build() {
      return new MMatchStatusMsg(matchStatus, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_MMatchStatusMsg extends ProtoAdapter<MMatchStatusMsg> {
    public ProtoAdapter_MMatchStatusMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, MMatchStatusMsg.class);
    }

    @Override
    public int encodedSize(MMatchStatusMsg value) {
      return ERoomMatchStatus.ADAPTER.encodedSizeWithTag(1, value.matchStatus)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, MMatchStatusMsg value) throws IOException {
      ERoomMatchStatus.ADAPTER.encodeWithTag(writer, 1, value.matchStatus);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public MMatchStatusMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.setMatchStatus(ERoomMatchStatus.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public MMatchStatusMsg redact(MMatchStatusMsg value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
