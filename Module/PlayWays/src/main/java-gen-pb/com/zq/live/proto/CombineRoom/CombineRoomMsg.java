// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CombineRoom.proto
package com.zq.live.proto.CombineRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * java -jar -Dfile.encoding=UTF-8 ./proto/wire-compiler-2.3.0-SNAPSHOT-jar-with-dependencies.jar \
 * --proto_path=./proto --java_out=./Module/PlayWays/src/main/java-gen-pb/ CombineRoom.proto
 * 联合[双人]房信令消息
 */
public final class CombineRoomMsg extends Message<CombineRoomMsg, CombineRoomMsg.Builder> {
  public static final ProtoAdapter<CombineRoomMsg> ADAPTER = new ProtoAdapter_CombineRoomMsg();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_TIMEMS = 0L;

  public static final ECombineRoomMsgType DEFAULT_MSGTYPE = ECombineRoomMsgType.DRM_UNKNOWN;

  public static final Integer DEFAULT_ROOMID = 0;

  /**
   * 房间消息产生时间，单位毫秒
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#SINT64"
  )
  private final Long timeMs;

  /**
   * 消息类型
   */
  @WireField(
      tag = 2,
      adapter = "com.zq.live.proto.CombineRoom.ECombineRoomMsgType#ADAPTER"
  )
  private final ECombineRoomMsgType msgType;

  /**
   * 房间ID
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer roomID;

  @WireField(
      tag = 10,
      adapter = "com.zq.live.proto.CombineRoom.PickMsg#ADAPTER"
  )
  private final PickMsg pickMsg;

  /**
   * 通过匹配开始双人房
   */
  @WireField(
      tag = 11,
      adapter = "com.zq.live.proto.CombineRoom.StartCombineRoomByMatchMsg#ADAPTER"
  )
  private final StartCombineRoomByMatchMsg startCombineRoomByMatchMsg;

  /**
   * 结束双人房
   */
  @WireField(
      tag = 12,
      adapter = "com.zq.live.proto.CombineRoom.EndCombineRoomMsg#ADAPTER"
  )
  private final EndCombineRoomMsg endCombineRoomMsg;

  /**
   * 解锁用户信息
   */
  @WireField(
      tag = 13,
      adapter = "com.zq.live.proto.CombineRoom.UnlockUserInfoMsg#ADAPTER"
  )
  private final UnlockUserInfoMsg unlockUserInfoMsg;

  /**
   * 加载歌曲信息
   */
  @WireField(
      tag = 14,
      adapter = "com.zq.live.proto.CombineRoom.LoadMusicInfoMsg#ADAPTER"
  )
  private final LoadMusicInfoMsg loadMusicInfoMsg;

  /**
   * 同步状态
   */
  @WireField(
      tag = 15,
      adapter = "com.zq.live.proto.CombineRoom.CombineRoomSyncStatusMsg#ADAPTER"
  )
  private final CombineRoomSyncStatusMsg syncStatusMsg;

  public CombineRoomMsg(Long timeMs, ECombineRoomMsgType msgType, Integer roomID, PickMsg pickMsg,
      StartCombineRoomByMatchMsg startCombineRoomByMatchMsg, EndCombineRoomMsg endCombineRoomMsg,
      UnlockUserInfoMsg unlockUserInfoMsg, LoadMusicInfoMsg loadMusicInfoMsg,
      CombineRoomSyncStatusMsg syncStatusMsg) {
    this(timeMs, msgType, roomID, pickMsg, startCombineRoomByMatchMsg, endCombineRoomMsg, unlockUserInfoMsg, loadMusicInfoMsg, syncStatusMsg, ByteString.EMPTY);
  }

  public CombineRoomMsg(Long timeMs, ECombineRoomMsgType msgType, Integer roomID, PickMsg pickMsg,
      StartCombineRoomByMatchMsg startCombineRoomByMatchMsg, EndCombineRoomMsg endCombineRoomMsg,
      UnlockUserInfoMsg unlockUserInfoMsg, LoadMusicInfoMsg loadMusicInfoMsg,
      CombineRoomSyncStatusMsg syncStatusMsg, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.timeMs = timeMs;
    this.msgType = msgType;
    this.roomID = roomID;
    this.pickMsg = pickMsg;
    this.startCombineRoomByMatchMsg = startCombineRoomByMatchMsg;
    this.endCombineRoomMsg = endCombineRoomMsg;
    this.unlockUserInfoMsg = unlockUserInfoMsg;
    this.loadMusicInfoMsg = loadMusicInfoMsg;
    this.syncStatusMsg = syncStatusMsg;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.timeMs = timeMs;
    builder.msgType = msgType;
    builder.roomID = roomID;
    builder.pickMsg = pickMsg;
    builder.startCombineRoomByMatchMsg = startCombineRoomByMatchMsg;
    builder.endCombineRoomMsg = endCombineRoomMsg;
    builder.unlockUserInfoMsg = unlockUserInfoMsg;
    builder.loadMusicInfoMsg = loadMusicInfoMsg;
    builder.syncStatusMsg = syncStatusMsg;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CombineRoomMsg)) return false;
    CombineRoomMsg o = (CombineRoomMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(timeMs, o.timeMs)
        && Internal.equals(msgType, o.msgType)
        && Internal.equals(roomID, o.roomID)
        && Internal.equals(pickMsg, o.pickMsg)
        && Internal.equals(startCombineRoomByMatchMsg, o.startCombineRoomByMatchMsg)
        && Internal.equals(endCombineRoomMsg, o.endCombineRoomMsg)
        && Internal.equals(unlockUserInfoMsg, o.unlockUserInfoMsg)
        && Internal.equals(loadMusicInfoMsg, o.loadMusicInfoMsg)
        && Internal.equals(syncStatusMsg, o.syncStatusMsg);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (timeMs != null ? timeMs.hashCode() : 0);
      result = result * 37 + (msgType != null ? msgType.hashCode() : 0);
      result = result * 37 + (roomID != null ? roomID.hashCode() : 0);
      result = result * 37 + (pickMsg != null ? pickMsg.hashCode() : 0);
      result = result * 37 + (startCombineRoomByMatchMsg != null ? startCombineRoomByMatchMsg.hashCode() : 0);
      result = result * 37 + (endCombineRoomMsg != null ? endCombineRoomMsg.hashCode() : 0);
      result = result * 37 + (unlockUserInfoMsg != null ? unlockUserInfoMsg.hashCode() : 0);
      result = result * 37 + (loadMusicInfoMsg != null ? loadMusicInfoMsg.hashCode() : 0);
      result = result * 37 + (syncStatusMsg != null ? syncStatusMsg.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (timeMs != null) builder.append(", timeMs=").append(timeMs);
    if (msgType != null) builder.append(", msgType=").append(msgType);
    if (roomID != null) builder.append(", roomID=").append(roomID);
    if (pickMsg != null) builder.append(", pickMsg=").append(pickMsg);
    if (startCombineRoomByMatchMsg != null) builder.append(", startCombineRoomByMatchMsg=").append(startCombineRoomByMatchMsg);
    if (endCombineRoomMsg != null) builder.append(", endCombineRoomMsg=").append(endCombineRoomMsg);
    if (unlockUserInfoMsg != null) builder.append(", unlockUserInfoMsg=").append(unlockUserInfoMsg);
    if (loadMusicInfoMsg != null) builder.append(", loadMusicInfoMsg=").append(loadMusicInfoMsg);
    if (syncStatusMsg != null) builder.append(", syncStatusMsg=").append(syncStatusMsg);
    return builder.replace(0, 2, "CombineRoomMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return CombineRoomMsg.ADAPTER.encode(this);
  }

  public static final CombineRoomMsg parseFrom(byte[] data) throws IOException {
    CombineRoomMsg c = null;
       c = CombineRoomMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 房间消息产生时间，单位毫秒
   */
  public Long getTimeMs() {
    if(timeMs==null){
        return DEFAULT_TIMEMS;
    }
    return timeMs;
  }

  /**
   * 消息类型
   */
  public ECombineRoomMsgType getMsgType() {
    if(msgType==null){
        return new ECombineRoomMsgType.Builder().build();
    }
    return msgType;
  }

  /**
   * 房间ID
   */
  public Integer getRoomID() {
    if(roomID==null){
        return DEFAULT_ROOMID;
    }
    return roomID;
  }

  public PickMsg getPickMsg() {
    if(pickMsg==null){
        return new PickMsg.Builder().build();
    }
    return pickMsg;
  }

  /**
   * 通过匹配开始双人房
   */
  public StartCombineRoomByMatchMsg getStartCombineRoomByMatchMsg() {
    if(startCombineRoomByMatchMsg==null){
        return new StartCombineRoomByMatchMsg.Builder().build();
    }
    return startCombineRoomByMatchMsg;
  }

  /**
   * 结束双人房
   */
  public EndCombineRoomMsg getEndCombineRoomMsg() {
    if(endCombineRoomMsg==null){
        return new EndCombineRoomMsg.Builder().build();
    }
    return endCombineRoomMsg;
  }

  /**
   * 解锁用户信息
   */
  public UnlockUserInfoMsg getUnlockUserInfoMsg() {
    if(unlockUserInfoMsg==null){
        return new UnlockUserInfoMsg.Builder().build();
    }
    return unlockUserInfoMsg;
  }

  /**
   * 加载歌曲信息
   */
  public LoadMusicInfoMsg getLoadMusicInfoMsg() {
    if(loadMusicInfoMsg==null){
        return new LoadMusicInfoMsg.Builder().build();
    }
    return loadMusicInfoMsg;
  }

  /**
   * 同步状态
   */
  public CombineRoomSyncStatusMsg getSyncStatusMsg() {
    if(syncStatusMsg==null){
        return new CombineRoomSyncStatusMsg.Builder().build();
    }
    return syncStatusMsg;
  }

  /**
   * 房间消息产生时间，单位毫秒
   */
  public boolean hasTimeMs() {
    return timeMs!=null;
  }

  /**
   * 消息类型
   */
  public boolean hasMsgType() {
    return msgType!=null;
  }

  /**
   * 房间ID
   */
  public boolean hasRoomID() {
    return roomID!=null;
  }

  public boolean hasPickMsg() {
    return pickMsg!=null;
  }

  /**
   * 通过匹配开始双人房
   */
  public boolean hasStartCombineRoomByMatchMsg() {
    return startCombineRoomByMatchMsg!=null;
  }

  /**
   * 结束双人房
   */
  public boolean hasEndCombineRoomMsg() {
    return endCombineRoomMsg!=null;
  }

  /**
   * 解锁用户信息
   */
  public boolean hasUnlockUserInfoMsg() {
    return unlockUserInfoMsg!=null;
  }

  /**
   * 加载歌曲信息
   */
  public boolean hasLoadMusicInfoMsg() {
    return loadMusicInfoMsg!=null;
  }

  /**
   * 同步状态
   */
  public boolean hasSyncStatusMsg() {
    return syncStatusMsg!=null;
  }

  public static final class Builder extends Message.Builder<CombineRoomMsg, Builder> {
    private Long timeMs;

    private ECombineRoomMsgType msgType;

    private Integer roomID;

    private PickMsg pickMsg;

    private StartCombineRoomByMatchMsg startCombineRoomByMatchMsg;

    private EndCombineRoomMsg endCombineRoomMsg;

    private UnlockUserInfoMsg unlockUserInfoMsg;

    private LoadMusicInfoMsg loadMusicInfoMsg;

    private CombineRoomSyncStatusMsg syncStatusMsg;

    public Builder() {
    }

    /**
     * 房间消息产生时间，单位毫秒
     */
    public Builder setTimeMs(Long timeMs) {
      this.timeMs = timeMs;
      return this;
    }

    /**
     * 消息类型
     */
    public Builder setMsgType(ECombineRoomMsgType msgType) {
      this.msgType = msgType;
      return this;
    }

    /**
     * 房间ID
     */
    public Builder setRoomID(Integer roomID) {
      this.roomID = roomID;
      return this;
    }

    public Builder setPickMsg(PickMsg pickMsg) {
      this.pickMsg = pickMsg;
      return this;
    }

    /**
     * 通过匹配开始双人房
     */
    public Builder setStartCombineRoomByMatchMsg(
        StartCombineRoomByMatchMsg startCombineRoomByMatchMsg) {
      this.startCombineRoomByMatchMsg = startCombineRoomByMatchMsg;
      return this;
    }

    /**
     * 结束双人房
     */
    public Builder setEndCombineRoomMsg(EndCombineRoomMsg endCombineRoomMsg) {
      this.endCombineRoomMsg = endCombineRoomMsg;
      return this;
    }

    /**
     * 解锁用户信息
     */
    public Builder setUnlockUserInfoMsg(UnlockUserInfoMsg unlockUserInfoMsg) {
      this.unlockUserInfoMsg = unlockUserInfoMsg;
      return this;
    }

    /**
     * 加载歌曲信息
     */
    public Builder setLoadMusicInfoMsg(LoadMusicInfoMsg loadMusicInfoMsg) {
      this.loadMusicInfoMsg = loadMusicInfoMsg;
      return this;
    }

    /**
     * 同步状态
     */
    public Builder setSyncStatusMsg(CombineRoomSyncStatusMsg syncStatusMsg) {
      this.syncStatusMsg = syncStatusMsg;
      return this;
    }

    @Override
    public CombineRoomMsg build() {
      return new CombineRoomMsg(timeMs, msgType, roomID, pickMsg, startCombineRoomByMatchMsg, endCombineRoomMsg, unlockUserInfoMsg, loadMusicInfoMsg, syncStatusMsg, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_CombineRoomMsg extends ProtoAdapter<CombineRoomMsg> {
    public ProtoAdapter_CombineRoomMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, CombineRoomMsg.class);
    }

    @Override
    public int encodedSize(CombineRoomMsg value) {
      return ProtoAdapter.SINT64.encodedSizeWithTag(1, value.timeMs)
          + ECombineRoomMsgType.ADAPTER.encodedSizeWithTag(2, value.msgType)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.roomID)
          + PickMsg.ADAPTER.encodedSizeWithTag(10, value.pickMsg)
          + StartCombineRoomByMatchMsg.ADAPTER.encodedSizeWithTag(11, value.startCombineRoomByMatchMsg)
          + EndCombineRoomMsg.ADAPTER.encodedSizeWithTag(12, value.endCombineRoomMsg)
          + UnlockUserInfoMsg.ADAPTER.encodedSizeWithTag(13, value.unlockUserInfoMsg)
          + LoadMusicInfoMsg.ADAPTER.encodedSizeWithTag(14, value.loadMusicInfoMsg)
          + CombineRoomSyncStatusMsg.ADAPTER.encodedSizeWithTag(15, value.syncStatusMsg)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, CombineRoomMsg value) throws IOException {
      ProtoAdapter.SINT64.encodeWithTag(writer, 1, value.timeMs);
      ECombineRoomMsgType.ADAPTER.encodeWithTag(writer, 2, value.msgType);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.roomID);
      PickMsg.ADAPTER.encodeWithTag(writer, 10, value.pickMsg);
      StartCombineRoomByMatchMsg.ADAPTER.encodeWithTag(writer, 11, value.startCombineRoomByMatchMsg);
      EndCombineRoomMsg.ADAPTER.encodeWithTag(writer, 12, value.endCombineRoomMsg);
      UnlockUserInfoMsg.ADAPTER.encodeWithTag(writer, 13, value.unlockUserInfoMsg);
      LoadMusicInfoMsg.ADAPTER.encodeWithTag(writer, 14, value.loadMusicInfoMsg);
      CombineRoomSyncStatusMsg.ADAPTER.encodeWithTag(writer, 15, value.syncStatusMsg);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public CombineRoomMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setTimeMs(ProtoAdapter.SINT64.decode(reader)); break;
          case 2: {
            try {
              builder.setMsgType(ECombineRoomMsgType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 3: builder.setRoomID(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.setPickMsg(PickMsg.ADAPTER.decode(reader)); break;
          case 11: builder.setStartCombineRoomByMatchMsg(StartCombineRoomByMatchMsg.ADAPTER.decode(reader)); break;
          case 12: builder.setEndCombineRoomMsg(EndCombineRoomMsg.ADAPTER.decode(reader)); break;
          case 13: builder.setUnlockUserInfoMsg(UnlockUserInfoMsg.ADAPTER.decode(reader)); break;
          case 14: builder.setLoadMusicInfoMsg(LoadMusicInfoMsg.ADAPTER.decode(reader)); break;
          case 15: builder.setSyncStatusMsg(CombineRoomSyncStatusMsg.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public CombineRoomMsg redact(CombineRoomMsg value) {
      Builder builder = value.newBuilder();
      if (builder.pickMsg != null) builder.pickMsg = PickMsg.ADAPTER.redact(builder.pickMsg);
      if (builder.startCombineRoomByMatchMsg != null) builder.startCombineRoomByMatchMsg = StartCombineRoomByMatchMsg.ADAPTER.redact(builder.startCombineRoomByMatchMsg);
      if (builder.endCombineRoomMsg != null) builder.endCombineRoomMsg = EndCombineRoomMsg.ADAPTER.redact(builder.endCombineRoomMsg);
      if (builder.unlockUserInfoMsg != null) builder.unlockUserInfoMsg = UnlockUserInfoMsg.ADAPTER.redact(builder.unlockUserInfoMsg);
      if (builder.loadMusicInfoMsg != null) builder.loadMusicInfoMsg = LoadMusicInfoMsg.ADAPTER.redact(builder.loadMusicInfoMsg);
      if (builder.syncStatusMsg != null) builder.syncStatusMsg = CombineRoomSyncStatusMsg.ADAPTER.redact(builder.syncStatusMsg);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
