// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: mic_room.proto
package com.zq.live.proto.MicRoom;

import com.squareup.wire.EnumAdapter;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

public enum EMicRoomMsgType implements WireEnum {
  /**
   * 未知消息
   */
  RMT_UNKNOWN(0),

  /**
   * 加入游戏指令消息
   */
  RMT_JOIN_ACTION(100),

  /**
   * 加入游戏通知消息
   */
  RMT_JOIN_NOTICE(101),

  /**
   * 退出游戏
   */
  RMT_EXIT_GAME(102),

  /**
   * 爆灯通知
   */
  RMT_B_LIGHT(103),

  /**
   * 获得抢唱的结果
   */
  RMT_GET_SING(104),

  /**
   * 同步状态
   */
  RMT_SYNC_STATUS(105),

  /**
   * 主轮次or子轮次结束
   */
  RMT_ROUND_OVER(106),

  /**
   * 增加歌曲（点歌）
   */
  RMT_ADD_MUSIC(107),

  /**
   * 删除歌曲
   */
  RMT_DEL_MUSIC(108),

  /**
   * 置顶歌曲
   */
  RMT_UP_MUSIC(109),

  /**
   * 请求合唱/PK
   */
  RMT_REQ_ADD_MUSIC(110),

  /**
   * 修改房间名字
   */
  RMT_CHANGE_ROOM_NAME(111),

  /**
   * 修改房间等级限制
   */
  RMT_CHANGE_ROOM_LEVEL_LIMIT(112),

  /**
   * 踢人
   */
  RMT_KICKOUT_USER(113),

  /**
   * 修改房主
   */
  RMT_CHANGE_ROOM_OWNER(114),

  /**
   * RMT_CLOSE_POSITION          = 115; //关闭房间位置
   * RMT_OPEN_POSITION           = 116; //打开房间位置
   * 房间匹配开关
   */
  RMT_MATCH_STATUS(117);

  public static final ProtoAdapter<EMicRoomMsgType> ADAPTER = new ProtoAdapter_EMicRoomMsgType();

  private final int value;

  EMicRoomMsgType(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static EMicRoomMsgType fromValue(int value) {
    switch (value) {
      case 0: return RMT_UNKNOWN;
      case 100: return RMT_JOIN_ACTION;
      case 101: return RMT_JOIN_NOTICE;
      case 102: return RMT_EXIT_GAME;
      case 103: return RMT_B_LIGHT;
      case 104: return RMT_GET_SING;
      case 105: return RMT_SYNC_STATUS;
      case 106: return RMT_ROUND_OVER;
      case 107: return RMT_ADD_MUSIC;
      case 108: return RMT_DEL_MUSIC;
      case 109: return RMT_UP_MUSIC;
      case 110: return RMT_REQ_ADD_MUSIC;
      case 111: return RMT_CHANGE_ROOM_NAME;
      case 112: return RMT_CHANGE_ROOM_LEVEL_LIMIT;
      case 113: return RMT_KICKOUT_USER;
      case 114: return RMT_CHANGE_ROOM_OWNER;
      case 117: return RMT_MATCH_STATUS;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }

  public static final class Builder {
    public EMicRoomMsgType build() {
      return RMT_UNKNOWN;
    }
  }

  private static final class ProtoAdapter_EMicRoomMsgType extends EnumAdapter<EMicRoomMsgType> {
    ProtoAdapter_EMicRoomMsgType() {
      super(EMicRoomMsgType.class);
    }

    @Override
    protected EMicRoomMsgType fromValue(int value) {
      return EMicRoomMsgType.fromValue(value);
    }
  }
}
