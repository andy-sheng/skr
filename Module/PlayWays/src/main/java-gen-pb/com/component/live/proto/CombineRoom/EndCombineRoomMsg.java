// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CombineRoom.proto
package com.component.live.proto.CombineRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class EndCombineRoomMsg extends Message<EndCombineRoomMsg, EndCombineRoomMsg.Builder> {
  public static final ProtoAdapter<EndCombineRoomMsg> ADAPTER = new ProtoAdapter_EndCombineRoomMsg();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_ROOMID = 0;

  public static final ECombineRoomCloseReason DEFAULT_REASON = ECombineRoomCloseReason.DRCR_UNKNOWN;

  public static final Integer DEFAULT_EXITUSERID = 0;

  public static final Integer DEFAULT_NORESPONSEUSERID = 0;

  /**
   * 房间ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer roomID;

  /**
   * 关闭原因
   */
  @WireField(
      tag = 2,
      adapter = "com.zq.live.proto.CombineRoom.ECombineRoomCloseReason#ADAPTER"
  )
  private final ECombineRoomCloseReason reason;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer exitUserID;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer noResponseUserID;

  public EndCombineRoomMsg(Integer roomID, ECombineRoomCloseReason reason, Integer exitUserID,
      Integer noResponseUserID) {
    this(roomID, reason, exitUserID, noResponseUserID, ByteString.EMPTY);
  }

  public EndCombineRoomMsg(Integer roomID, ECombineRoomCloseReason reason, Integer exitUserID,
      Integer noResponseUserID, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.roomID = roomID;
    this.reason = reason;
    this.exitUserID = exitUserID;
    this.noResponseUserID = noResponseUserID;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.roomID = roomID;
    builder.reason = reason;
    builder.exitUserID = exitUserID;
    builder.noResponseUserID = noResponseUserID;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof EndCombineRoomMsg)) return false;
    EndCombineRoomMsg o = (EndCombineRoomMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(roomID, o.roomID)
        && Internal.equals(reason, o.reason)
        && Internal.equals(exitUserID, o.exitUserID)
        && Internal.equals(noResponseUserID, o.noResponseUserID);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (roomID != null ? roomID.hashCode() : 0);
      result = result * 37 + (reason != null ? reason.hashCode() : 0);
      result = result * 37 + (exitUserID != null ? exitUserID.hashCode() : 0);
      result = result * 37 + (noResponseUserID != null ? noResponseUserID.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (roomID != null) builder.append(", roomID=").append(roomID);
    if (reason != null) builder.append(", reason=").append(reason);
    if (exitUserID != null) builder.append(", exitUserID=").append(exitUserID);
    if (noResponseUserID != null) builder.append(", noResponseUserID=").append(noResponseUserID);
    return builder.replace(0, 2, "EndCombineRoomMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return EndCombineRoomMsg.ADAPTER.encode(this);
  }

  public static final EndCombineRoomMsg parseFrom(byte[] data) throws IOException {
    EndCombineRoomMsg c = null;
       c = EndCombineRoomMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 房间ID
   */
  public Integer getRoomID() {
    if(roomID==null){
        return DEFAULT_ROOMID;
    }
    return roomID;
  }

  /**
   * 关闭原因
   */
  public ECombineRoomCloseReason getReason() {
    if(reason==null){
        return new ECombineRoomCloseReason.Builder().build();
    }
    return reason;
  }

  public Integer getExitUserID() {
    if(exitUserID==null){
        return DEFAULT_EXITUSERID;
    }
    return exitUserID;
  }

  public Integer getNoResponseUserID() {
    if(noResponseUserID==null){
        return DEFAULT_NORESPONSEUSERID;
    }
    return noResponseUserID;
  }

  /**
   * 房间ID
   */
  public boolean hasRoomID() {
    return roomID!=null;
  }

  /**
   * 关闭原因
   */
  public boolean hasReason() {
    return reason!=null;
  }

  public boolean hasExitUserID() {
    return exitUserID!=null;
  }

  public boolean hasNoResponseUserID() {
    return noResponseUserID!=null;
  }

  public static final class Builder extends Message.Builder<EndCombineRoomMsg, Builder> {
    private Integer roomID;

    private ECombineRoomCloseReason reason;

    private Integer exitUserID;

    private Integer noResponseUserID;

    public Builder() {
    }

    /**
     * 房间ID
     */
    public Builder setRoomID(Integer roomID) {
      this.roomID = roomID;
      return this;
    }

    /**
     * 关闭原因
     */
    public Builder setReason(ECombineRoomCloseReason reason) {
      this.reason = reason;
      return this;
    }

    public Builder setExitUserID(Integer exitUserID) {
      this.exitUserID = exitUserID;
      return this;
    }

    public Builder setNoResponseUserID(Integer noResponseUserID) {
      this.noResponseUserID = noResponseUserID;
      return this;
    }

    @Override
    public EndCombineRoomMsg build() {
      return new EndCombineRoomMsg(roomID, reason, exitUserID, noResponseUserID, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_EndCombineRoomMsg extends ProtoAdapter<EndCombineRoomMsg> {
    public ProtoAdapter_EndCombineRoomMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, EndCombineRoomMsg.class);
    }

    @Override
    public int encodedSize(EndCombineRoomMsg value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.roomID)
          + ECombineRoomCloseReason.ADAPTER.encodedSizeWithTag(2, value.reason)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.exitUserID)
          + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.noResponseUserID)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, EndCombineRoomMsg value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.roomID);
      ECombineRoomCloseReason.ADAPTER.encodeWithTag(writer, 2, value.reason);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.exitUserID);
      ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.noResponseUserID);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public EndCombineRoomMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRoomID(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: {
            try {
              builder.setReason(ECombineRoomCloseReason.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 3: builder.setExitUserID(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.setNoResponseUserID(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public EndCombineRoomMsg redact(EndCombineRoomMsg value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
