// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CombineRoom.proto
package com.component.live.proto.CombineRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import com.component.live.proto.Common.ESceneType;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ReqChangeSceneMsg extends Message<ReqChangeSceneMsg, ReqChangeSceneMsg.Builder> {
  public static final ProtoAdapter<ReqChangeSceneMsg> ADAPTER = new ProtoAdapter_ReqChangeSceneMsg();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_REQCHANGEUSERID = 0;

  public static final ESceneType DEFAULT_SCENETYPE = ESceneType.ST_Unknown;

  public static final String DEFAULT_NOTICEMSGDESC = "";

  /**
   * 发起请求用户id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer reqChangeUserID;

  /**
   * 需要切换场景
   */
  @WireField(
      tag = 2,
      adapter = "com.zq.live.proto.Common.ESceneType#ADAPTER"
  )
  private final ESceneType sceneType;

  /**
   * 提醒消息描述
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String noticeMsgDesc;

  public ReqChangeSceneMsg(Integer reqChangeUserID, ESceneType sceneType, String noticeMsgDesc) {
    this(reqChangeUserID, sceneType, noticeMsgDesc, ByteString.EMPTY);
  }

  public ReqChangeSceneMsg(Integer reqChangeUserID, ESceneType sceneType, String noticeMsgDesc,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.reqChangeUserID = reqChangeUserID;
    this.sceneType = sceneType;
    this.noticeMsgDesc = noticeMsgDesc;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.reqChangeUserID = reqChangeUserID;
    builder.sceneType = sceneType;
    builder.noticeMsgDesc = noticeMsgDesc;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ReqChangeSceneMsg)) return false;
    ReqChangeSceneMsg o = (ReqChangeSceneMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(reqChangeUserID, o.reqChangeUserID)
        && Internal.equals(sceneType, o.sceneType)
        && Internal.equals(noticeMsgDesc, o.noticeMsgDesc);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (reqChangeUserID != null ? reqChangeUserID.hashCode() : 0);
      result = result * 37 + (sceneType != null ? sceneType.hashCode() : 0);
      result = result * 37 + (noticeMsgDesc != null ? noticeMsgDesc.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (reqChangeUserID != null) builder.append(", reqChangeUserID=").append(reqChangeUserID);
    if (sceneType != null) builder.append(", sceneType=").append(sceneType);
    if (noticeMsgDesc != null) builder.append(", noticeMsgDesc=").append(noticeMsgDesc);
    return builder.replace(0, 2, "ReqChangeSceneMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ReqChangeSceneMsg.ADAPTER.encode(this);
  }

  public static final ReqChangeSceneMsg parseFrom(byte[] data) throws IOException {
    ReqChangeSceneMsg c = null;
       c = ReqChangeSceneMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 发起请求用户id
   */
  public Integer getReqChangeUserID() {
    if(reqChangeUserID==null){
        return DEFAULT_REQCHANGEUSERID;
    }
    return reqChangeUserID;
  }

  /**
   * 需要切换场景
   */
  public ESceneType getSceneType() {
    if(sceneType==null){
        return new ESceneType.Builder().build();
    }
    return sceneType;
  }

  /**
   * 提醒消息描述
   */
  public String getNoticeMsgDesc() {
    if(noticeMsgDesc==null){
        return DEFAULT_NOTICEMSGDESC;
    }
    return noticeMsgDesc;
  }

  /**
   * 发起请求用户id
   */
  public boolean hasReqChangeUserID() {
    return reqChangeUserID!=null;
  }

  /**
   * 需要切换场景
   */
  public boolean hasSceneType() {
    return sceneType!=null;
  }

  /**
   * 提醒消息描述
   */
  public boolean hasNoticeMsgDesc() {
    return noticeMsgDesc!=null;
  }

  public static final class Builder extends Message.Builder<ReqChangeSceneMsg, Builder> {
    private Integer reqChangeUserID;

    private ESceneType sceneType;

    private String noticeMsgDesc;

    public Builder() {
    }

    /**
     * 发起请求用户id
     */
    public Builder setReqChangeUserID(Integer reqChangeUserID) {
      this.reqChangeUserID = reqChangeUserID;
      return this;
    }

    /**
     * 需要切换场景
     */
    public Builder setSceneType(ESceneType sceneType) {
      this.sceneType = sceneType;
      return this;
    }

    /**
     * 提醒消息描述
     */
    public Builder setNoticeMsgDesc(String noticeMsgDesc) {
      this.noticeMsgDesc = noticeMsgDesc;
      return this;
    }

    @Override
    public ReqChangeSceneMsg build() {
      return new ReqChangeSceneMsg(reqChangeUserID, sceneType, noticeMsgDesc, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ReqChangeSceneMsg extends ProtoAdapter<ReqChangeSceneMsg> {
    public ProtoAdapter_ReqChangeSceneMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, ReqChangeSceneMsg.class);
    }

    @Override
    public int encodedSize(ReqChangeSceneMsg value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.reqChangeUserID)
          + ESceneType.ADAPTER.encodedSizeWithTag(2, value.sceneType)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.noticeMsgDesc)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ReqChangeSceneMsg value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.reqChangeUserID);
      ESceneType.ADAPTER.encodeWithTag(writer, 2, value.sceneType);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.noticeMsgDesc);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ReqChangeSceneMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setReqChangeUserID(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: {
            try {
              builder.setSceneType(ESceneType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 3: builder.setNoticeMsgDesc(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ReqChangeSceneMsg redact(ReqChangeSceneMsg value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
