// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Room.proto
package com.component.live.proto.Room;

import com.squareup.wire.EnumAdapter;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

/**
 * EStarWhy 星星增减原因
 */
public enum EStarWhy implements WireEnum {
  /**
   * 未知原因
   */
  InvalidEStarWhy(0),

  /**
   * 中途退出游戏
   */
  RankEscaped(1),

  /**
   * 对手中途离场且你获得机器投票
   */
  RankEnemyEscapedYouWin(2),

  /**
   * 不投票
   */
  RankUnVote(3),

  /**
   * 对手没有投票且你获得机器投票
   */
  RankEnemyUnVoteYouWin(4),

  /**
   * 总共获得3票
   */
  Rank3VotesWinner(5),

  /**
   * 总共获得2票
   */
  Rank2VotesWinner(6),

  /**
   * 得票为0
   */
  Rank0VotesLoser(7),

  /**
   * 3连胜
   */
  Rank3ComboVictory(8),

  /**
   * 5连胜
   */
  Rank5ComboVictory(9),

  /**
   * 10连胜
   */
  Rank10ComboVictory(10),

  /**
   * 战力值充满
   */
  FullFightForce(11),

  /**
   * 段位保护
   */
  RankProtectionIncr(12);

  public static final ProtoAdapter<EStarWhy> ADAPTER = new ProtoAdapter_EStarWhy();

  private final int value;

  EStarWhy(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static EStarWhy fromValue(int value) {
    switch (value) {
      case 0: return InvalidEStarWhy;
      case 1: return RankEscaped;
      case 2: return RankEnemyEscapedYouWin;
      case 3: return RankUnVote;
      case 4: return RankEnemyUnVoteYouWin;
      case 5: return Rank3VotesWinner;
      case 6: return Rank2VotesWinner;
      case 7: return Rank0VotesLoser;
      case 8: return Rank3ComboVictory;
      case 9: return Rank5ComboVictory;
      case 10: return Rank10ComboVictory;
      case 11: return FullFightForce;
      case 12: return RankProtectionIncr;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }

  public static final class Builder {
    public EStarWhy build() {
      return InvalidEStarWhy;
    }
  }

  private static final class ProtoAdapter_EStarWhy extends EnumAdapter<EStarWhy> {
    ProtoAdapter_EStarWhy() {
      super(EStarWhy.class);
    }

    @Override
    protected EStarWhy fromValue(int value) {
      return EStarWhy.fromValue(value);
    }
  }
}
