// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CombineRoom.proto
package com.component.live.proto.CombineRoom;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import com.component.live.proto.Common.ESceneType;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class AgreeChangeSceneMsg extends Message<AgreeChangeSceneMsg, AgreeChangeSceneMsg.Builder> {
  public static final ProtoAdapter<AgreeChangeSceneMsg> ADAPTER = new ProtoAdapter_AgreeChangeSceneMsg();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_AGREECHANGEUSERID = 0;

  public static final ESceneType DEFAULT_SCENETYPE = ESceneType.ST_Unknown;

  public static final Boolean DEFAULT_AGREE = false;

  public static final String DEFAULT_NOTICEMSGDESC = "";

  /**
   * 同意请求用户id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer agreeChangeUserID;

  /**
   * 需要切换场景
   */
  @WireField(
      tag = 2,
      adapter = "com.zq.live.proto.Common.ESceneType#ADAPTER"
  )
  private final ESceneType sceneType;

  /**
   * 是否同意
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  private final Boolean agree;

  /**
   * 提醒消息描述
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String noticeMsgDesc;

  public AgreeChangeSceneMsg(Integer agreeChangeUserID, ESceneType sceneType, Boolean agree,
      String noticeMsgDesc) {
    this(agreeChangeUserID, sceneType, agree, noticeMsgDesc, ByteString.EMPTY);
  }

  public AgreeChangeSceneMsg(Integer agreeChangeUserID, ESceneType sceneType, Boolean agree,
      String noticeMsgDesc, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.agreeChangeUserID = agreeChangeUserID;
    this.sceneType = sceneType;
    this.agree = agree;
    this.noticeMsgDesc = noticeMsgDesc;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.agreeChangeUserID = agreeChangeUserID;
    builder.sceneType = sceneType;
    builder.agree = agree;
    builder.noticeMsgDesc = noticeMsgDesc;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AgreeChangeSceneMsg)) return false;
    AgreeChangeSceneMsg o = (AgreeChangeSceneMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(agreeChangeUserID, o.agreeChangeUserID)
        && Internal.equals(sceneType, o.sceneType)
        && Internal.equals(agree, o.agree)
        && Internal.equals(noticeMsgDesc, o.noticeMsgDesc);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (agreeChangeUserID != null ? agreeChangeUserID.hashCode() : 0);
      result = result * 37 + (sceneType != null ? sceneType.hashCode() : 0);
      result = result * 37 + (agree != null ? agree.hashCode() : 0);
      result = result * 37 + (noticeMsgDesc != null ? noticeMsgDesc.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (agreeChangeUserID != null) builder.append(", agreeChangeUserID=").append(agreeChangeUserID);
    if (sceneType != null) builder.append(", sceneType=").append(sceneType);
    if (agree != null) builder.append(", agree=").append(agree);
    if (noticeMsgDesc != null) builder.append(", noticeMsgDesc=").append(noticeMsgDesc);
    return builder.replace(0, 2, "AgreeChangeSceneMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return AgreeChangeSceneMsg.ADAPTER.encode(this);
  }

  public static final AgreeChangeSceneMsg parseFrom(byte[] data) throws IOException {
    AgreeChangeSceneMsg c = null;
       c = AgreeChangeSceneMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 同意请求用户id
   */
  public Integer getAgreeChangeUserID() {
    if(agreeChangeUserID==null){
        return DEFAULT_AGREECHANGEUSERID;
    }
    return agreeChangeUserID;
  }

  /**
   * 需要切换场景
   */
  public ESceneType getSceneType() {
    if(sceneType==null){
        return new ESceneType.Builder().build();
    }
    return sceneType;
  }

  /**
   * 是否同意
   */
  public Boolean getAgree() {
    if(agree==null){
        return DEFAULT_AGREE;
    }
    return agree;
  }

  /**
   * 提醒消息描述
   */
  public String getNoticeMsgDesc() {
    if(noticeMsgDesc==null){
        return DEFAULT_NOTICEMSGDESC;
    }
    return noticeMsgDesc;
  }

  /**
   * 同意请求用户id
   */
  public boolean hasAgreeChangeUserID() {
    return agreeChangeUserID!=null;
  }

  /**
   * 需要切换场景
   */
  public boolean hasSceneType() {
    return sceneType!=null;
  }

  /**
   * 是否同意
   */
  public boolean hasAgree() {
    return agree!=null;
  }

  /**
   * 提醒消息描述
   */
  public boolean hasNoticeMsgDesc() {
    return noticeMsgDesc!=null;
  }

  public static final class Builder extends Message.Builder<AgreeChangeSceneMsg, Builder> {
    private Integer agreeChangeUserID;

    private ESceneType sceneType;

    private Boolean agree;

    private String noticeMsgDesc;

    public Builder() {
    }

    /**
     * 同意请求用户id
     */
    public Builder setAgreeChangeUserID(Integer agreeChangeUserID) {
      this.agreeChangeUserID = agreeChangeUserID;
      return this;
    }

    /**
     * 需要切换场景
     */
    public Builder setSceneType(ESceneType sceneType) {
      this.sceneType = sceneType;
      return this;
    }

    /**
     * 是否同意
     */
    public Builder setAgree(Boolean agree) {
      this.agree = agree;
      return this;
    }

    /**
     * 提醒消息描述
     */
    public Builder setNoticeMsgDesc(String noticeMsgDesc) {
      this.noticeMsgDesc = noticeMsgDesc;
      return this;
    }

    @Override
    public AgreeChangeSceneMsg build() {
      return new AgreeChangeSceneMsg(agreeChangeUserID, sceneType, agree, noticeMsgDesc, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AgreeChangeSceneMsg extends ProtoAdapter<AgreeChangeSceneMsg> {
    public ProtoAdapter_AgreeChangeSceneMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, AgreeChangeSceneMsg.class);
    }

    @Override
    public int encodedSize(AgreeChangeSceneMsg value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.agreeChangeUserID)
          + ESceneType.ADAPTER.encodedSizeWithTag(2, value.sceneType)
          + ProtoAdapter.BOOL.encodedSizeWithTag(3, value.agree)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.noticeMsgDesc)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AgreeChangeSceneMsg value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.agreeChangeUserID);
      ESceneType.ADAPTER.encodeWithTag(writer, 2, value.sceneType);
      ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.agree);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.noticeMsgDesc);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AgreeChangeSceneMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setAgreeChangeUserID(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: {
            try {
              builder.setSceneType(ESceneType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 3: builder.setAgree(ProtoAdapter.BOOL.decode(reader)); break;
          case 4: builder.setNoticeMsgDesc(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AgreeChangeSceneMsg redact(AgreeChangeSceneMsg value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
