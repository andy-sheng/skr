#开启gradle并行编译，开启daemon，调整jvm内存大小
org.gradle.daemon=true
#启用新的孵化模式
org.gradle.configureondemand=true
org.gradle.parallel=true
org.gradle.jvmargs=-Xmx4096m -XX:MaxPermSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8

#开启gradle缓存
org.gradle.caching=true
android.enableBuildCache=true

#开启kotlin的增量和并行编译
kotlin.incremental=true
kotlin.incremental.java=true
kotlin.incremental.js=true
kotlin.caching.enabled=true
#开启kotlin并行编译
kotlin.parallel.tasks.in.project=true

#优化kapt
#并行运行kapt1.2.60版本以上支持
kapt.use.worker.api=true
#增量编译 kapt1.3.30版本以上支持
kapt.incremental.apt=true
#kapt avoiding 如果用kapt依赖的内容没有变化，会完全重用编译内容，省掉最上图中的:app:kaptGenerateStubsDebugKotlin的时间
kapt.include.compile.classpath=false



#isBuildModule 为 true 时可以使每个组件独立运行, false 则可以将所有组件集成到宿主 App 中

# 远端maven配置信息
local_maven=http://nexus.inframe.club/repository/maven-releases/
nexus_name=admin
nexus_password=admin123

isBuildModule=false
#永远自动按设计图的百分比来显示ui
autoLayout=true
#VirtualApk 已经关了，若需要测试，设置为true，并打开 virtualApk 初始化注释
virtualApkEnable=false
#droidplugin 测试已经关了，若需要测试，设置为true，并打开 droidplugin 初始化注释
droidPluginEnable=false
#replugin 开启或者关闭
repluginHostEnable=false
repluginPluginEnable=false
#可选使用，通过 ARouter 提供的注册插件进行路由表的自动加载(power by AutoRegister)，
# 默认通过扫描 dex 的方式 进行加载通过 gradle 插件进行自动注册可以缩短初始化时间解决
# 应用加固导致无法直接访问 dex 文件，初始化失败的问题，需要注意的是，该插件必须搭配
# api 1.3.0 以上版本使用！
arouterTableLoadOnBuild=true
#自有的插件是否打开
selfPluginOpenForCompile=false
#是否编译 moduletest 模块 为true时不要提交到git
compileModuleTest=false
#是否编译 使用IMKit的jar包
useIMKitJar=true
#使用阿里的用户反馈
aliFeedback=false
#使用arcCloud
arcCloud=true
#是否启用美团的多渠道打包插件
walleEnable=true
#使用友盟push
UmengPushEnable=false
#使用极光push
JPushEnable=false
#厂商push通道使用极光
RomPushUseJiGuang=false
#厂商push通道使用融云
RomPushUseRC=true
#腾讯matrix使用
MatrixEnable=false
#Matrix 版本号
MATRIX_VERSION=0.5.1
# 编译时组件依赖是否本地 还是从 仓库 拉取
# 如果为false 则全部从本地依赖
dependLibraryFromServer=false
#传到maven上时的 buildType 关联 base_lib.gradle 里的 defaultPublishConfig
buildTypeForMaven=release
#启动flutter跨平台
flutterEnable=false
