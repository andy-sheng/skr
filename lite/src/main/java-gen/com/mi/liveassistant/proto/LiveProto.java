// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Live.proto

package com.mi.liveassistant.proto;

public final class LiveProto {
  private LiveProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BeginLiveReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BeginLiveReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     * 操作人id
     * </pre>
     */
    boolean hasUuid();
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     * 操作人id
     * </pre>
     */
    long getUuid();

    /**
     * <code>optional .Location location = 2;</code>
     *
     * <pre>
     * 操作人位置信息
     * </pre>
     */
    boolean hasLocation();
    /**
     * <code>optional .Location location = 2;</code>
     *
     * <pre>
     * 操作人位置信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.Location getLocation();
    /**
     * <code>optional .Location location = 2;</code>
     *
     * <pre>
     * 操作人位置信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder getLocationOrBuilder();

    /**
     * <code>optional uint32 type = 3;</code>
     *
     * <pre>
     * 类型，0公开，1私密,2 密码验证,3=门票
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional uint32 type = 3;</code>
     *
     * <pre>
     * 类型，0公开，1私密,2 密码验证,3=门票
     * </pre>
     */
    int getType();

    /**
     * <code>repeated uint64 invitee = 4;</code>
     *
     * <pre>
     * 被邀请的人
     * </pre>
     */
    java.util.List<java.lang.Long> getInviteeList();
    /**
     * <code>repeated uint64 invitee = 4;</code>
     *
     * <pre>
     * 被邀请的人
     * </pre>
     */
    int getInviteeCount();
    /**
     * <code>repeated uint64 invitee = 4;</code>
     *
     * <pre>
     * 被邀请的人
     * </pre>
     */
    long getInvitee(int index);

    /**
     * <code>optional bool addHistory = 5;</code>
     *
     * <pre>
     * 是否产生直播回放
     * </pre>
     */
    boolean hasAddHistory();
    /**
     * <code>optional bool addHistory = 5;</code>
     *
     * <pre>
     * 是否产生直播回放
     * </pre>
     */
    boolean getAddHistory();

    /**
     * <code>optional string liveTitle = 6;</code>
     *
     * <pre>
     * 直播标题
     * </pre>
     */
    boolean hasLiveTitle();
    /**
     * <code>optional string liveTitle = 6;</code>
     *
     * <pre>
     * 直播标题
     * </pre>
     */
    java.lang.String getLiveTitle();
    /**
     * <code>optional string liveTitle = 6;</code>
     *
     * <pre>
     * 直播标题
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiveTitleBytes();

    /**
     * <code>optional string password = 7;</code>
     *
     * <pre>
     * 密码直播
     * </pre>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 7;</code>
     *
     * <pre>
     * 密码直播
     * </pre>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 7;</code>
     *
     * <pre>
     * 密码直播
     * </pre>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional .LiveCover liveCover = 8;</code>
     *
     * <pre>
     * 房间的封面信息
     * </pre>
     */
    boolean hasLiveCover();
    /**
     * <code>optional .LiveCover liveCover = 8;</code>
     *
     * <pre>
     * 房间的封面信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.LiveCover getLiveCover();
    /**
     * <code>optional .LiveCover liveCover = 8;</code>
     *
     * <pre>
     * 房间的封面信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder getLiveCoverOrBuilder();

    /**
     * <code>optional string liveId = 9;</code>
     *
     * <pre>
     * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
     * </pre>
     */
    boolean hasLiveId();
    /**
     * <code>optional string liveId = 9;</code>
     *
     * <pre>
     * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
     * </pre>
     */
    java.lang.String getLiveId();
    /**
     * <code>optional string liveId = 9;</code>
     *
     * <pre>
     * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional uint32 appType = 10;</code>
     *
     * <pre>
     * 0:小米直播app，1:第三方设备，只有无人机
     * </pre>
     */
    boolean hasAppType();
    /**
     * <code>optional uint32 appType = 10;</code>
     *
     * <pre>
     * 0:小米直播app，1:第三方设备，只有无人机
     * </pre>
     */
    int getAppType();

    /**
     * <code>optional .AppInfo appInfo = 11;</code>
     */
    boolean hasAppInfo();
    /**
     * <code>optional .AppInfo appInfo = 11;</code>
     */
    com.mi.liveassistant.proto.LiveCommonProto.AppInfo getAppInfo();
    /**
     * <code>optional .AppInfo appInfo = 11;</code>
     */
    com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder getAppInfoOrBuilder();

    /**
     * <code>optional uint32 playUI = 12;</code>
     *
     * <pre>
     * 视频画面调整方式, 0默认(裁左右宽度), 1补上下高度
     * </pre>
     */
    boolean hasPlayUI();
    /**
     * <code>optional uint32 playUI = 12;</code>
     *
     * <pre>
     * 视频画面调整方式, 0默认(裁左右宽度), 1补上下高度
     * </pre>
     */
    int getPlayUI();

    /**
     * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
     *
     * <pre>
     * 门票直播需要传
     * </pre>
     */
    boolean hasTicketLiveInfo();
    /**
     * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
     *
     * <pre>
     * 门票直播需要传
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo getTicketLiveInfo();
    /**
     * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
     *
     * <pre>
     * 门票直播需要传
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfoOrBuilder getTicketLiveInfoOrBuilder();

    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    java.util.List<com.mi.liveassistant.proto.LiveCommonProto.TagInfo> 
        getTagInfosList();
    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.TagInfo getTagInfos(int index);
    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    int getTagInfosCount();
    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.TagInfoOrBuilder> 
        getTagInfosOrBuilderList();
    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.TagInfoOrBuilder getTagInfosOrBuilder(
        int index);

    /**
     * <code>optional bool supportMagicFace = 16;</code>
     *
     * <pre>
     * 支持魔法表情
     * </pre>
     */
    boolean hasSupportMagicFace();
    /**
     * <code>optional bool supportMagicFace = 16;</code>
     *
     * <pre>
     * 支持魔法表情
     * </pre>
     */
    boolean getSupportMagicFace();

    /**
     * <code>optional uint32 source = 17;</code>
     *
     * <pre>
     * 0：摄像头 1：录屏 2：外设
     * </pre>
     */
    boolean hasSource();
    /**
     * <code>optional uint32 source = 17;</code>
     *
     * <pre>
     * 0：摄像头 1：录屏 2：外设
     * </pre>
     */
    int getSource();
  }
  /**
   * Protobuf type {@code BeginLiveReq}
   *
   * <pre>
   *创建一个直播
   *zhibo.live.begin
   * </pre>
   */
  public static final class BeginLiveReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:BeginLiveReq)
      BeginLiveReqOrBuilder {
    // Use BeginLiveReq.newBuilder() to construct.
    private BeginLiveReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BeginLiveReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BeginLiveReq defaultInstance;
    public static BeginLiveReq getDefaultInstance() {
      return defaultInstance;
    }

    public BeginLiveReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BeginLiveReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readUInt64();
              break;
            }
            case 18: {
              com.mi.liveassistant.proto.LiveCommonProto.Location.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.Location.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              type_ = input.readUInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                invitee_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              invitee_.add(input.readUInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                invitee_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                invitee_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              addHistory_ = input.readBool();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              liveTitle_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              password_ = bs;
              break;
            }
            case 66: {
              com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = liveCover_.toBuilder();
              }
              liveCover_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.LiveCover.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(liveCover_);
                liveCover_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              liveId_ = bs;
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              appType_ = input.readUInt32();
              break;
            }
            case 90: {
              com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = appInfo_.toBuilder();
              }
              appInfo_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.AppInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(appInfo_);
                appInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              playUI_ = input.readUInt32();
              break;
            }
            case 106: {
              com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = ticketLiveInfo_.toBuilder();
              }
              ticketLiveInfo_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ticketLiveInfo_);
                ticketLiveInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                tagInfos_ = new java.util.ArrayList<com.mi.liveassistant.proto.LiveCommonProto.TagInfo>();
                mutable_bitField0_ |= 0x00002000;
              }
              tagInfos_.add(input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.TagInfo.PARSER, extensionRegistry));
              break;
            }
            case 128: {
              bitField0_ |= 0x00001000;
              supportMagicFace_ = input.readBool();
              break;
            }
            case 136: {
              bitField0_ |= 0x00002000;
              source_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          invitee_ = java.util.Collections.unmodifiableList(invitee_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          tagInfos_ = java.util.Collections.unmodifiableList(tagInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.BeginLiveReq.class, com.mi.liveassistant.proto.LiveProto.BeginLiveReq.Builder.class);
    }

    public static com.google.protobuf.Parser<BeginLiveReq> PARSER =
        new com.google.protobuf.AbstractParser<BeginLiveReq>() {
      public BeginLiveReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BeginLiveReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BeginLiveReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private long uuid_;
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     * 操作人id
     * </pre>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     * 操作人id
     * </pre>
     */
    public long getUuid() {
      return uuid_;
    }

    public static final int LOCATION_FIELD_NUMBER = 2;
    private com.mi.liveassistant.proto.LiveCommonProto.Location location_;
    /**
     * <code>optional .Location location = 2;</code>
     *
     * <pre>
     * 操作人位置信息
     * </pre>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Location location = 2;</code>
     *
     * <pre>
     * 操作人位置信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.Location getLocation() {
      return location_;
    }
    /**
     * <code>optional .Location location = 2;</code>
     *
     * <pre>
     * 操作人位置信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder getLocationOrBuilder() {
      return location_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>optional uint32 type = 3;</code>
     *
     * <pre>
     * 类型，0公开，1私密,2 密码验证,3=门票
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 type = 3;</code>
     *
     * <pre>
     * 类型，0公开，1私密,2 密码验证,3=门票
     * </pre>
     */
    public int getType() {
      return type_;
    }

    public static final int INVITEE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> invitee_;
    /**
     * <code>repeated uint64 invitee = 4;</code>
     *
     * <pre>
     * 被邀请的人
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getInviteeList() {
      return invitee_;
    }
    /**
     * <code>repeated uint64 invitee = 4;</code>
     *
     * <pre>
     * 被邀请的人
     * </pre>
     */
    public int getInviteeCount() {
      return invitee_.size();
    }
    /**
     * <code>repeated uint64 invitee = 4;</code>
     *
     * <pre>
     * 被邀请的人
     * </pre>
     */
    public long getInvitee(int index) {
      return invitee_.get(index);
    }

    public static final int ADDHISTORY_FIELD_NUMBER = 5;
    private boolean addHistory_;
    /**
     * <code>optional bool addHistory = 5;</code>
     *
     * <pre>
     * 是否产生直播回放
     * </pre>
     */
    public boolean hasAddHistory() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool addHistory = 5;</code>
     *
     * <pre>
     * 是否产生直播回放
     * </pre>
     */
    public boolean getAddHistory() {
      return addHistory_;
    }

    public static final int LIVETITLE_FIELD_NUMBER = 6;
    private java.lang.Object liveTitle_;
    /**
     * <code>optional string liveTitle = 6;</code>
     *
     * <pre>
     * 直播标题
     * </pre>
     */
    public boolean hasLiveTitle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string liveTitle = 6;</code>
     *
     * <pre>
     * 直播标题
     * </pre>
     */
    public java.lang.String getLiveTitle() {
      java.lang.Object ref = liveTitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveTitle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string liveTitle = 6;</code>
     *
     * <pre>
     * 直播标题
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiveTitleBytes() {
      java.lang.Object ref = liveTitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveTitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 7;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 7;</code>
     *
     * <pre>
     * 密码直播
     * </pre>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string password = 7;</code>
     *
     * <pre>
     * 密码直播
     * </pre>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 7;</code>
     *
     * <pre>
     * 密码直播
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIVECOVER_FIELD_NUMBER = 8;
    private com.mi.liveassistant.proto.LiveCommonProto.LiveCover liveCover_;
    /**
     * <code>optional .LiveCover liveCover = 8;</code>
     *
     * <pre>
     * 房间的封面信息
     * </pre>
     */
    public boolean hasLiveCover() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .LiveCover liveCover = 8;</code>
     *
     * <pre>
     * 房间的封面信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.LiveCover getLiveCover() {
      return liveCover_;
    }
    /**
     * <code>optional .LiveCover liveCover = 8;</code>
     *
     * <pre>
     * 房间的封面信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder getLiveCoverOrBuilder() {
      return liveCover_;
    }

    public static final int LIVEID_FIELD_NUMBER = 9;
    private java.lang.Object liveId_;
    /**
     * <code>optional string liveId = 9;</code>
     *
     * <pre>
     * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
     * </pre>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string liveId = 9;</code>
     *
     * <pre>
     * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
     * </pre>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string liveId = 9;</code>
     *
     * <pre>
     * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APPTYPE_FIELD_NUMBER = 10;
    private int appType_;
    /**
     * <code>optional uint32 appType = 10;</code>
     *
     * <pre>
     * 0:小米直播app，1:第三方设备，只有无人机
     * </pre>
     */
    public boolean hasAppType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 appType = 10;</code>
     *
     * <pre>
     * 0:小米直播app，1:第三方设备，只有无人机
     * </pre>
     */
    public int getAppType() {
      return appType_;
    }

    public static final int APPINFO_FIELD_NUMBER = 11;
    private com.mi.liveassistant.proto.LiveCommonProto.AppInfo appInfo_;
    /**
     * <code>optional .AppInfo appInfo = 11;</code>
     */
    public boolean hasAppInfo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .AppInfo appInfo = 11;</code>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.AppInfo getAppInfo() {
      return appInfo_;
    }
    /**
     * <code>optional .AppInfo appInfo = 11;</code>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder getAppInfoOrBuilder() {
      return appInfo_;
    }

    public static final int PLAYUI_FIELD_NUMBER = 12;
    private int playUI_;
    /**
     * <code>optional uint32 playUI = 12;</code>
     *
     * <pre>
     * 视频画面调整方式, 0默认(裁左右宽度), 1补上下高度
     * </pre>
     */
    public boolean hasPlayUI() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 playUI = 12;</code>
     *
     * <pre>
     * 视频画面调整方式, 0默认(裁左右宽度), 1补上下高度
     * </pre>
     */
    public int getPlayUI() {
      return playUI_;
    }

    public static final int TICKETLIVEINFO_FIELD_NUMBER = 13;
    private com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo ticketLiveInfo_;
    /**
     * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
     *
     * <pre>
     * 门票直播需要传
     * </pre>
     */
    public boolean hasTicketLiveInfo() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
     *
     * <pre>
     * 门票直播需要传
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo getTicketLiveInfo() {
      return ticketLiveInfo_;
    }
    /**
     * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
     *
     * <pre>
     * 门票直播需要传
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfoOrBuilder getTicketLiveInfoOrBuilder() {
      return ticketLiveInfo_;
    }

    public static final int TAGINFOS_FIELD_NUMBER = 14;
    private java.util.List<com.mi.liveassistant.proto.LiveCommonProto.TagInfo> tagInfos_;
    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.TagInfo> getTagInfosList() {
      return tagInfos_;
    }
    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    public java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.TagInfoOrBuilder> 
        getTagInfosOrBuilderList() {
      return tagInfos_;
    }
    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    public int getTagInfosCount() {
      return tagInfos_.size();
    }
    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.TagInfo getTagInfos(int index) {
      return tagInfos_.get(index);
    }
    /**
     * <code>repeated .TagInfo tagInfos = 14;</code>
     *
     * <pre>
     * 标签ID
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.TagInfoOrBuilder getTagInfosOrBuilder(
        int index) {
      return tagInfos_.get(index);
    }

    public static final int SUPPORTMAGICFACE_FIELD_NUMBER = 16;
    private boolean supportMagicFace_;
    /**
     * <code>optional bool supportMagicFace = 16;</code>
     *
     * <pre>
     * 支持魔法表情
     * </pre>
     */
    public boolean hasSupportMagicFace() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool supportMagicFace = 16;</code>
     *
     * <pre>
     * 支持魔法表情
     * </pre>
     */
    public boolean getSupportMagicFace() {
      return supportMagicFace_;
    }

    public static final int SOURCE_FIELD_NUMBER = 17;
    private int source_;
    /**
     * <code>optional uint32 source = 17;</code>
     *
     * <pre>
     * 0：摄像头 1：录屏 2：外设
     * </pre>
     */
    public boolean hasSource() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 source = 17;</code>
     *
     * <pre>
     * 0：摄像头 1：录屏 2：外设
     * </pre>
     */
    public int getSource() {
      return source_;
    }

    private void initFields() {
      uuid_ = 0L;
      location_ = com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance();
      type_ = 0;
      invitee_ = java.util.Collections.emptyList();
      addHistory_ = false;
      liveTitle_ = "";
      password_ = "";
      liveCover_ = com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance();
      liveId_ = "";
      appType_ = 0;
      appInfo_ = com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance();
      playUI_ = 0;
      ticketLiveInfo_ = com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.getDefaultInstance();
      tagInfos_ = java.util.Collections.emptyList();
      supportMagicFace_ = false;
      source_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, location_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, type_);
      }
      for (int i = 0; i < invitee_.size(); i++) {
        output.writeUInt64(4, invitee_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(5, addHistory_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getLiveTitleBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, liveCover_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(10, appType_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(11, appInfo_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(12, playUI_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(13, ticketLiveInfo_);
      }
      for (int i = 0; i < tagInfos_.size(); i++) {
        output.writeMessage(14, tagInfos_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(16, supportMagicFace_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(17, source_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, location_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < invitee_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(invitee_.get(i));
        }
        size += dataSize;
        size += 1 * getInviteeList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, addHistory_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getLiveTitleBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, liveCover_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, appType_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, appInfo_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, playUI_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, ticketLiveInfo_);
      }
      for (int i = 0; i < tagInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, tagInfos_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, supportMagicFace_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, source_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.BeginLiveReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BeginLiveReq}
     *
     * <pre>
     *创建一个直播
     *zhibo.live.begin
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BeginLiveReq)
        com.mi.liveassistant.proto.LiveProto.BeginLiveReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.BeginLiveReq.class, com.mi.liveassistant.proto.LiveProto.BeginLiveReq.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.BeginLiveReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationFieldBuilder();
          getLiveCoverFieldBuilder();
          getAppInfoFieldBuilder();
          getTicketLiveInfoFieldBuilder();
          getTagInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (locationBuilder_ == null) {
          location_ = com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        invitee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        addHistory_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        liveTitle_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        if (liveCoverBuilder_ == null) {
          liveCover_ = com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance();
        } else {
          liveCoverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        appType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (appInfoBuilder_ == null) {
          appInfo_ = com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance();
        } else {
          appInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        playUI_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (ticketLiveInfoBuilder_ == null) {
          ticketLiveInfo_ = com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.getDefaultInstance();
        } else {
          ticketLiveInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (tagInfosBuilder_ == null) {
          tagInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          tagInfosBuilder_.clear();
        }
        supportMagicFace_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        source_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveReq_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.BeginLiveReq getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.BeginLiveReq.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.BeginLiveReq build() {
        com.mi.liveassistant.proto.LiveProto.BeginLiveReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.BeginLiveReq buildPartial() {
        com.mi.liveassistant.proto.LiveProto.BeginLiveReq result = new com.mi.liveassistant.proto.LiveProto.BeginLiveReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          invitee_ = java.util.Collections.unmodifiableList(invitee_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.invitee_ = invitee_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.addHistory_ = addHistory_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.liveTitle_ = liveTitle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (liveCoverBuilder_ == null) {
          result.liveCover_ = liveCover_;
        } else {
          result.liveCover_ = liveCoverBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.appType_ = appType_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        if (appInfoBuilder_ == null) {
          result.appInfo_ = appInfo_;
        } else {
          result.appInfo_ = appInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.playUI_ = playUI_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (ticketLiveInfoBuilder_ == null) {
          result.ticketLiveInfo_ = ticketLiveInfo_;
        } else {
          result.ticketLiveInfo_ = ticketLiveInfoBuilder_.build();
        }
        if (tagInfosBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            tagInfos_ = java.util.Collections.unmodifiableList(tagInfos_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.tagInfos_ = tagInfos_;
        } else {
          result.tagInfos_ = tagInfosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.supportMagicFace_ = supportMagicFace_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.source_ = source_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.BeginLiveReq) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.BeginLiveReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.BeginLiveReq other) {
        if (other == com.mi.liveassistant.proto.LiveProto.BeginLiveReq.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.invitee_.isEmpty()) {
          if (invitee_.isEmpty()) {
            invitee_ = other.invitee_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureInviteeIsMutable();
            invitee_.addAll(other.invitee_);
          }
          onChanged();
        }
        if (other.hasAddHistory()) {
          setAddHistory(other.getAddHistory());
        }
        if (other.hasLiveTitle()) {
          bitField0_ |= 0x00000020;
          liveTitle_ = other.liveTitle_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000040;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasLiveCover()) {
          mergeLiveCover(other.getLiveCover());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000100;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasAppType()) {
          setAppType(other.getAppType());
        }
        if (other.hasAppInfo()) {
          mergeAppInfo(other.getAppInfo());
        }
        if (other.hasPlayUI()) {
          setPlayUI(other.getPlayUI());
        }
        if (other.hasTicketLiveInfo()) {
          mergeTicketLiveInfo(other.getTicketLiveInfo());
        }
        if (tagInfosBuilder_ == null) {
          if (!other.tagInfos_.isEmpty()) {
            if (tagInfos_.isEmpty()) {
              tagInfos_ = other.tagInfos_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureTagInfosIsMutable();
              tagInfos_.addAll(other.tagInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.tagInfos_.isEmpty()) {
            if (tagInfosBuilder_.isEmpty()) {
              tagInfosBuilder_.dispose();
              tagInfosBuilder_ = null;
              tagInfos_ = other.tagInfos_;
              bitField0_ = (bitField0_ & ~0x00002000);
              tagInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTagInfosFieldBuilder() : null;
            } else {
              tagInfosBuilder_.addAllMessages(other.tagInfos_);
            }
          }
        }
        if (other.hasSupportMagicFace()) {
          setSupportMagicFace(other.getSupportMagicFace());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.BeginLiveReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.BeginLiveReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long uuid_ ;
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       * 操作人id
       * </pre>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       * 操作人id
       * </pre>
       */
      public long getUuid() {
        return uuid_;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       * 操作人id
       * </pre>
       */
      public Builder setUuid(long value) {
        bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       * 操作人id
       * </pre>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = 0L;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.Location location_ = com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.Location, com.mi.liveassistant.proto.LiveCommonProto.Location.Builder, com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder> locationBuilder_;
      /**
       * <code>optional .Location location = 2;</code>
       *
       * <pre>
       * 操作人位置信息
       * </pre>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Location location = 2;</code>
       *
       * <pre>
       * 操作人位置信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Location location = 2;</code>
       *
       * <pre>
       * 操作人位置信息
       * </pre>
       */
      public Builder setLocation(com.mi.liveassistant.proto.LiveCommonProto.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Location location = 2;</code>
       *
       * <pre>
       * 操作人位置信息
       * </pre>
       */
      public Builder setLocation(
          com.mi.liveassistant.proto.LiveCommonProto.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Location location = 2;</code>
       *
       * <pre>
       * 操作人位置信息
       * </pre>
       */
      public Builder mergeLocation(com.mi.liveassistant.proto.LiveCommonProto.Location value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              location_ != com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance()) {
            location_ =
              com.mi.liveassistant.proto.LiveCommonProto.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Location location = 2;</code>
       *
       * <pre>
       * 操作人位置信息
       * </pre>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Location location = 2;</code>
       *
       * <pre>
       * 操作人位置信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Location.Builder getLocationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Location location = 2;</code>
       *
       * <pre>
       * 操作人位置信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>optional .Location location = 2;</code>
       *
       * <pre>
       * 操作人位置信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.Location, com.mi.liveassistant.proto.LiveCommonProto.Location.Builder, com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.Location, com.mi.liveassistant.proto.LiveCommonProto.Location.Builder, com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private int type_ ;
      /**
       * <code>optional uint32 type = 3;</code>
       *
       * <pre>
       * 类型，0公开，1私密,2 密码验证,3=门票
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 type = 3;</code>
       *
       * <pre>
       * 类型，0公开，1私密,2 密码验证,3=门票
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional uint32 type = 3;</code>
       *
       * <pre>
       * 类型，0公开，1私密,2 密码验证,3=门票
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 type = 3;</code>
       *
       * <pre>
       * 类型，0公开，1私密,2 密码验证,3=门票
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> invitee_ = java.util.Collections.emptyList();
      private void ensureInviteeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          invitee_ = new java.util.ArrayList<java.lang.Long>(invitee_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated uint64 invitee = 4;</code>
       *
       * <pre>
       * 被邀请的人
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getInviteeList() {
        return java.util.Collections.unmodifiableList(invitee_);
      }
      /**
       * <code>repeated uint64 invitee = 4;</code>
       *
       * <pre>
       * 被邀请的人
       * </pre>
       */
      public int getInviteeCount() {
        return invitee_.size();
      }
      /**
       * <code>repeated uint64 invitee = 4;</code>
       *
       * <pre>
       * 被邀请的人
       * </pre>
       */
      public long getInvitee(int index) {
        return invitee_.get(index);
      }
      /**
       * <code>repeated uint64 invitee = 4;</code>
       *
       * <pre>
       * 被邀请的人
       * </pre>
       */
      public Builder setInvitee(
          int index, long value) {
        ensureInviteeIsMutable();
        invitee_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 invitee = 4;</code>
       *
       * <pre>
       * 被邀请的人
       * </pre>
       */
      public Builder addInvitee(long value) {
        ensureInviteeIsMutable();
        invitee_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 invitee = 4;</code>
       *
       * <pre>
       * 被邀请的人
       * </pre>
       */
      public Builder addAllInvitee(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInviteeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, invitee_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 invitee = 4;</code>
       *
       * <pre>
       * 被邀请的人
       * </pre>
       */
      public Builder clearInvitee() {
        invitee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private boolean addHistory_ ;
      /**
       * <code>optional bool addHistory = 5;</code>
       *
       * <pre>
       * 是否产生直播回放
       * </pre>
       */
      public boolean hasAddHistory() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool addHistory = 5;</code>
       *
       * <pre>
       * 是否产生直播回放
       * </pre>
       */
      public boolean getAddHistory() {
        return addHistory_;
      }
      /**
       * <code>optional bool addHistory = 5;</code>
       *
       * <pre>
       * 是否产生直播回放
       * </pre>
       */
      public Builder setAddHistory(boolean value) {
        bitField0_ |= 0x00000010;
        addHistory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool addHistory = 5;</code>
       *
       * <pre>
       * 是否产生直播回放
       * </pre>
       */
      public Builder clearAddHistory() {
        bitField0_ = (bitField0_ & ~0x00000010);
        addHistory_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object liveTitle_ = "";
      /**
       * <code>optional string liveTitle = 6;</code>
       *
       * <pre>
       * 直播标题
       * </pre>
       */
      public boolean hasLiveTitle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string liveTitle = 6;</code>
       *
       * <pre>
       * 直播标题
       * </pre>
       */
      public java.lang.String getLiveTitle() {
        java.lang.Object ref = liveTitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveTitle_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string liveTitle = 6;</code>
       *
       * <pre>
       * 直播标题
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiveTitleBytes() {
        java.lang.Object ref = liveTitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveTitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string liveTitle = 6;</code>
       *
       * <pre>
       * 直播标题
       * </pre>
       */
      public Builder setLiveTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        liveTitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveTitle = 6;</code>
       *
       * <pre>
       * 直播标题
       * </pre>
       */
      public Builder clearLiveTitle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        liveTitle_ = getDefaultInstance().getLiveTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveTitle = 6;</code>
       *
       * <pre>
       * 直播标题
       * </pre>
       */
      public Builder setLiveTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        liveTitle_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 7;</code>
       *
       * <pre>
       * 密码直播
       * </pre>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string password = 7;</code>
       *
       * <pre>
       * 密码直播
       * </pre>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 7;</code>
       *
       * <pre>
       * 密码直播
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 7;</code>
       *
       * <pre>
       * 密码直播
       * </pre>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 7;</code>
       *
       * <pre>
       * 密码直播
       * </pre>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000040);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 7;</code>
       *
       * <pre>
       * 密码直播
       * </pre>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        password_ = value;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.LiveCover liveCover_ = com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.LiveCover, com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder, com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder> liveCoverBuilder_;
      /**
       * <code>optional .LiveCover liveCover = 8;</code>
       *
       * <pre>
       * 房间的封面信息
       * </pre>
       */
      public boolean hasLiveCover() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .LiveCover liveCover = 8;</code>
       *
       * <pre>
       * 房间的封面信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.LiveCover getLiveCover() {
        if (liveCoverBuilder_ == null) {
          return liveCover_;
        } else {
          return liveCoverBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LiveCover liveCover = 8;</code>
       *
       * <pre>
       * 房间的封面信息
       * </pre>
       */
      public Builder setLiveCover(com.mi.liveassistant.proto.LiveCommonProto.LiveCover value) {
        if (liveCoverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          liveCover_ = value;
          onChanged();
        } else {
          liveCoverBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .LiveCover liveCover = 8;</code>
       *
       * <pre>
       * 房间的封面信息
       * </pre>
       */
      public Builder setLiveCover(
          com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder builderForValue) {
        if (liveCoverBuilder_ == null) {
          liveCover_ = builderForValue.build();
          onChanged();
        } else {
          liveCoverBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .LiveCover liveCover = 8;</code>
       *
       * <pre>
       * 房间的封面信息
       * </pre>
       */
      public Builder mergeLiveCover(com.mi.liveassistant.proto.LiveCommonProto.LiveCover value) {
        if (liveCoverBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              liveCover_ != com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance()) {
            liveCover_ =
              com.mi.liveassistant.proto.LiveCommonProto.LiveCover.newBuilder(liveCover_).mergeFrom(value).buildPartial();
          } else {
            liveCover_ = value;
          }
          onChanged();
        } else {
          liveCoverBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .LiveCover liveCover = 8;</code>
       *
       * <pre>
       * 房间的封面信息
       * </pre>
       */
      public Builder clearLiveCover() {
        if (liveCoverBuilder_ == null) {
          liveCover_ = com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance();
          onChanged();
        } else {
          liveCoverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .LiveCover liveCover = 8;</code>
       *
       * <pre>
       * 房间的封面信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder getLiveCoverBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getLiveCoverFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LiveCover liveCover = 8;</code>
       *
       * <pre>
       * 房间的封面信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder getLiveCoverOrBuilder() {
        if (liveCoverBuilder_ != null) {
          return liveCoverBuilder_.getMessageOrBuilder();
        } else {
          return liveCover_;
        }
      }
      /**
       * <code>optional .LiveCover liveCover = 8;</code>
       *
       * <pre>
       * 房间的封面信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.LiveCover, com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder, com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder> 
          getLiveCoverFieldBuilder() {
        if (liveCoverBuilder_ == null) {
          liveCoverBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.LiveCover, com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder, com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder>(
                  getLiveCover(),
                  getParentForChildren(),
                  isClean());
          liveCover_ = null;
        }
        return liveCoverBuilder_;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>optional string liveId = 9;</code>
       *
       * <pre>
       * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
       * </pre>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string liveId = 9;</code>
       *
       * <pre>
       * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
       * </pre>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string liveId = 9;</code>
       *
       * <pre>
       * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string liveId = 9;</code>
       *
       * <pre>
       * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
       * </pre>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 9;</code>
       *
       * <pre>
       * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
       * </pre>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 9;</code>
       *
       * <pre>
       * 房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
       * </pre>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        liveId_ = value;
        onChanged();
        return this;
      }

      private int appType_ ;
      /**
       * <code>optional uint32 appType = 10;</code>
       *
       * <pre>
       * 0:小米直播app，1:第三方设备，只有无人机
       * </pre>
       */
      public boolean hasAppType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 appType = 10;</code>
       *
       * <pre>
       * 0:小米直播app，1:第三方设备，只有无人机
       * </pre>
       */
      public int getAppType() {
        return appType_;
      }
      /**
       * <code>optional uint32 appType = 10;</code>
       *
       * <pre>
       * 0:小米直播app，1:第三方设备，只有无人机
       * </pre>
       */
      public Builder setAppType(int value) {
        bitField0_ |= 0x00000200;
        appType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 appType = 10;</code>
       *
       * <pre>
       * 0:小米直播app，1:第三方设备，只有无人机
       * </pre>
       */
      public Builder clearAppType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        appType_ = 0;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.AppInfo appInfo_ = com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.AppInfo, com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder> appInfoBuilder_;
      /**
       * <code>optional .AppInfo appInfo = 11;</code>
       */
      public boolean hasAppInfo() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .AppInfo appInfo = 11;</code>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.AppInfo getAppInfo() {
        if (appInfoBuilder_ == null) {
          return appInfo_;
        } else {
          return appInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AppInfo appInfo = 11;</code>
       */
      public Builder setAppInfo(com.mi.liveassistant.proto.LiveCommonProto.AppInfo value) {
        if (appInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          appInfo_ = value;
          onChanged();
        } else {
          appInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .AppInfo appInfo = 11;</code>
       */
      public Builder setAppInfo(
          com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder builderForValue) {
        if (appInfoBuilder_ == null) {
          appInfo_ = builderForValue.build();
          onChanged();
        } else {
          appInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .AppInfo appInfo = 11;</code>
       */
      public Builder mergeAppInfo(com.mi.liveassistant.proto.LiveCommonProto.AppInfo value) {
        if (appInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              appInfo_ != com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance()) {
            appInfo_ =
              com.mi.liveassistant.proto.LiveCommonProto.AppInfo.newBuilder(appInfo_).mergeFrom(value).buildPartial();
          } else {
            appInfo_ = value;
          }
          onChanged();
        } else {
          appInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .AppInfo appInfo = 11;</code>
       */
      public Builder clearAppInfo() {
        if (appInfoBuilder_ == null) {
          appInfo_ = com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance();
          onChanged();
        } else {
          appInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .AppInfo appInfo = 11;</code>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder getAppInfoBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getAppInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AppInfo appInfo = 11;</code>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder getAppInfoOrBuilder() {
        if (appInfoBuilder_ != null) {
          return appInfoBuilder_.getMessageOrBuilder();
        } else {
          return appInfo_;
        }
      }
      /**
       * <code>optional .AppInfo appInfo = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.AppInfo, com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder> 
          getAppInfoFieldBuilder() {
        if (appInfoBuilder_ == null) {
          appInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.AppInfo, com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder>(
                  getAppInfo(),
                  getParentForChildren(),
                  isClean());
          appInfo_ = null;
        }
        return appInfoBuilder_;
      }

      private int playUI_ ;
      /**
       * <code>optional uint32 playUI = 12;</code>
       *
       * <pre>
       * 视频画面调整方式, 0默认(裁左右宽度), 1补上下高度
       * </pre>
       */
      public boolean hasPlayUI() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 playUI = 12;</code>
       *
       * <pre>
       * 视频画面调整方式, 0默认(裁左右宽度), 1补上下高度
       * </pre>
       */
      public int getPlayUI() {
        return playUI_;
      }
      /**
       * <code>optional uint32 playUI = 12;</code>
       *
       * <pre>
       * 视频画面调整方式, 0默认(裁左右宽度), 1补上下高度
       * </pre>
       */
      public Builder setPlayUI(int value) {
        bitField0_ |= 0x00000800;
        playUI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 playUI = 12;</code>
       *
       * <pre>
       * 视频画面调整方式, 0默认(裁左右宽度), 1补上下高度
       * </pre>
       */
      public Builder clearPlayUI() {
        bitField0_ = (bitField0_ & ~0x00000800);
        playUI_ = 0;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo ticketLiveInfo_ = com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfoOrBuilder> ticketLiveInfoBuilder_;
      /**
       * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
       *
       * <pre>
       * 门票直播需要传
       * </pre>
       */
      public boolean hasTicketLiveInfo() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
       *
       * <pre>
       * 门票直播需要传
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo getTicketLiveInfo() {
        if (ticketLiveInfoBuilder_ == null) {
          return ticketLiveInfo_;
        } else {
          return ticketLiveInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
       *
       * <pre>
       * 门票直播需要传
       * </pre>
       */
      public Builder setTicketLiveInfo(com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo value) {
        if (ticketLiveInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ticketLiveInfo_ = value;
          onChanged();
        } else {
          ticketLiveInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
       *
       * <pre>
       * 门票直播需要传
       * </pre>
       */
      public Builder setTicketLiveInfo(
          com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.Builder builderForValue) {
        if (ticketLiveInfoBuilder_ == null) {
          ticketLiveInfo_ = builderForValue.build();
          onChanged();
        } else {
          ticketLiveInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
       *
       * <pre>
       * 门票直播需要传
       * </pre>
       */
      public Builder mergeTicketLiveInfo(com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo value) {
        if (ticketLiveInfoBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              ticketLiveInfo_ != com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.getDefaultInstance()) {
            ticketLiveInfo_ =
              com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.newBuilder(ticketLiveInfo_).mergeFrom(value).buildPartial();
          } else {
            ticketLiveInfo_ = value;
          }
          onChanged();
        } else {
          ticketLiveInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
       *
       * <pre>
       * 门票直播需要传
       * </pre>
       */
      public Builder clearTicketLiveInfo() {
        if (ticketLiveInfoBuilder_ == null) {
          ticketLiveInfo_ = com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.getDefaultInstance();
          onChanged();
        } else {
          ticketLiveInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
       *
       * <pre>
       * 门票直播需要传
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.Builder getTicketLiveInfoBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getTicketLiveInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
       *
       * <pre>
       * 门票直播需要传
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfoOrBuilder getTicketLiveInfoOrBuilder() {
        if (ticketLiveInfoBuilder_ != null) {
          return ticketLiveInfoBuilder_.getMessageOrBuilder();
        } else {
          return ticketLiveInfo_;
        }
      }
      /**
       * <code>optional .TicketLiveInfo ticketLiveInfo = 13;</code>
       *
       * <pre>
       * 门票直播需要传
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfoOrBuilder> 
          getTicketLiveInfoFieldBuilder() {
        if (ticketLiveInfoBuilder_ == null) {
          ticketLiveInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveInfoOrBuilder>(
                  getTicketLiveInfo(),
                  getParentForChildren(),
                  isClean());
          ticketLiveInfo_ = null;
        }
        return ticketLiveInfoBuilder_;
      }

      private java.util.List<com.mi.liveassistant.proto.LiveCommonProto.TagInfo> tagInfos_ =
        java.util.Collections.emptyList();
      private void ensureTagInfosIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          tagInfos_ = new java.util.ArrayList<com.mi.liveassistant.proto.LiveCommonProto.TagInfo>(tagInfos_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.TagInfo, com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.TagInfoOrBuilder> tagInfosBuilder_;

      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.TagInfo> getTagInfosList() {
        if (tagInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tagInfos_);
        } else {
          return tagInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public int getTagInfosCount() {
        if (tagInfosBuilder_ == null) {
          return tagInfos_.size();
        } else {
          return tagInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TagInfo getTagInfos(int index) {
        if (tagInfosBuilder_ == null) {
          return tagInfos_.get(index);
        } else {
          return tagInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public Builder setTagInfos(
          int index, com.mi.liveassistant.proto.LiveCommonProto.TagInfo value) {
        if (tagInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagInfosIsMutable();
          tagInfos_.set(index, value);
          onChanged();
        } else {
          tagInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public Builder setTagInfos(
          int index, com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder builderForValue) {
        if (tagInfosBuilder_ == null) {
          ensureTagInfosIsMutable();
          tagInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          tagInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public Builder addTagInfos(com.mi.liveassistant.proto.LiveCommonProto.TagInfo value) {
        if (tagInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagInfosIsMutable();
          tagInfos_.add(value);
          onChanged();
        } else {
          tagInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public Builder addTagInfos(
          int index, com.mi.liveassistant.proto.LiveCommonProto.TagInfo value) {
        if (tagInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagInfosIsMutable();
          tagInfos_.add(index, value);
          onChanged();
        } else {
          tagInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public Builder addTagInfos(
          com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder builderForValue) {
        if (tagInfosBuilder_ == null) {
          ensureTagInfosIsMutable();
          tagInfos_.add(builderForValue.build());
          onChanged();
        } else {
          tagInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public Builder addTagInfos(
          int index, com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder builderForValue) {
        if (tagInfosBuilder_ == null) {
          ensureTagInfosIsMutable();
          tagInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          tagInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public Builder addAllTagInfos(
          java.lang.Iterable<? extends com.mi.liveassistant.proto.LiveCommonProto.TagInfo> values) {
        if (tagInfosBuilder_ == null) {
          ensureTagInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tagInfos_);
          onChanged();
        } else {
          tagInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public Builder clearTagInfos() {
        if (tagInfosBuilder_ == null) {
          tagInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          tagInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public Builder removeTagInfos(int index) {
        if (tagInfosBuilder_ == null) {
          ensureTagInfosIsMutable();
          tagInfos_.remove(index);
          onChanged();
        } else {
          tagInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder getTagInfosBuilder(
          int index) {
        return getTagInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TagInfoOrBuilder getTagInfosOrBuilder(
          int index) {
        if (tagInfosBuilder_ == null) {
          return tagInfos_.get(index);  } else {
          return tagInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.TagInfoOrBuilder> 
           getTagInfosOrBuilderList() {
        if (tagInfosBuilder_ != null) {
          return tagInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tagInfos_);
        }
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder addTagInfosBuilder() {
        return getTagInfosFieldBuilder().addBuilder(
            com.mi.liveassistant.proto.LiveCommonProto.TagInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder addTagInfosBuilder(
          int index) {
        return getTagInfosFieldBuilder().addBuilder(
            index, com.mi.liveassistant.proto.LiveCommonProto.TagInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .TagInfo tagInfos = 14;</code>
       *
       * <pre>
       * 标签ID
       * </pre>
       */
      public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder> 
           getTagInfosBuilderList() {
        return getTagInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.TagInfo, com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.TagInfoOrBuilder> 
          getTagInfosFieldBuilder() {
        if (tagInfosBuilder_ == null) {
          tagInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.TagInfo, com.mi.liveassistant.proto.LiveCommonProto.TagInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.TagInfoOrBuilder>(
                  tagInfos_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          tagInfos_ = null;
        }
        return tagInfosBuilder_;
      }

      private boolean supportMagicFace_ ;
      /**
       * <code>optional bool supportMagicFace = 16;</code>
       *
       * <pre>
       * 支持魔法表情
       * </pre>
       */
      public boolean hasSupportMagicFace() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool supportMagicFace = 16;</code>
       *
       * <pre>
       * 支持魔法表情
       * </pre>
       */
      public boolean getSupportMagicFace() {
        return supportMagicFace_;
      }
      /**
       * <code>optional bool supportMagicFace = 16;</code>
       *
       * <pre>
       * 支持魔法表情
       * </pre>
       */
      public Builder setSupportMagicFace(boolean value) {
        bitField0_ |= 0x00004000;
        supportMagicFace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool supportMagicFace = 16;</code>
       *
       * <pre>
       * 支持魔法表情
       * </pre>
       */
      public Builder clearSupportMagicFace() {
        bitField0_ = (bitField0_ & ~0x00004000);
        supportMagicFace_ = false;
        onChanged();
        return this;
      }

      private int source_ ;
      /**
       * <code>optional uint32 source = 17;</code>
       *
       * <pre>
       * 0：摄像头 1：录屏 2：外设
       * </pre>
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 source = 17;</code>
       *
       * <pre>
       * 0：摄像头 1：录屏 2：外设
       * </pre>
       */
      public int getSource() {
        return source_;
      }
      /**
       * <code>optional uint32 source = 17;</code>
       *
       * <pre>
       * 0：摄像头 1：录屏 2：外设
       * </pre>
       */
      public Builder setSource(int value) {
        bitField0_ |= 0x00008000;
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 source = 17;</code>
       *
       * <pre>
       * 0：摄像头 1：录屏 2：外设
       * </pre>
       */
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00008000);
        source_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BeginLiveReq)
    }

    static {
      defaultInstance = new BeginLiveReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BeginLiveReq)
  }

  public interface BeginLiveRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BeginLiveRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    int getRetCode();

    /**
     * <code>optional string liveId = 2;</code>
     *
     * <pre>
     *id＝System.currentTime/1000＋uuid
     * </pre>
     */
    boolean hasLiveId();
    /**
     * <code>optional string liveId = 2;</code>
     *
     * <pre>
     *id＝System.currentTime/1000＋uuid
     * </pre>
     */
    java.lang.String getLiveId();
    /**
     * <code>optional string liveId = 2;</code>
     *
     * <pre>
     *id＝System.currentTime/1000＋uuid
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional uint64 createTime = 3;</code>
     *
     * <pre>
     *创建的评论的服务器时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>optional uint64 createTime = 3;</code>
     *
     * <pre>
     *创建的评论的服务器时间
     * </pre>
     */
    long getCreateTime();

    /**
     * <code>optional string shareUrl = 4;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    boolean hasShareUrl();
    /**
     * <code>optional string shareUrl = 4;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    java.lang.String getShareUrl();
    /**
     * <code>optional string shareUrl = 4;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    com.google.protobuf.ByteString
        getShareUrlBytes();

    /**
     * <code>optional string upStreamUrl = 5;</code>
     *
     * <pre>
     *完整的url
     * </pre>
     */
    boolean hasUpStreamUrl();
    /**
     * <code>optional string upStreamUrl = 5;</code>
     *
     * <pre>
     *完整的url
     * </pre>
     */
    java.lang.String getUpStreamUrl();
    /**
     * <code>optional string upStreamUrl = 5;</code>
     *
     * <pre>
     *完整的url
     * </pre>
     */
    com.google.protobuf.ByteString
        getUpStreamUrlBytes();

    /**
     * <code>optional uint32 beginLevel = 6;</code>
     *
     * <pre>
     *开播需要的最低用户等级
     * </pre>
     */
    boolean hasBeginLevel();
    /**
     * <code>optional uint32 beginLevel = 6;</code>
     *
     * <pre>
     *开播需要的最低用户等级
     * </pre>
     */
    int getBeginLevel();

    /**
     * <code>optional uint32 showIconCtrl = 7;</code>
     *
     * <pre>
     *显示icon隐藏开关：从最低位开始：1-显示弹幕icon
     * </pre>
     */
    boolean hasShowIconCtrl();
    /**
     * <code>optional uint32 showIconCtrl = 7;</code>
     *
     * <pre>
     *显示icon隐藏开关：从最低位开始：1-显示弹幕icon
     * </pre>
     */
    int getShowIconCtrl();

    /**
     * <code>optional string udpUpstreamUrl = 8;</code>
     *
     * <pre>
     *Udp推流地址
     * </pre>
     */
    boolean hasUdpUpstreamUrl();
    /**
     * <code>optional string udpUpstreamUrl = 8;</code>
     *
     * <pre>
     *Udp推流地址
     * </pre>
     */
    java.lang.String getUdpUpstreamUrl();
    /**
     * <code>optional string udpUpstreamUrl = 8;</code>
     *
     * <pre>
     *Udp推流地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getUdpUpstreamUrlBytes();

    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    java.util.List<com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl> 
        getNewUpStreamUrlList();
    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl getNewUpStreamUrl(int index);
    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    int getNewUpStreamUrlCount();
    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrlOrBuilder> 
        getNewUpStreamUrlOrBuilderList();
    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrlOrBuilder getNewUpStreamUrlOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code BeginLiveRsp}
   */
  public static final class BeginLiveRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:BeginLiveRsp)
      BeginLiveRspOrBuilder {
    // Use BeginLiveRsp.newBuilder() to construct.
    private BeginLiveRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BeginLiveRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BeginLiveRsp defaultInstance;
    public static BeginLiveRsp getDefaultInstance() {
      return defaultInstance;
    }

    public BeginLiveRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BeginLiveRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              liveId_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              createTime_ = input.readUInt64();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              shareUrl_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              upStreamUrl_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              beginLevel_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              showIconCtrl_ = input.readUInt32();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              udpUpstreamUrl_ = bs;
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                newUpStreamUrl_ = new java.util.ArrayList<com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl>();
                mutable_bitField0_ |= 0x00000100;
              }
              newUpStreamUrl_.add(input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          newUpStreamUrl_ = java.util.Collections.unmodifiableList(newUpStreamUrl_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.BeginLiveRsp.class, com.mi.liveassistant.proto.LiveProto.BeginLiveRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<BeginLiveRsp> PARSER =
        new com.google.protobuf.AbstractParser<BeginLiveRsp>() {
      public BeginLiveRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BeginLiveRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BeginLiveRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    public static final int LIVEID_FIELD_NUMBER = 2;
    private java.lang.Object liveId_;
    /**
     * <code>optional string liveId = 2;</code>
     *
     * <pre>
     *id＝System.currentTime/1000＋uuid
     * </pre>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string liveId = 2;</code>
     *
     * <pre>
     *id＝System.currentTime/1000＋uuid
     * </pre>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string liveId = 2;</code>
     *
     * <pre>
     *id＝System.currentTime/1000＋uuid
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATETIME_FIELD_NUMBER = 3;
    private long createTime_;
    /**
     * <code>optional uint64 createTime = 3;</code>
     *
     * <pre>
     *创建的评论的服务器时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 createTime = 3;</code>
     *
     * <pre>
     *创建的评论的服务器时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    public static final int SHAREURL_FIELD_NUMBER = 4;
    private java.lang.Object shareUrl_;
    /**
     * <code>optional string shareUrl = 4;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    public boolean hasShareUrl() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string shareUrl = 4;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    public java.lang.String getShareUrl() {
      java.lang.Object ref = shareUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          shareUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string shareUrl = 4;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    public com.google.protobuf.ByteString
        getShareUrlBytes() {
      java.lang.Object ref = shareUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shareUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UPSTREAMURL_FIELD_NUMBER = 5;
    private java.lang.Object upStreamUrl_;
    /**
     * <code>optional string upStreamUrl = 5;</code>
     *
     * <pre>
     *完整的url
     * </pre>
     */
    public boolean hasUpStreamUrl() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string upStreamUrl = 5;</code>
     *
     * <pre>
     *完整的url
     * </pre>
     */
    public java.lang.String getUpStreamUrl() {
      java.lang.Object ref = upStreamUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          upStreamUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string upStreamUrl = 5;</code>
     *
     * <pre>
     *完整的url
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUpStreamUrlBytes() {
      java.lang.Object ref = upStreamUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        upStreamUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEGINLEVEL_FIELD_NUMBER = 6;
    private int beginLevel_;
    /**
     * <code>optional uint32 beginLevel = 6;</code>
     *
     * <pre>
     *开播需要的最低用户等级
     * </pre>
     */
    public boolean hasBeginLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 beginLevel = 6;</code>
     *
     * <pre>
     *开播需要的最低用户等级
     * </pre>
     */
    public int getBeginLevel() {
      return beginLevel_;
    }

    public static final int SHOWICONCTRL_FIELD_NUMBER = 7;
    private int showIconCtrl_;
    /**
     * <code>optional uint32 showIconCtrl = 7;</code>
     *
     * <pre>
     *显示icon隐藏开关：从最低位开始：1-显示弹幕icon
     * </pre>
     */
    public boolean hasShowIconCtrl() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 showIconCtrl = 7;</code>
     *
     * <pre>
     *显示icon隐藏开关：从最低位开始：1-显示弹幕icon
     * </pre>
     */
    public int getShowIconCtrl() {
      return showIconCtrl_;
    }

    public static final int UDPUPSTREAMURL_FIELD_NUMBER = 8;
    private java.lang.Object udpUpstreamUrl_;
    /**
     * <code>optional string udpUpstreamUrl = 8;</code>
     *
     * <pre>
     *Udp推流地址
     * </pre>
     */
    public boolean hasUdpUpstreamUrl() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string udpUpstreamUrl = 8;</code>
     *
     * <pre>
     *Udp推流地址
     * </pre>
     */
    public java.lang.String getUdpUpstreamUrl() {
      java.lang.Object ref = udpUpstreamUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          udpUpstreamUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string udpUpstreamUrl = 8;</code>
     *
     * <pre>
     *Udp推流地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUdpUpstreamUrlBytes() {
      java.lang.Object ref = udpUpstreamUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        udpUpstreamUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEWUPSTREAMURL_FIELD_NUMBER = 9;
    private java.util.List<com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl> newUpStreamUrl_;
    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl> getNewUpStreamUrlList() {
      return newUpStreamUrl_;
    }
    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    public java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrlOrBuilder> 
        getNewUpStreamUrlOrBuilderList() {
      return newUpStreamUrl_;
    }
    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    public int getNewUpStreamUrlCount() {
      return newUpStreamUrl_.size();
    }
    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl getNewUpStreamUrl(int index) {
      return newUpStreamUrl_.get(index);
    }
    /**
     * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
     *
     * <pre>
     *新的完整推流url
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrlOrBuilder getNewUpStreamUrlOrBuilder(
        int index) {
      return newUpStreamUrl_.get(index);
    }

    private void initFields() {
      retCode_ = 0;
      liveId_ = "";
      createTime_ = 0L;
      shareUrl_ = "";
      upStreamUrl_ = "";
      beginLevel_ = 0;
      showIconCtrl_ = 0;
      udpUpstreamUrl_ = "";
      newUpStreamUrl_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, createTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getShareUrlBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getUpStreamUrlBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, beginLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, showIconCtrl_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getUdpUpstreamUrlBytes());
      }
      for (int i = 0; i < newUpStreamUrl_.size(); i++) {
        output.writeMessage(9, newUpStreamUrl_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, createTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getShareUrlBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getUpStreamUrlBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, beginLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, showIconCtrl_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getUdpUpstreamUrlBytes());
      }
      for (int i = 0; i < newUpStreamUrl_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, newUpStreamUrl_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.BeginLiveRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BeginLiveRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BeginLiveRsp)
        com.mi.liveassistant.proto.LiveProto.BeginLiveRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.BeginLiveRsp.class, com.mi.liveassistant.proto.LiveProto.BeginLiveRsp.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.BeginLiveRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewUpStreamUrlFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        shareUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        upStreamUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        beginLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        showIconCtrl_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        udpUpstreamUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        if (newUpStreamUrlBuilder_ == null) {
          newUpStreamUrl_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          newUpStreamUrlBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_BeginLiveRsp_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.BeginLiveRsp getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.BeginLiveRsp.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.BeginLiveRsp build() {
        com.mi.liveassistant.proto.LiveProto.BeginLiveRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.BeginLiveRsp buildPartial() {
        com.mi.liveassistant.proto.LiveProto.BeginLiveRsp result = new com.mi.liveassistant.proto.LiveProto.BeginLiveRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.shareUrl_ = shareUrl_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.upStreamUrl_ = upStreamUrl_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.beginLevel_ = beginLevel_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.showIconCtrl_ = showIconCtrl_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.udpUpstreamUrl_ = udpUpstreamUrl_;
        if (newUpStreamUrlBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            newUpStreamUrl_ = java.util.Collections.unmodifiableList(newUpStreamUrl_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.newUpStreamUrl_ = newUpStreamUrl_;
        } else {
          result.newUpStreamUrl_ = newUpStreamUrlBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.BeginLiveRsp) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.BeginLiveRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.BeginLiveRsp other) {
        if (other == com.mi.liveassistant.proto.LiveProto.BeginLiveRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000002;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasShareUrl()) {
          bitField0_ |= 0x00000008;
          shareUrl_ = other.shareUrl_;
          onChanged();
        }
        if (other.hasUpStreamUrl()) {
          bitField0_ |= 0x00000010;
          upStreamUrl_ = other.upStreamUrl_;
          onChanged();
        }
        if (other.hasBeginLevel()) {
          setBeginLevel(other.getBeginLevel());
        }
        if (other.hasShowIconCtrl()) {
          setShowIconCtrl(other.getShowIconCtrl());
        }
        if (other.hasUdpUpstreamUrl()) {
          bitField0_ |= 0x00000080;
          udpUpstreamUrl_ = other.udpUpstreamUrl_;
          onChanged();
        }
        if (newUpStreamUrlBuilder_ == null) {
          if (!other.newUpStreamUrl_.isEmpty()) {
            if (newUpStreamUrl_.isEmpty()) {
              newUpStreamUrl_ = other.newUpStreamUrl_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureNewUpStreamUrlIsMutable();
              newUpStreamUrl_.addAll(other.newUpStreamUrl_);
            }
            onChanged();
          }
        } else {
          if (!other.newUpStreamUrl_.isEmpty()) {
            if (newUpStreamUrlBuilder_.isEmpty()) {
              newUpStreamUrlBuilder_.dispose();
              newUpStreamUrlBuilder_ = null;
              newUpStreamUrl_ = other.newUpStreamUrl_;
              bitField0_ = (bitField0_ & ~0x00000100);
              newUpStreamUrlBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNewUpStreamUrlFieldBuilder() : null;
            } else {
              newUpStreamUrlBuilder_.addAllMessages(other.newUpStreamUrl_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.BeginLiveRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.BeginLiveRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>optional string liveId = 2;</code>
       *
       * <pre>
       *id＝System.currentTime/1000＋uuid
       * </pre>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string liveId = 2;</code>
       *
       * <pre>
       *id＝System.currentTime/1000＋uuid
       * </pre>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string liveId = 2;</code>
       *
       * <pre>
       *id＝System.currentTime/1000＋uuid
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string liveId = 2;</code>
       *
       * <pre>
       *id＝System.currentTime/1000＋uuid
       * </pre>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 2;</code>
       *
       * <pre>
       *id＝System.currentTime/1000＋uuid
       * </pre>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveId = 2;</code>
       *
       * <pre>
       *id＝System.currentTime/1000＋uuid
       * </pre>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }

      private long createTime_ ;
      /**
       * <code>optional uint64 createTime = 3;</code>
       *
       * <pre>
       *创建的评论的服务器时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 createTime = 3;</code>
       *
       * <pre>
       *创建的评论的服务器时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>optional uint64 createTime = 3;</code>
       *
       * <pre>
       *创建的评论的服务器时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000004;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 createTime = 3;</code>
       *
       * <pre>
       *创建的评论的服务器时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        createTime_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object shareUrl_ = "";
      /**
       * <code>optional string shareUrl = 4;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public boolean hasShareUrl() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string shareUrl = 4;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public java.lang.String getShareUrl() {
        java.lang.Object ref = shareUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            shareUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string shareUrl = 4;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public com.google.protobuf.ByteString
          getShareUrlBytes() {
        java.lang.Object ref = shareUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shareUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string shareUrl = 4;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public Builder setShareUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        shareUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string shareUrl = 4;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public Builder clearShareUrl() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shareUrl_ = getDefaultInstance().getShareUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string shareUrl = 4;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public Builder setShareUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        shareUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object upStreamUrl_ = "";
      /**
       * <code>optional string upStreamUrl = 5;</code>
       *
       * <pre>
       *完整的url
       * </pre>
       */
      public boolean hasUpStreamUrl() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string upStreamUrl = 5;</code>
       *
       * <pre>
       *完整的url
       * </pre>
       */
      public java.lang.String getUpStreamUrl() {
        java.lang.Object ref = upStreamUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            upStreamUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string upStreamUrl = 5;</code>
       *
       * <pre>
       *完整的url
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUpStreamUrlBytes() {
        java.lang.Object ref = upStreamUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          upStreamUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string upStreamUrl = 5;</code>
       *
       * <pre>
       *完整的url
       * </pre>
       */
      public Builder setUpStreamUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        upStreamUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string upStreamUrl = 5;</code>
       *
       * <pre>
       *完整的url
       * </pre>
       */
      public Builder clearUpStreamUrl() {
        bitField0_ = (bitField0_ & ~0x00000010);
        upStreamUrl_ = getDefaultInstance().getUpStreamUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string upStreamUrl = 5;</code>
       *
       * <pre>
       *完整的url
       * </pre>
       */
      public Builder setUpStreamUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        upStreamUrl_ = value;
        onChanged();
        return this;
      }

      private int beginLevel_ ;
      /**
       * <code>optional uint32 beginLevel = 6;</code>
       *
       * <pre>
       *开播需要的最低用户等级
       * </pre>
       */
      public boolean hasBeginLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 beginLevel = 6;</code>
       *
       * <pre>
       *开播需要的最低用户等级
       * </pre>
       */
      public int getBeginLevel() {
        return beginLevel_;
      }
      /**
       * <code>optional uint32 beginLevel = 6;</code>
       *
       * <pre>
       *开播需要的最低用户等级
       * </pre>
       */
      public Builder setBeginLevel(int value) {
        bitField0_ |= 0x00000020;
        beginLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 beginLevel = 6;</code>
       *
       * <pre>
       *开播需要的最低用户等级
       * </pre>
       */
      public Builder clearBeginLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        beginLevel_ = 0;
        onChanged();
        return this;
      }

      private int showIconCtrl_ ;
      /**
       * <code>optional uint32 showIconCtrl = 7;</code>
       *
       * <pre>
       *显示icon隐藏开关：从最低位开始：1-显示弹幕icon
       * </pre>
       */
      public boolean hasShowIconCtrl() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 showIconCtrl = 7;</code>
       *
       * <pre>
       *显示icon隐藏开关：从最低位开始：1-显示弹幕icon
       * </pre>
       */
      public int getShowIconCtrl() {
        return showIconCtrl_;
      }
      /**
       * <code>optional uint32 showIconCtrl = 7;</code>
       *
       * <pre>
       *显示icon隐藏开关：从最低位开始：1-显示弹幕icon
       * </pre>
       */
      public Builder setShowIconCtrl(int value) {
        bitField0_ |= 0x00000040;
        showIconCtrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 showIconCtrl = 7;</code>
       *
       * <pre>
       *显示icon隐藏开关：从最低位开始：1-显示弹幕icon
       * </pre>
       */
      public Builder clearShowIconCtrl() {
        bitField0_ = (bitField0_ & ~0x00000040);
        showIconCtrl_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object udpUpstreamUrl_ = "";
      /**
       * <code>optional string udpUpstreamUrl = 8;</code>
       *
       * <pre>
       *Udp推流地址
       * </pre>
       */
      public boolean hasUdpUpstreamUrl() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string udpUpstreamUrl = 8;</code>
       *
       * <pre>
       *Udp推流地址
       * </pre>
       */
      public java.lang.String getUdpUpstreamUrl() {
        java.lang.Object ref = udpUpstreamUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            udpUpstreamUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string udpUpstreamUrl = 8;</code>
       *
       * <pre>
       *Udp推流地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUdpUpstreamUrlBytes() {
        java.lang.Object ref = udpUpstreamUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          udpUpstreamUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string udpUpstreamUrl = 8;</code>
       *
       * <pre>
       *Udp推流地址
       * </pre>
       */
      public Builder setUdpUpstreamUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        udpUpstreamUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string udpUpstreamUrl = 8;</code>
       *
       * <pre>
       *Udp推流地址
       * </pre>
       */
      public Builder clearUdpUpstreamUrl() {
        bitField0_ = (bitField0_ & ~0x00000080);
        udpUpstreamUrl_ = getDefaultInstance().getUdpUpstreamUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string udpUpstreamUrl = 8;</code>
       *
       * <pre>
       *Udp推流地址
       * </pre>
       */
      public Builder setUdpUpstreamUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        udpUpstreamUrl_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl> newUpStreamUrl_ =
        java.util.Collections.emptyList();
      private void ensureNewUpStreamUrlIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          newUpStreamUrl_ = new java.util.ArrayList<com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl>(newUpStreamUrl_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrlOrBuilder> newUpStreamUrlBuilder_;

      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl> getNewUpStreamUrlList() {
        if (newUpStreamUrlBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newUpStreamUrl_);
        } else {
          return newUpStreamUrlBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public int getNewUpStreamUrlCount() {
        if (newUpStreamUrlBuilder_ == null) {
          return newUpStreamUrl_.size();
        } else {
          return newUpStreamUrlBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl getNewUpStreamUrl(int index) {
        if (newUpStreamUrlBuilder_ == null) {
          return newUpStreamUrl_.get(index);
        } else {
          return newUpStreamUrlBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public Builder setNewUpStreamUrl(
          int index, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl value) {
        if (newUpStreamUrlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewUpStreamUrlIsMutable();
          newUpStreamUrl_.set(index, value);
          onChanged();
        } else {
          newUpStreamUrlBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public Builder setNewUpStreamUrl(
          int index, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder builderForValue) {
        if (newUpStreamUrlBuilder_ == null) {
          ensureNewUpStreamUrlIsMutable();
          newUpStreamUrl_.set(index, builderForValue.build());
          onChanged();
        } else {
          newUpStreamUrlBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public Builder addNewUpStreamUrl(com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl value) {
        if (newUpStreamUrlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewUpStreamUrlIsMutable();
          newUpStreamUrl_.add(value);
          onChanged();
        } else {
          newUpStreamUrlBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public Builder addNewUpStreamUrl(
          int index, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl value) {
        if (newUpStreamUrlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewUpStreamUrlIsMutable();
          newUpStreamUrl_.add(index, value);
          onChanged();
        } else {
          newUpStreamUrlBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public Builder addNewUpStreamUrl(
          com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder builderForValue) {
        if (newUpStreamUrlBuilder_ == null) {
          ensureNewUpStreamUrlIsMutable();
          newUpStreamUrl_.add(builderForValue.build());
          onChanged();
        } else {
          newUpStreamUrlBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public Builder addNewUpStreamUrl(
          int index, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder builderForValue) {
        if (newUpStreamUrlBuilder_ == null) {
          ensureNewUpStreamUrlIsMutable();
          newUpStreamUrl_.add(index, builderForValue.build());
          onChanged();
        } else {
          newUpStreamUrlBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public Builder addAllNewUpStreamUrl(
          java.lang.Iterable<? extends com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl> values) {
        if (newUpStreamUrlBuilder_ == null) {
          ensureNewUpStreamUrlIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, newUpStreamUrl_);
          onChanged();
        } else {
          newUpStreamUrlBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public Builder clearNewUpStreamUrl() {
        if (newUpStreamUrlBuilder_ == null) {
          newUpStreamUrl_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          newUpStreamUrlBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public Builder removeNewUpStreamUrl(int index) {
        if (newUpStreamUrlBuilder_ == null) {
          ensureNewUpStreamUrlIsMutable();
          newUpStreamUrl_.remove(index);
          onChanged();
        } else {
          newUpStreamUrlBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder getNewUpStreamUrlBuilder(
          int index) {
        return getNewUpStreamUrlFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrlOrBuilder getNewUpStreamUrlOrBuilder(
          int index) {
        if (newUpStreamUrlBuilder_ == null) {
          return newUpStreamUrl_.get(index);  } else {
          return newUpStreamUrlBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrlOrBuilder> 
           getNewUpStreamUrlOrBuilderList() {
        if (newUpStreamUrlBuilder_ != null) {
          return newUpStreamUrlBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newUpStreamUrl_);
        }
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder addNewUpStreamUrlBuilder() {
        return getNewUpStreamUrlFieldBuilder().addBuilder(
            com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.getDefaultInstance());
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder addNewUpStreamUrlBuilder(
          int index) {
        return getNewUpStreamUrlFieldBuilder().addBuilder(
            index, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.getDefaultInstance());
      }
      /**
       * <code>repeated .UpStreamUrl newUpStreamUrl = 9;</code>
       *
       * <pre>
       *新的完整推流url
       * </pre>
       */
      public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder> 
           getNewUpStreamUrlBuilderList() {
        return getNewUpStreamUrlFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrlOrBuilder> 
          getNewUpStreamUrlFieldBuilder() {
        if (newUpStreamUrlBuilder_ == null) {
          newUpStreamUrlBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrl.Builder, com.mi.liveassistant.proto.LiveCommonProto.UpStreamUrlOrBuilder>(
                  newUpStreamUrl_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          newUpStreamUrl_ = null;
        }
        return newUpStreamUrlBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BeginLiveRsp)
    }

    static {
      defaultInstance = new BeginLiveRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BeginLiveRsp)
  }

  public interface EndLiveReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EndLiveReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    boolean hasUuid();
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    long getUuid();

    /**
     * <code>required string liveId = 2;</code>
     */
    boolean hasLiveId();
    /**
     * <code>required string liveId = 2;</code>
     */
    java.lang.String getLiveId();
    /**
     * <code>required string liveId = 2;</code>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional uint32 appType = 3;</code>
     *
     * <pre>
     *0:小米直播app，1:第三方设备，只有无人机
     * </pre>
     */
    boolean hasAppType();
    /**
     * <code>optional uint32 appType = 3;</code>
     *
     * <pre>
     *0:小米直播app，1:第三方设备，只有无人机
     * </pre>
     */
    int getAppType();

    /**
     * <code>optional .AppInfo appInfo = 4;</code>
     */
    boolean hasAppInfo();
    /**
     * <code>optional .AppInfo appInfo = 4;</code>
     */
    com.mi.liveassistant.proto.LiveCommonProto.AppInfo getAppInfo();
    /**
     * <code>optional .AppInfo appInfo = 4;</code>
     */
    com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder getAppInfoOrBuilder();

    /**
     * <code>optional uint64 guildId = 5;</code>
     *
     * <pre>
     *公会id
     * </pre>
     */
    boolean hasGuildId();
    /**
     * <code>optional uint64 guildId = 5;</code>
     *
     * <pre>
     *公会id
     * </pre>
     */
    long getGuildId();
  }
  /**
   * Protobuf type {@code EndLiveReq}
   *
   * <pre>
   *结束一个直播
   *zhibo.live.end
   * </pre>
   */
  public static final class EndLiveReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:EndLiveReq)
      EndLiveReqOrBuilder {
    // Use EndLiveReq.newBuilder() to construct.
    private EndLiveReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EndLiveReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EndLiveReq defaultInstance;
    public static EndLiveReq getDefaultInstance() {
      return defaultInstance;
    }

    public EndLiveReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EndLiveReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              liveId_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              appType_ = input.readUInt32();
              break;
            }
            case 34: {
              com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = appInfo_.toBuilder();
              }
              appInfo_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.AppInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(appInfo_);
                appInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              guildId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.EndLiveReq.class, com.mi.liveassistant.proto.LiveProto.EndLiveReq.Builder.class);
    }

    public static com.google.protobuf.Parser<EndLiveReq> PARSER =
        new com.google.protobuf.AbstractParser<EndLiveReq>() {
      public EndLiveReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EndLiveReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EndLiveReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private long uuid_;
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public long getUuid() {
      return uuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 2;
    private java.lang.Object liveId_;
    /**
     * <code>required string liveId = 2;</code>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string liveId = 2;</code>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string liveId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APPTYPE_FIELD_NUMBER = 3;
    private int appType_;
    /**
     * <code>optional uint32 appType = 3;</code>
     *
     * <pre>
     *0:小米直播app，1:第三方设备，只有无人机
     * </pre>
     */
    public boolean hasAppType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 appType = 3;</code>
     *
     * <pre>
     *0:小米直播app，1:第三方设备，只有无人机
     * </pre>
     */
    public int getAppType() {
      return appType_;
    }

    public static final int APPINFO_FIELD_NUMBER = 4;
    private com.mi.liveassistant.proto.LiveCommonProto.AppInfo appInfo_;
    /**
     * <code>optional .AppInfo appInfo = 4;</code>
     */
    public boolean hasAppInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .AppInfo appInfo = 4;</code>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.AppInfo getAppInfo() {
      return appInfo_;
    }
    /**
     * <code>optional .AppInfo appInfo = 4;</code>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder getAppInfoOrBuilder() {
      return appInfo_;
    }

    public static final int GUILDID_FIELD_NUMBER = 5;
    private long guildId_;
    /**
     * <code>optional uint64 guildId = 5;</code>
     *
     * <pre>
     *公会id
     * </pre>
     */
    public boolean hasGuildId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 guildId = 5;</code>
     *
     * <pre>
     *公会id
     * </pre>
     */
    public long getGuildId() {
      return guildId_;
    }

    private void initFields() {
      uuid_ = 0L;
      liveId_ = "";
      appType_ = 0;
      appInfo_ = com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance();
      guildId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLiveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, appType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, appInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, guildId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, appType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, appInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, guildId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.EndLiveReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EndLiveReq}
     *
     * <pre>
     *结束一个直播
     *zhibo.live.end
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EndLiveReq)
        com.mi.liveassistant.proto.LiveProto.EndLiveReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.EndLiveReq.class, com.mi.liveassistant.proto.LiveProto.EndLiveReq.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.EndLiveReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAppInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        appType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (appInfoBuilder_ == null) {
          appInfo_ = com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance();
        } else {
          appInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        guildId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveReq_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.EndLiveReq getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.EndLiveReq.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.EndLiveReq build() {
        com.mi.liveassistant.proto.LiveProto.EndLiveReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.EndLiveReq buildPartial() {
        com.mi.liveassistant.proto.LiveProto.EndLiveReq result = new com.mi.liveassistant.proto.LiveProto.EndLiveReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.appType_ = appType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (appInfoBuilder_ == null) {
          result.appInfo_ = appInfo_;
        } else {
          result.appInfo_ = appInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.guildId_ = guildId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.EndLiveReq) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.EndLiveReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.EndLiveReq other) {
        if (other == com.mi.liveassistant.proto.LiveProto.EndLiveReq.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000002;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasAppType()) {
          setAppType(other.getAppType());
        }
        if (other.hasAppInfo()) {
          mergeAppInfo(other.getAppInfo());
        }
        if (other.hasGuildId()) {
          setGuildId(other.getGuildId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasLiveId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.EndLiveReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.EndLiveReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long uuid_ ;
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public long getUuid() {
        return uuid_;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder setUuid(long value) {
        bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>required string liveId = 2;</code>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string liveId = 2;</code>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string liveId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string liveId = 2;</code>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 2;</code>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 2;</code>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }

      private int appType_ ;
      /**
       * <code>optional uint32 appType = 3;</code>
       *
       * <pre>
       *0:小米直播app，1:第三方设备，只有无人机
       * </pre>
       */
      public boolean hasAppType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 appType = 3;</code>
       *
       * <pre>
       *0:小米直播app，1:第三方设备，只有无人机
       * </pre>
       */
      public int getAppType() {
        return appType_;
      }
      /**
       * <code>optional uint32 appType = 3;</code>
       *
       * <pre>
       *0:小米直播app，1:第三方设备，只有无人机
       * </pre>
       */
      public Builder setAppType(int value) {
        bitField0_ |= 0x00000004;
        appType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 appType = 3;</code>
       *
       * <pre>
       *0:小米直播app，1:第三方设备，只有无人机
       * </pre>
       */
      public Builder clearAppType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        appType_ = 0;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.AppInfo appInfo_ = com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.AppInfo, com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder> appInfoBuilder_;
      /**
       * <code>optional .AppInfo appInfo = 4;</code>
       */
      public boolean hasAppInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .AppInfo appInfo = 4;</code>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.AppInfo getAppInfo() {
        if (appInfoBuilder_ == null) {
          return appInfo_;
        } else {
          return appInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AppInfo appInfo = 4;</code>
       */
      public Builder setAppInfo(com.mi.liveassistant.proto.LiveCommonProto.AppInfo value) {
        if (appInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          appInfo_ = value;
          onChanged();
        } else {
          appInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .AppInfo appInfo = 4;</code>
       */
      public Builder setAppInfo(
          com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder builderForValue) {
        if (appInfoBuilder_ == null) {
          appInfo_ = builderForValue.build();
          onChanged();
        } else {
          appInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .AppInfo appInfo = 4;</code>
       */
      public Builder mergeAppInfo(com.mi.liveassistant.proto.LiveCommonProto.AppInfo value) {
        if (appInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              appInfo_ != com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance()) {
            appInfo_ =
              com.mi.liveassistant.proto.LiveCommonProto.AppInfo.newBuilder(appInfo_).mergeFrom(value).buildPartial();
          } else {
            appInfo_ = value;
          }
          onChanged();
        } else {
          appInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .AppInfo appInfo = 4;</code>
       */
      public Builder clearAppInfo() {
        if (appInfoBuilder_ == null) {
          appInfo_ = com.mi.liveassistant.proto.LiveCommonProto.AppInfo.getDefaultInstance();
          onChanged();
        } else {
          appInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .AppInfo appInfo = 4;</code>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder getAppInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAppInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AppInfo appInfo = 4;</code>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder getAppInfoOrBuilder() {
        if (appInfoBuilder_ != null) {
          return appInfoBuilder_.getMessageOrBuilder();
        } else {
          return appInfo_;
        }
      }
      /**
       * <code>optional .AppInfo appInfo = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.AppInfo, com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder> 
          getAppInfoFieldBuilder() {
        if (appInfoBuilder_ == null) {
          appInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.AppInfo, com.mi.liveassistant.proto.LiveCommonProto.AppInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.AppInfoOrBuilder>(
                  getAppInfo(),
                  getParentForChildren(),
                  isClean());
          appInfo_ = null;
        }
        return appInfoBuilder_;
      }

      private long guildId_ ;
      /**
       * <code>optional uint64 guildId = 5;</code>
       *
       * <pre>
       *公会id
       * </pre>
       */
      public boolean hasGuildId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 guildId = 5;</code>
       *
       * <pre>
       *公会id
       * </pre>
       */
      public long getGuildId() {
        return guildId_;
      }
      /**
       * <code>optional uint64 guildId = 5;</code>
       *
       * <pre>
       *公会id
       * </pre>
       */
      public Builder setGuildId(long value) {
        bitField0_ |= 0x00000010;
        guildId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 guildId = 5;</code>
       *
       * <pre>
       *公会id
       * </pre>
       */
      public Builder clearGuildId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        guildId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EndLiveReq)
    }

    static {
      defaultInstance = new EndLiveReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EndLiveReq)
  }

  public interface EndLiveRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EndLiveRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    int getRetCode();

    /**
     * <code>optional uint32 hisViewerCnt = 2;</code>
     *
     * <pre>
     *历史房间观众数
     * </pre>
     */
    boolean hasHisViewerCnt();
    /**
     * <code>optional uint32 hisViewerCnt = 2;</code>
     *
     * <pre>
     *历史房间观众数
     * </pre>
     */
    int getHisViewerCnt();

    /**
     * <code>optional bool generateHistorySucc = 3;</code>
     *
     * <pre>
     *是否生成历史回放
     * </pre>
     */
    boolean hasGenerateHistorySucc();
    /**
     * <code>optional bool generateHistorySucc = 3;</code>
     *
     * <pre>
     *是否生成历史回放
     * </pre>
     */
    boolean getGenerateHistorySucc();

    /**
     * <code>optional string generateHistoryMsg = 4;</code>
     *
     * <pre>
     *如果没有生成回放的提示语
     * </pre>
     */
    boolean hasGenerateHistoryMsg();
    /**
     * <code>optional string generateHistoryMsg = 4;</code>
     *
     * <pre>
     *如果没有生成回放的提示语
     * </pre>
     */
    java.lang.String getGenerateHistoryMsg();
    /**
     * <code>optional string generateHistoryMsg = 4;</code>
     *
     * <pre>
     *如果没有生成回放的提示语
     * </pre>
     */
    com.google.protobuf.ByteString
        getGenerateHistoryMsgBytes();

    /**
     * <code>optional uint32 ticketBuyerCount = 5;</code>
     *
     * <pre>
     *门票购买计数
     * </pre>
     */
    boolean hasTicketBuyerCount();
    /**
     * <code>optional uint32 ticketBuyerCount = 5;</code>
     *
     * <pre>
     *门票购买计数
     * </pre>
     */
    int getTicketBuyerCount();

    /**
     * <code>optional uint64 hisBeginLiveCnt = 6;</code>
     *
     * <pre>
     *历史开播次数
     * </pre>
     */
    boolean hasHisBeginLiveCnt();
    /**
     * <code>optional uint64 hisBeginLiveCnt = 6;</code>
     *
     * <pre>
     *历史开播次数
     * </pre>
     */
    long getHisBeginLiveCnt();

    /**
     * <code>optional uint64 duration = 7;</code>
     *
     * <pre>
     *开播时长（ms）
     * </pre>
     */
    boolean hasDuration();
    /**
     * <code>optional uint64 duration = 7;</code>
     *
     * <pre>
     *开播时长（ms）
     * </pre>
     */
    long getDuration();

    /**
     * <code>optional uint64 newFollowerCnt = 8;</code>
     *
     * <pre>
     *新增关注数
     * </pre>
     */
    boolean hasNewFollowerCnt();
    /**
     * <code>optional uint64 newFollowerCnt = 8;</code>
     *
     * <pre>
     *新增关注数
     * </pre>
     */
    long getNewFollowerCnt();
  }
  /**
   * Protobuf type {@code EndLiveRsp}
   */
  public static final class EndLiveRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:EndLiveRsp)
      EndLiveRspOrBuilder {
    // Use EndLiveRsp.newBuilder() to construct.
    private EndLiveRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EndLiveRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EndLiveRsp defaultInstance;
    public static EndLiveRsp getDefaultInstance() {
      return defaultInstance;
    }

    public EndLiveRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EndLiveRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              hisViewerCnt_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              generateHistorySucc_ = input.readBool();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              generateHistoryMsg_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ticketBuyerCount_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              hisBeginLiveCnt_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              duration_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              newFollowerCnt_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.EndLiveRsp.class, com.mi.liveassistant.proto.LiveProto.EndLiveRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<EndLiveRsp> PARSER =
        new com.google.protobuf.AbstractParser<EndLiveRsp>() {
      public EndLiveRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EndLiveRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EndLiveRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    public static final int HISVIEWERCNT_FIELD_NUMBER = 2;
    private int hisViewerCnt_;
    /**
     * <code>optional uint32 hisViewerCnt = 2;</code>
     *
     * <pre>
     *历史房间观众数
     * </pre>
     */
    public boolean hasHisViewerCnt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 hisViewerCnt = 2;</code>
     *
     * <pre>
     *历史房间观众数
     * </pre>
     */
    public int getHisViewerCnt() {
      return hisViewerCnt_;
    }

    public static final int GENERATEHISTORYSUCC_FIELD_NUMBER = 3;
    private boolean generateHistorySucc_;
    /**
     * <code>optional bool generateHistorySucc = 3;</code>
     *
     * <pre>
     *是否生成历史回放
     * </pre>
     */
    public boolean hasGenerateHistorySucc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool generateHistorySucc = 3;</code>
     *
     * <pre>
     *是否生成历史回放
     * </pre>
     */
    public boolean getGenerateHistorySucc() {
      return generateHistorySucc_;
    }

    public static final int GENERATEHISTORYMSG_FIELD_NUMBER = 4;
    private java.lang.Object generateHistoryMsg_;
    /**
     * <code>optional string generateHistoryMsg = 4;</code>
     *
     * <pre>
     *如果没有生成回放的提示语
     * </pre>
     */
    public boolean hasGenerateHistoryMsg() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string generateHistoryMsg = 4;</code>
     *
     * <pre>
     *如果没有生成回放的提示语
     * </pre>
     */
    public java.lang.String getGenerateHistoryMsg() {
      java.lang.Object ref = generateHistoryMsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          generateHistoryMsg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string generateHistoryMsg = 4;</code>
     *
     * <pre>
     *如果没有生成回放的提示语
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGenerateHistoryMsgBytes() {
      java.lang.Object ref = generateHistoryMsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        generateHistoryMsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TICKETBUYERCOUNT_FIELD_NUMBER = 5;
    private int ticketBuyerCount_;
    /**
     * <code>optional uint32 ticketBuyerCount = 5;</code>
     *
     * <pre>
     *门票购买计数
     * </pre>
     */
    public boolean hasTicketBuyerCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 ticketBuyerCount = 5;</code>
     *
     * <pre>
     *门票购买计数
     * </pre>
     */
    public int getTicketBuyerCount() {
      return ticketBuyerCount_;
    }

    public static final int HISBEGINLIVECNT_FIELD_NUMBER = 6;
    private long hisBeginLiveCnt_;
    /**
     * <code>optional uint64 hisBeginLiveCnt = 6;</code>
     *
     * <pre>
     *历史开播次数
     * </pre>
     */
    public boolean hasHisBeginLiveCnt() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 hisBeginLiveCnt = 6;</code>
     *
     * <pre>
     *历史开播次数
     * </pre>
     */
    public long getHisBeginLiveCnt() {
      return hisBeginLiveCnt_;
    }

    public static final int DURATION_FIELD_NUMBER = 7;
    private long duration_;
    /**
     * <code>optional uint64 duration = 7;</code>
     *
     * <pre>
     *开播时长（ms）
     * </pre>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 duration = 7;</code>
     *
     * <pre>
     *开播时长（ms）
     * </pre>
     */
    public long getDuration() {
      return duration_;
    }

    public static final int NEWFOLLOWERCNT_FIELD_NUMBER = 8;
    private long newFollowerCnt_;
    /**
     * <code>optional uint64 newFollowerCnt = 8;</code>
     *
     * <pre>
     *新增关注数
     * </pre>
     */
    public boolean hasNewFollowerCnt() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 newFollowerCnt = 8;</code>
     *
     * <pre>
     *新增关注数
     * </pre>
     */
    public long getNewFollowerCnt() {
      return newFollowerCnt_;
    }

    private void initFields() {
      retCode_ = 0;
      hisViewerCnt_ = 0;
      generateHistorySucc_ = false;
      generateHistoryMsg_ = "";
      ticketBuyerCount_ = 0;
      hisBeginLiveCnt_ = 0L;
      duration_ = 0L;
      newFollowerCnt_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, hisViewerCnt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, generateHistorySucc_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getGenerateHistoryMsgBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, ticketBuyerCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, hisBeginLiveCnt_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, duration_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, newFollowerCnt_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, hisViewerCnt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, generateHistorySucc_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getGenerateHistoryMsgBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, ticketBuyerCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, hisBeginLiveCnt_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, duration_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, newFollowerCnt_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EndLiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.EndLiveRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EndLiveRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EndLiveRsp)
        com.mi.liveassistant.proto.LiveProto.EndLiveRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.EndLiveRsp.class, com.mi.liveassistant.proto.LiveProto.EndLiveRsp.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.EndLiveRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        hisViewerCnt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        generateHistorySucc_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        generateHistoryMsg_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        ticketBuyerCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        hisBeginLiveCnt_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        duration_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        newFollowerCnt_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EndLiveRsp_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.EndLiveRsp getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.EndLiveRsp.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.EndLiveRsp build() {
        com.mi.liveassistant.proto.LiveProto.EndLiveRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.EndLiveRsp buildPartial() {
        com.mi.liveassistant.proto.LiveProto.EndLiveRsp result = new com.mi.liveassistant.proto.LiveProto.EndLiveRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hisViewerCnt_ = hisViewerCnt_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.generateHistorySucc_ = generateHistorySucc_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.generateHistoryMsg_ = generateHistoryMsg_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ticketBuyerCount_ = ticketBuyerCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.hisBeginLiveCnt_ = hisBeginLiveCnt_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.newFollowerCnt_ = newFollowerCnt_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.EndLiveRsp) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.EndLiveRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.EndLiveRsp other) {
        if (other == com.mi.liveassistant.proto.LiveProto.EndLiveRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        if (other.hasHisViewerCnt()) {
          setHisViewerCnt(other.getHisViewerCnt());
        }
        if (other.hasGenerateHistorySucc()) {
          setGenerateHistorySucc(other.getGenerateHistorySucc());
        }
        if (other.hasGenerateHistoryMsg()) {
          bitField0_ |= 0x00000008;
          generateHistoryMsg_ = other.generateHistoryMsg_;
          onChanged();
        }
        if (other.hasTicketBuyerCount()) {
          setTicketBuyerCount(other.getTicketBuyerCount());
        }
        if (other.hasHisBeginLiveCnt()) {
          setHisBeginLiveCnt(other.getHisBeginLiveCnt());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasNewFollowerCnt()) {
          setNewFollowerCnt(other.getNewFollowerCnt());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.EndLiveRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.EndLiveRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      private int hisViewerCnt_ ;
      /**
       * <code>optional uint32 hisViewerCnt = 2;</code>
       *
       * <pre>
       *历史房间观众数
       * </pre>
       */
      public boolean hasHisViewerCnt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 hisViewerCnt = 2;</code>
       *
       * <pre>
       *历史房间观众数
       * </pre>
       */
      public int getHisViewerCnt() {
        return hisViewerCnt_;
      }
      /**
       * <code>optional uint32 hisViewerCnt = 2;</code>
       *
       * <pre>
       *历史房间观众数
       * </pre>
       */
      public Builder setHisViewerCnt(int value) {
        bitField0_ |= 0x00000002;
        hisViewerCnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hisViewerCnt = 2;</code>
       *
       * <pre>
       *历史房间观众数
       * </pre>
       */
      public Builder clearHisViewerCnt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hisViewerCnt_ = 0;
        onChanged();
        return this;
      }

      private boolean generateHistorySucc_ ;
      /**
       * <code>optional bool generateHistorySucc = 3;</code>
       *
       * <pre>
       *是否生成历史回放
       * </pre>
       */
      public boolean hasGenerateHistorySucc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool generateHistorySucc = 3;</code>
       *
       * <pre>
       *是否生成历史回放
       * </pre>
       */
      public boolean getGenerateHistorySucc() {
        return generateHistorySucc_;
      }
      /**
       * <code>optional bool generateHistorySucc = 3;</code>
       *
       * <pre>
       *是否生成历史回放
       * </pre>
       */
      public Builder setGenerateHistorySucc(boolean value) {
        bitField0_ |= 0x00000004;
        generateHistorySucc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool generateHistorySucc = 3;</code>
       *
       * <pre>
       *是否生成历史回放
       * </pre>
       */
      public Builder clearGenerateHistorySucc() {
        bitField0_ = (bitField0_ & ~0x00000004);
        generateHistorySucc_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object generateHistoryMsg_ = "";
      /**
       * <code>optional string generateHistoryMsg = 4;</code>
       *
       * <pre>
       *如果没有生成回放的提示语
       * </pre>
       */
      public boolean hasGenerateHistoryMsg() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string generateHistoryMsg = 4;</code>
       *
       * <pre>
       *如果没有生成回放的提示语
       * </pre>
       */
      public java.lang.String getGenerateHistoryMsg() {
        java.lang.Object ref = generateHistoryMsg_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            generateHistoryMsg_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string generateHistoryMsg = 4;</code>
       *
       * <pre>
       *如果没有生成回放的提示语
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGenerateHistoryMsgBytes() {
        java.lang.Object ref = generateHistoryMsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          generateHistoryMsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string generateHistoryMsg = 4;</code>
       *
       * <pre>
       *如果没有生成回放的提示语
       * </pre>
       */
      public Builder setGenerateHistoryMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        generateHistoryMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string generateHistoryMsg = 4;</code>
       *
       * <pre>
       *如果没有生成回放的提示语
       * </pre>
       */
      public Builder clearGenerateHistoryMsg() {
        bitField0_ = (bitField0_ & ~0x00000008);
        generateHistoryMsg_ = getDefaultInstance().getGenerateHistoryMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string generateHistoryMsg = 4;</code>
       *
       * <pre>
       *如果没有生成回放的提示语
       * </pre>
       */
      public Builder setGenerateHistoryMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        generateHistoryMsg_ = value;
        onChanged();
        return this;
      }

      private int ticketBuyerCount_ ;
      /**
       * <code>optional uint32 ticketBuyerCount = 5;</code>
       *
       * <pre>
       *门票购买计数
       * </pre>
       */
      public boolean hasTicketBuyerCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 ticketBuyerCount = 5;</code>
       *
       * <pre>
       *门票购买计数
       * </pre>
       */
      public int getTicketBuyerCount() {
        return ticketBuyerCount_;
      }
      /**
       * <code>optional uint32 ticketBuyerCount = 5;</code>
       *
       * <pre>
       *门票购买计数
       * </pre>
       */
      public Builder setTicketBuyerCount(int value) {
        bitField0_ |= 0x00000010;
        ticketBuyerCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ticketBuyerCount = 5;</code>
       *
       * <pre>
       *门票购买计数
       * </pre>
       */
      public Builder clearTicketBuyerCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ticketBuyerCount_ = 0;
        onChanged();
        return this;
      }

      private long hisBeginLiveCnt_ ;
      /**
       * <code>optional uint64 hisBeginLiveCnt = 6;</code>
       *
       * <pre>
       *历史开播次数
       * </pre>
       */
      public boolean hasHisBeginLiveCnt() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 hisBeginLiveCnt = 6;</code>
       *
       * <pre>
       *历史开播次数
       * </pre>
       */
      public long getHisBeginLiveCnt() {
        return hisBeginLiveCnt_;
      }
      /**
       * <code>optional uint64 hisBeginLiveCnt = 6;</code>
       *
       * <pre>
       *历史开播次数
       * </pre>
       */
      public Builder setHisBeginLiveCnt(long value) {
        bitField0_ |= 0x00000020;
        hisBeginLiveCnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 hisBeginLiveCnt = 6;</code>
       *
       * <pre>
       *历史开播次数
       * </pre>
       */
      public Builder clearHisBeginLiveCnt() {
        bitField0_ = (bitField0_ & ~0x00000020);
        hisBeginLiveCnt_ = 0L;
        onChanged();
        return this;
      }

      private long duration_ ;
      /**
       * <code>optional uint64 duration = 7;</code>
       *
       * <pre>
       *开播时长（ms）
       * </pre>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 duration = 7;</code>
       *
       * <pre>
       *开播时长（ms）
       * </pre>
       */
      public long getDuration() {
        return duration_;
      }
      /**
       * <code>optional uint64 duration = 7;</code>
       *
       * <pre>
       *开播时长（ms）
       * </pre>
       */
      public Builder setDuration(long value) {
        bitField0_ |= 0x00000040;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 duration = 7;</code>
       *
       * <pre>
       *开播时长（ms）
       * </pre>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000040);
        duration_ = 0L;
        onChanged();
        return this;
      }

      private long newFollowerCnt_ ;
      /**
       * <code>optional uint64 newFollowerCnt = 8;</code>
       *
       * <pre>
       *新增关注数
       * </pre>
       */
      public boolean hasNewFollowerCnt() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 newFollowerCnt = 8;</code>
       *
       * <pre>
       *新增关注数
       * </pre>
       */
      public long getNewFollowerCnt() {
        return newFollowerCnt_;
      }
      /**
       * <code>optional uint64 newFollowerCnt = 8;</code>
       *
       * <pre>
       *新增关注数
       * </pre>
       */
      public Builder setNewFollowerCnt(long value) {
        bitField0_ |= 0x00000080;
        newFollowerCnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 newFollowerCnt = 8;</code>
       *
       * <pre>
       *新增关注数
       * </pre>
       */
      public Builder clearNewFollowerCnt() {
        bitField0_ = (bitField0_ & ~0x00000080);
        newFollowerCnt_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EndLiveRsp)
    }

    static {
      defaultInstance = new EndLiveRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EndLiveRsp)
  }

  public interface EnterLiveReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EnterLiveReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    boolean hasUuid();
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    long getUuid();

    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    boolean hasZuid();
    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    long getZuid();

    /**
     * <code>required string liveId = 3;</code>
     */
    boolean hasLiveId();
    /**
     * <code>required string liveId = 3;</code>
     */
    java.lang.String getLiveId();
    /**
     * <code>required string liveId = 3;</code>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *房间密码
     * </pre>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *房间密码
     * </pre>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *房间密码
     * </pre>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0：默认 1：通过附近频道进入
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0：默认 1：通过附近频道进入
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code EnterLiveReq}
   *
   * <pre>
   *进入房间
   *zhibo.live.enter
   * </pre>
   */
  public static final class EnterLiveReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:EnterLiveReq)
      EnterLiveReqOrBuilder {
    // Use EnterLiveReq.newBuilder() to construct.
    private EnterLiveReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EnterLiveReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EnterLiveReq defaultInstance;
    public static EnterLiveReq getDefaultInstance() {
      return defaultInstance;
    }

    public EnterLiveReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EnterLiveReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              zuid_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              liveId_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              password_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              type_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.EnterLiveReq.class, com.mi.liveassistant.proto.LiveProto.EnterLiveReq.Builder.class);
    }

    public static com.google.protobuf.Parser<EnterLiveReq> PARSER =
        new com.google.protobuf.AbstractParser<EnterLiveReq>() {
      public EnterLiveReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnterLiveReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EnterLiveReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private long uuid_;
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public long getUuid() {
      return uuid_;
    }

    public static final int ZUID_FIELD_NUMBER = 2;
    private long zuid_;
    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    public boolean hasZuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    public long getZuid() {
      return zuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 3;
    private java.lang.Object liveId_;
    /**
     * <code>required string liveId = 3;</code>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string liveId = 3;</code>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string liveId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 4;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *房间密码
     * </pre>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *房间密码
     * </pre>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 4;</code>
     *
     * <pre>
     *房间密码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0：默认 1：通过附近频道进入
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0：默认 1：通过附近频道进入
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      uuid_ = 0L;
      zuid_ = 0L;
      liveId_ = "";
      password_ = "";
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLiveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.EnterLiveReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EnterLiveReq}
     *
     * <pre>
     *进入房间
     *zhibo.live.enter
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EnterLiveReq)
        com.mi.liveassistant.proto.LiveProto.EnterLiveReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.EnterLiveReq.class, com.mi.liveassistant.proto.LiveProto.EnterLiveReq.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.EnterLiveReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        zuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveReq_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.EnterLiveReq getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.EnterLiveReq.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.EnterLiveReq build() {
        com.mi.liveassistant.proto.LiveProto.EnterLiveReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.EnterLiveReq buildPartial() {
        com.mi.liveassistant.proto.LiveProto.EnterLiveReq result = new com.mi.liveassistant.proto.LiveProto.EnterLiveReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.zuid_ = zuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.EnterLiveReq) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.EnterLiveReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.EnterLiveReq other) {
        if (other == com.mi.liveassistant.proto.LiveProto.EnterLiveReq.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasZuid()) {
          setZuid(other.getZuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000004;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000008;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasZuid()) {
          
          return false;
        }
        if (!hasLiveId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.EnterLiveReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.EnterLiveReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long uuid_ ;
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public long getUuid() {
        return uuid_;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder setUuid(long value) {
        bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = 0L;
        onChanged();
        return this;
      }

      private long zuid_ ;
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public boolean hasZuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public long getZuid() {
        return zuid_;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public Builder setZuid(long value) {
        bitField0_ |= 0x00000002;
        zuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public Builder clearZuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        zuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>required string liveId = 3;</code>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *房间密码
       * </pre>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *房间密码
       * </pre>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *房间密码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *房间密码
       * </pre>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *房间密码
       * </pre>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000008);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 4;</code>
       *
       * <pre>
       *房间密码
       * </pre>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        password_ = value;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0：默认 1：通过附近频道进入
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0：默认 1：通过附近频道进入
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0：默认 1：通过附近频道进入
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0：默认 1：通过附近频道进入
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EnterLiveReq)
    }

    static {
      defaultInstance = new EnterLiveReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EnterLiveReq)
  }

  public interface EnterLiveRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EnterLiveRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    int getRetCode();

    /**
     * <code>optional uint32 viewerCnt = 2;</code>
     *
     * <pre>
     *观众数
     * </pre>
     */
    boolean hasViewerCnt();
    /**
     * <code>optional uint32 viewerCnt = 2;</code>
     *
     * <pre>
     *观众数
     * </pre>
     */
    int getViewerCnt();

    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> 
        getViewerList();
    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.Viewer getViewer(int index);
    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    int getViewerCount();
    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> 
        getViewerOrBuilderList();
    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder getViewerOrBuilder(
        int index);

    /**
     * <code>optional bool isManager = 6;</code>
     *
     * <pre>
     *    optional UserInfo liveOwner     = 5;
     * </pre>
     */
    boolean hasIsManager();
    /**
     * <code>optional bool isManager = 6;</code>
     *
     * <pre>
     *    optional UserInfo liveOwner     = 5;
     * </pre>
     */
    boolean getIsManager();

    /**
     * <code>optional bool banSpeak = 7;</code>
     *
     * <pre>
     *是否被禁言了
     * </pre>
     */
    boolean hasBanSpeak();
    /**
     * <code>optional bool banSpeak = 7;</code>
     *
     * <pre>
     *是否被禁言了
     * </pre>
     */
    boolean getBanSpeak();

    /**
     * <code>optional .Location location = 8;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    boolean hasLocation();
    /**
     * <code>optional .Location location = 8;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.Location getLocation();
    /**
     * <code>optional .Location location = 8;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder getLocationOrBuilder();

    /**
     * <code>optional uint32 type = 9;</code>
     *
     * <pre>
     *类型，0公开，1私密, 2密码, 3门票直播
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional uint32 type = 9;</code>
     *
     * <pre>
     *类型，0公开，1私密, 2密码, 3门票直播
     * </pre>
     */
    int getType();

    /**
     * <code>optional string shareUrl = 10;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    boolean hasShareUrl();
    /**
     * <code>optional string shareUrl = 10;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    java.lang.String getShareUrl();
    /**
     * <code>optional string shareUrl = 10;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    com.google.protobuf.ByteString
        getShareUrlBytes();

    /**
     * <code>optional .PKInfo otherPKInfo = 11;</code>
     *
     * <pre>
     *如果在pk，则有此信息
     * </pre>
     */
    boolean hasOtherPKInfo();
    /**
     * <code>optional .PKInfo otherPKInfo = 11;</code>
     *
     * <pre>
     *如果在pk，则有此信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.PKInfo getOtherPKInfo();
    /**
     * <code>optional .PKInfo otherPKInfo = 11;</code>
     *
     * <pre>
     *如果在pk，则有此信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.PKInfoOrBuilder getOtherPKInfoOrBuilder();

    /**
     * <code>optional uint32 pkInitTicket = 12;</code>
     *
     * <pre>
     *主播pk初始票值
     * </pre>
     */
    boolean hasPkInitTicket();
    /**
     * <code>optional uint32 pkInitTicket = 12;</code>
     *
     * <pre>
     *主播pk初始票值
     * </pre>
     */
    int getPkInitTicket();

    /**
     * <code>optional string downStreamUrl = 13;</code>
     *
     * <pre>
     *完整的url拉流地址
     * </pre>
     */
    boolean hasDownStreamUrl();
    /**
     * <code>optional string downStreamUrl = 13;</code>
     *
     * <pre>
     *完整的url拉流地址
     * </pre>
     */
    java.lang.String getDownStreamUrl();
    /**
     * <code>optional string downStreamUrl = 13;</code>
     *
     * <pre>
     *完整的url拉流地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getDownStreamUrlBytes();

    /**
     * <code>optional .MicInfo micInfo = 14;</code>
     *
     * <pre>
     *连麦的信息，如果在连麦，则有此信息
     * </pre>
     */
    boolean hasMicInfo();
    /**
     * <code>optional .MicInfo micInfo = 14;</code>
     *
     * <pre>
     *连麦的信息，如果在连麦，则有此信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.MicInfo getMicInfo();
    /**
     * <code>optional .MicInfo micInfo = 14;</code>
     *
     * <pre>
     *连麦的信息，如果在连麦，则有此信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.MicInfoOrBuilder getMicInfoOrBuilder();

    /**
     * <code>optional uint32 micuidStatus = 15;</code>
     *
     * <pre>
     *连麦嘉宾状态， 0：正常， 1：连麦嘉宾退到后台
     * </pre>
     */
    boolean hasMicuidStatus();
    /**
     * <code>optional uint32 micuidStatus = 15;</code>
     *
     * <pre>
     *连麦嘉宾状态， 0：正常， 1：连麦嘉宾退到后台
     * </pre>
     */
    int getMicuidStatus();

    /**
     * <code>optional uint64 timestamp = 16;</code>
     *
     * <pre>
     *进房间时间戳(毫秒)
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint64 timestamp = 16;</code>
     *
     * <pre>
     *进房间时间戳(毫秒)
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>optional .LiveCover liveCover = 17;</code>
     *
     * <pre>
     *房间的封面信息
     * </pre>
     */
    boolean hasLiveCover();
    /**
     * <code>optional .LiveCover liveCover = 17;</code>
     *
     * <pre>
     *房间的封面信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.LiveCover getLiveCover();
    /**
     * <code>optional .LiveCover liveCover = 17;</code>
     *
     * <pre>
     *房间的封面信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder getLiveCoverOrBuilder();

    /**
     * <code>optional string liveTitle = 18;</code>
     *
     * <pre>
     *直播标题
     * </pre>
     */
    boolean hasLiveTitle();
    /**
     * <code>optional string liveTitle = 18;</code>
     *
     * <pre>
     *直播标题
     * </pre>
     */
    java.lang.String getLiveTitle();
    /**
     * <code>optional string liveTitle = 18;</code>
     *
     * <pre>
     *直播标题
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiveTitleBytes();

    /**
     * <code>optional int32 messageMode = 19;</code>
     *
     * <pre>
     *房间的弹幕拉状态位，0:push模型，1:pull模型
     * </pre>
     */
    boolean hasMessageMode();
    /**
     * <code>optional int32 messageMode = 19;</code>
     *
     * <pre>
     *房间的弹幕拉状态位，0:push模型，1:pull模型
     * </pre>
     */
    int getMessageMode();

    /**
     * <code>optional .MsgRule msgRule = 20;</code>
     *
     * <pre>
     *房间的发消息的规则
     * </pre>
     */
    boolean hasMsgRule();
    /**
     * <code>optional .MsgRule msgRule = 20;</code>
     *
     * <pre>
     *房间的发消息的规则
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.MsgRule getMsgRule();
    /**
     * <code>optional .MsgRule msgRule = 20;</code>
     *
     * <pre>
     *房间的发消息的规则
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.MsgRuleOrBuilder getMsgRuleOrBuilder();

    /**
     * <code>optional bool isShop = 21;</code>
     *
     * <pre>
     *是否是商铺房间，默认是false
     * </pre>
     */
    boolean hasIsShop();
    /**
     * <code>optional bool isShop = 21;</code>
     *
     * <pre>
     *是否是商铺房间，默认是false
     * </pre>
     */
    boolean getIsShop();

    /**
     * <code>optional bool hideGift = 22;</code>
     *
     * <pre>
     *是否是隐藏商品，默认是false
     * </pre>
     */
    boolean hasHideGift();
    /**
     * <code>optional bool hideGift = 22;</code>
     *
     * <pre>
     *是否是隐藏商品，默认是false
     * </pre>
     */
    boolean getHideGift();

    /**
     * <code>optional int32 hideIcon = 23;</code>
     *
     * <pre>
     *从最低位开始：1-是否隐藏发弹幕icon 2-是否隐藏私信icon 3-是否隐藏分享icon 4-是否隐藏礼物icon 5-是否隐藏点亮 （默认全不隐藏，该位为1时隐藏）
     * </pre>
     */
    boolean hasHideIcon();
    /**
     * <code>optional int32 hideIcon = 23;</code>
     *
     * <pre>
     *从最低位开始：1-是否隐藏发弹幕icon 2-是否隐藏私信icon 3-是否隐藏分享icon 4-是否隐藏礼物icon 5-是否隐藏点亮 （默认全不隐藏，该位为1时隐藏）
     * </pre>
     */
    int getHideIcon();

    /**
     * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
     *
     * <pre>
     *用户观看门票直播状态信息
     * </pre>
     */
    boolean hasTicketStatus();
    /**
     * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
     *
     * <pre>
     *用户观看门票直播状态信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus getTicketStatus();
    /**
     * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
     *
     * <pre>
     *用户观看门票直播状态信息
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatusOrBuilder getTicketStatusOrBuilder();

    /**
     * <code>optional bool supportMagicFace = 26;</code>
     *
     * <pre>
     *支持魔法表情
     * </pre>
     */
    boolean hasSupportMagicFace();
    /**
     * <code>optional bool supportMagicFace = 26;</code>
     *
     * <pre>
     *支持魔法表情
     * </pre>
     */
    boolean getSupportMagicFace();
  }
  /**
   * Protobuf type {@code EnterLiveRsp}
   */
  public static final class EnterLiveRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:EnterLiveRsp)
      EnterLiveRspOrBuilder {
    // Use EnterLiveRsp.newBuilder() to construct.
    private EnterLiveRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EnterLiveRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EnterLiveRsp defaultInstance;
    public static EnterLiveRsp getDefaultInstance() {
      return defaultInstance;
    }

    public EnterLiveRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EnterLiveRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              viewerCnt_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                viewer_ = new java.util.ArrayList<com.mi.liveassistant.proto.LiveCommonProto.Viewer>();
                mutable_bitField0_ |= 0x00000004;
              }
              viewer_.add(input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.Viewer.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000004;
              isManager_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              banSpeak_ = input.readBool();
              break;
            }
            case 66: {
              com.mi.liveassistant.proto.LiveCommonProto.Location.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.Location.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              type_ = input.readUInt32();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              shareUrl_ = bs;
              break;
            }
            case 90: {
              com.mi.liveassistant.proto.LiveCommonProto.PKInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = otherPKInfo_.toBuilder();
              }
              otherPKInfo_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.PKInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(otherPKInfo_);
                otherPKInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              pkInitTicket_ = input.readUInt32();
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              downStreamUrl_ = bs;
              break;
            }
            case 114: {
              com.mi.liveassistant.proto.LiveCommonProto.MicInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = micInfo_.toBuilder();
              }
              micInfo_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.MicInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(micInfo_);
                micInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 120: {
              bitField0_ |= 0x00000800;
              micuidStatus_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00001000;
              timestamp_ = input.readUInt64();
              break;
            }
            case 138: {
              com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = liveCover_.toBuilder();
              }
              liveCover_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.LiveCover.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(liveCover_);
                liveCover_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 146: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              liveTitle_ = bs;
              break;
            }
            case 152: {
              bitField0_ |= 0x00008000;
              messageMode_ = input.readInt32();
              break;
            }
            case 162: {
              com.mi.liveassistant.proto.LiveCommonProto.MsgRule.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = msgRule_.toBuilder();
              }
              msgRule_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.MsgRule.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(msgRule_);
                msgRule_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 168: {
              bitField0_ |= 0x00020000;
              isShop_ = input.readBool();
              break;
            }
            case 176: {
              bitField0_ |= 0x00040000;
              hideGift_ = input.readBool();
              break;
            }
            case 184: {
              bitField0_ |= 0x00080000;
              hideIcon_ = input.readInt32();
              break;
            }
            case 194: {
              com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = ticketStatus_.toBuilder();
              }
              ticketStatus_ = input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ticketStatus_);
                ticketStatus_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 208: {
              bitField0_ |= 0x00200000;
              supportMagicFace_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          viewer_ = java.util.Collections.unmodifiableList(viewer_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.EnterLiveRsp.class, com.mi.liveassistant.proto.LiveProto.EnterLiveRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<EnterLiveRsp> PARSER =
        new com.google.protobuf.AbstractParser<EnterLiveRsp>() {
      public EnterLiveRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnterLiveRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EnterLiveRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    public static final int VIEWERCNT_FIELD_NUMBER = 2;
    private int viewerCnt_;
    /**
     * <code>optional uint32 viewerCnt = 2;</code>
     *
     * <pre>
     *观众数
     * </pre>
     */
    public boolean hasViewerCnt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 viewerCnt = 2;</code>
     *
     * <pre>
     *观众数
     * </pre>
     */
    public int getViewerCnt() {
      return viewerCnt_;
    }

    public static final int VIEWER_FIELD_NUMBER = 4;
    private java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> viewer_;
    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> getViewerList() {
      return viewer_;
    }
    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    public java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> 
        getViewerOrBuilderList() {
      return viewer_;
    }
    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    public int getViewerCount() {
      return viewer_.size();
    }
    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.Viewer getViewer(int index) {
      return viewer_.get(index);
    }
    /**
     * <code>repeated .Viewer viewer = 4;</code>
     *
     * <pre>
     *    optional uint32 ticket          = 3; //票数
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder getViewerOrBuilder(
        int index) {
      return viewer_.get(index);
    }

    public static final int ISMANAGER_FIELD_NUMBER = 6;
    private boolean isManager_;
    /**
     * <code>optional bool isManager = 6;</code>
     *
     * <pre>
     *    optional UserInfo liveOwner     = 5;
     * </pre>
     */
    public boolean hasIsManager() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool isManager = 6;</code>
     *
     * <pre>
     *    optional UserInfo liveOwner     = 5;
     * </pre>
     */
    public boolean getIsManager() {
      return isManager_;
    }

    public static final int BANSPEAK_FIELD_NUMBER = 7;
    private boolean banSpeak_;
    /**
     * <code>optional bool banSpeak = 7;</code>
     *
     * <pre>
     *是否被禁言了
     * </pre>
     */
    public boolean hasBanSpeak() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool banSpeak = 7;</code>
     *
     * <pre>
     *是否被禁言了
     * </pre>
     */
    public boolean getBanSpeak() {
      return banSpeak_;
    }

    public static final int LOCATION_FIELD_NUMBER = 8;
    private com.mi.liveassistant.proto.LiveCommonProto.Location location_;
    /**
     * <code>optional .Location location = 8;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .Location location = 8;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.Location getLocation() {
      return location_;
    }
    /**
     * <code>optional .Location location = 8;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder getLocationOrBuilder() {
      return location_;
    }

    public static final int TYPE_FIELD_NUMBER = 9;
    private int type_;
    /**
     * <code>optional uint32 type = 9;</code>
     *
     * <pre>
     *类型，0公开，1私密, 2密码, 3门票直播
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 type = 9;</code>
     *
     * <pre>
     *类型，0公开，1私密, 2密码, 3门票直播
     * </pre>
     */
    public int getType() {
      return type_;
    }

    public static final int SHAREURL_FIELD_NUMBER = 10;
    private java.lang.Object shareUrl_;
    /**
     * <code>optional string shareUrl = 10;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    public boolean hasShareUrl() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string shareUrl = 10;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    public java.lang.String getShareUrl() {
      java.lang.Object ref = shareUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          shareUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string shareUrl = 10;</code>
     *
     * <pre>
     *分享的url
     * </pre>
     */
    public com.google.protobuf.ByteString
        getShareUrlBytes() {
      java.lang.Object ref = shareUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shareUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OTHERPKINFO_FIELD_NUMBER = 11;
    private com.mi.liveassistant.proto.LiveCommonProto.PKInfo otherPKInfo_;
    /**
     * <code>optional .PKInfo otherPKInfo = 11;</code>
     *
     * <pre>
     *如果在pk，则有此信息
     * </pre>
     */
    public boolean hasOtherPKInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .PKInfo otherPKInfo = 11;</code>
     *
     * <pre>
     *如果在pk，则有此信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.PKInfo getOtherPKInfo() {
      return otherPKInfo_;
    }
    /**
     * <code>optional .PKInfo otherPKInfo = 11;</code>
     *
     * <pre>
     *如果在pk，则有此信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.PKInfoOrBuilder getOtherPKInfoOrBuilder() {
      return otherPKInfo_;
    }

    public static final int PKINITTICKET_FIELD_NUMBER = 12;
    private int pkInitTicket_;
    /**
     * <code>optional uint32 pkInitTicket = 12;</code>
     *
     * <pre>
     *主播pk初始票值
     * </pre>
     */
    public boolean hasPkInitTicket() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 pkInitTicket = 12;</code>
     *
     * <pre>
     *主播pk初始票值
     * </pre>
     */
    public int getPkInitTicket() {
      return pkInitTicket_;
    }

    public static final int DOWNSTREAMURL_FIELD_NUMBER = 13;
    private java.lang.Object downStreamUrl_;
    /**
     * <code>optional string downStreamUrl = 13;</code>
     *
     * <pre>
     *完整的url拉流地址
     * </pre>
     */
    public boolean hasDownStreamUrl() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string downStreamUrl = 13;</code>
     *
     * <pre>
     *完整的url拉流地址
     * </pre>
     */
    public java.lang.String getDownStreamUrl() {
      java.lang.Object ref = downStreamUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          downStreamUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string downStreamUrl = 13;</code>
     *
     * <pre>
     *完整的url拉流地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDownStreamUrlBytes() {
      java.lang.Object ref = downStreamUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        downStreamUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MICINFO_FIELD_NUMBER = 14;
    private com.mi.liveassistant.proto.LiveCommonProto.MicInfo micInfo_;
    /**
     * <code>optional .MicInfo micInfo = 14;</code>
     *
     * <pre>
     *连麦的信息，如果在连麦，则有此信息
     * </pre>
     */
    public boolean hasMicInfo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .MicInfo micInfo = 14;</code>
     *
     * <pre>
     *连麦的信息，如果在连麦，则有此信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.MicInfo getMicInfo() {
      return micInfo_;
    }
    /**
     * <code>optional .MicInfo micInfo = 14;</code>
     *
     * <pre>
     *连麦的信息，如果在连麦，则有此信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.MicInfoOrBuilder getMicInfoOrBuilder() {
      return micInfo_;
    }

    public static final int MICUIDSTATUS_FIELD_NUMBER = 15;
    private int micuidStatus_;
    /**
     * <code>optional uint32 micuidStatus = 15;</code>
     *
     * <pre>
     *连麦嘉宾状态， 0：正常， 1：连麦嘉宾退到后台
     * </pre>
     */
    public boolean hasMicuidStatus() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 micuidStatus = 15;</code>
     *
     * <pre>
     *连麦嘉宾状态， 0：正常， 1：连麦嘉宾退到后台
     * </pre>
     */
    public int getMicuidStatus() {
      return micuidStatus_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 16;
    private long timestamp_;
    /**
     * <code>optional uint64 timestamp = 16;</code>
     *
     * <pre>
     *进房间时间戳(毫秒)
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint64 timestamp = 16;</code>
     *
     * <pre>
     *进房间时间戳(毫秒)
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int LIVECOVER_FIELD_NUMBER = 17;
    private com.mi.liveassistant.proto.LiveCommonProto.LiveCover liveCover_;
    /**
     * <code>optional .LiveCover liveCover = 17;</code>
     *
     * <pre>
     *房间的封面信息
     * </pre>
     */
    public boolean hasLiveCover() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .LiveCover liveCover = 17;</code>
     *
     * <pre>
     *房间的封面信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.LiveCover getLiveCover() {
      return liveCover_;
    }
    /**
     * <code>optional .LiveCover liveCover = 17;</code>
     *
     * <pre>
     *房间的封面信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder getLiveCoverOrBuilder() {
      return liveCover_;
    }

    public static final int LIVETITLE_FIELD_NUMBER = 18;
    private java.lang.Object liveTitle_;
    /**
     * <code>optional string liveTitle = 18;</code>
     *
     * <pre>
     *直播标题
     * </pre>
     */
    public boolean hasLiveTitle() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string liveTitle = 18;</code>
     *
     * <pre>
     *直播标题
     * </pre>
     */
    public java.lang.String getLiveTitle() {
      java.lang.Object ref = liveTitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveTitle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string liveTitle = 18;</code>
     *
     * <pre>
     *直播标题
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiveTitleBytes() {
      java.lang.Object ref = liveTitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveTitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGEMODE_FIELD_NUMBER = 19;
    private int messageMode_;
    /**
     * <code>optional int32 messageMode = 19;</code>
     *
     * <pre>
     *房间的弹幕拉状态位，0:push模型，1:pull模型
     * </pre>
     */
    public boolean hasMessageMode() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 messageMode = 19;</code>
     *
     * <pre>
     *房间的弹幕拉状态位，0:push模型，1:pull模型
     * </pre>
     */
    public int getMessageMode() {
      return messageMode_;
    }

    public static final int MSGRULE_FIELD_NUMBER = 20;
    private com.mi.liveassistant.proto.LiveCommonProto.MsgRule msgRule_;
    /**
     * <code>optional .MsgRule msgRule = 20;</code>
     *
     * <pre>
     *房间的发消息的规则
     * </pre>
     */
    public boolean hasMsgRule() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .MsgRule msgRule = 20;</code>
     *
     * <pre>
     *房间的发消息的规则
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.MsgRule getMsgRule() {
      return msgRule_;
    }
    /**
     * <code>optional .MsgRule msgRule = 20;</code>
     *
     * <pre>
     *房间的发消息的规则
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.MsgRuleOrBuilder getMsgRuleOrBuilder() {
      return msgRule_;
    }

    public static final int ISSHOP_FIELD_NUMBER = 21;
    private boolean isShop_;
    /**
     * <code>optional bool isShop = 21;</code>
     *
     * <pre>
     *是否是商铺房间，默认是false
     * </pre>
     */
    public boolean hasIsShop() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool isShop = 21;</code>
     *
     * <pre>
     *是否是商铺房间，默认是false
     * </pre>
     */
    public boolean getIsShop() {
      return isShop_;
    }

    public static final int HIDEGIFT_FIELD_NUMBER = 22;
    private boolean hideGift_;
    /**
     * <code>optional bool hideGift = 22;</code>
     *
     * <pre>
     *是否是隐藏商品，默认是false
     * </pre>
     */
    public boolean hasHideGift() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool hideGift = 22;</code>
     *
     * <pre>
     *是否是隐藏商品，默认是false
     * </pre>
     */
    public boolean getHideGift() {
      return hideGift_;
    }

    public static final int HIDEICON_FIELD_NUMBER = 23;
    private int hideIcon_;
    /**
     * <code>optional int32 hideIcon = 23;</code>
     *
     * <pre>
     *从最低位开始：1-是否隐藏发弹幕icon 2-是否隐藏私信icon 3-是否隐藏分享icon 4-是否隐藏礼物icon 5-是否隐藏点亮 （默认全不隐藏，该位为1时隐藏）
     * </pre>
     */
    public boolean hasHideIcon() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 hideIcon = 23;</code>
     *
     * <pre>
     *从最低位开始：1-是否隐藏发弹幕icon 2-是否隐藏私信icon 3-是否隐藏分享icon 4-是否隐藏礼物icon 5-是否隐藏点亮 （默认全不隐藏，该位为1时隐藏）
     * </pre>
     */
    public int getHideIcon() {
      return hideIcon_;
    }

    public static final int TICKETSTATUS_FIELD_NUMBER = 24;
    private com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus ticketStatus_;
    /**
     * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
     *
     * <pre>
     *用户观看门票直播状态信息
     * </pre>
     */
    public boolean hasTicketStatus() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
     *
     * <pre>
     *用户观看门票直播状态信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus getTicketStatus() {
      return ticketStatus_;
    }
    /**
     * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
     *
     * <pre>
     *用户观看门票直播状态信息
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatusOrBuilder getTicketStatusOrBuilder() {
      return ticketStatus_;
    }

    public static final int SUPPORTMAGICFACE_FIELD_NUMBER = 26;
    private boolean supportMagicFace_;
    /**
     * <code>optional bool supportMagicFace = 26;</code>
     *
     * <pre>
     *支持魔法表情
     * </pre>
     */
    public boolean hasSupportMagicFace() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional bool supportMagicFace = 26;</code>
     *
     * <pre>
     *支持魔法表情
     * </pre>
     */
    public boolean getSupportMagicFace() {
      return supportMagicFace_;
    }

    private void initFields() {
      retCode_ = 0;
      viewerCnt_ = 0;
      viewer_ = java.util.Collections.emptyList();
      isManager_ = false;
      banSpeak_ = false;
      location_ = com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance();
      type_ = 0;
      shareUrl_ = "";
      otherPKInfo_ = com.mi.liveassistant.proto.LiveCommonProto.PKInfo.getDefaultInstance();
      pkInitTicket_ = 0;
      downStreamUrl_ = "";
      micInfo_ = com.mi.liveassistant.proto.LiveCommonProto.MicInfo.getDefaultInstance();
      micuidStatus_ = 0;
      timestamp_ = 0L;
      liveCover_ = com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance();
      liveTitle_ = "";
      messageMode_ = 0;
      msgRule_ = com.mi.liveassistant.proto.LiveCommonProto.MsgRule.getDefaultInstance();
      isShop_ = false;
      hideGift_ = false;
      hideIcon_ = 0;
      ticketStatus_ = com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.getDefaultInstance();
      supportMagicFace_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getViewerCount(); i++) {
        if (!getViewer(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMicInfo()) {
        if (!getMicInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, viewerCnt_);
      }
      for (int i = 0; i < viewer_.size(); i++) {
        output.writeMessage(4, viewer_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(6, isManager_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(7, banSpeak_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(8, location_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(9, type_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(10, getShareUrlBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(11, otherPKInfo_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(12, pkInitTicket_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(13, getDownStreamUrlBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(14, micInfo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(15, micuidStatus_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt64(16, timestamp_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(17, liveCover_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(18, getLiveTitleBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(19, messageMode_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(20, msgRule_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(21, isShop_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(22, hideGift_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(23, hideIcon_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(24, ticketStatus_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBool(26, supportMagicFace_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, viewerCnt_);
      }
      for (int i = 0; i < viewer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, viewer_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isManager_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, banSpeak_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, location_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, type_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getShareUrlBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, otherPKInfo_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, pkInitTicket_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getDownStreamUrlBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, micInfo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, micuidStatus_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, timestamp_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, liveCover_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getLiveTitleBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, messageMode_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, msgRule_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, isShop_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, hideGift_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, hideIcon_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, ticketStatus_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, supportMagicFace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.EnterLiveRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EnterLiveRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EnterLiveRsp)
        com.mi.liveassistant.proto.LiveProto.EnterLiveRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.EnterLiveRsp.class, com.mi.liveassistant.proto.LiveProto.EnterLiveRsp.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.EnterLiveRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getViewerFieldBuilder();
          getLocationFieldBuilder();
          getOtherPKInfoFieldBuilder();
          getMicInfoFieldBuilder();
          getLiveCoverFieldBuilder();
          getMsgRuleFieldBuilder();
          getTicketStatusFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        viewerCnt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (viewerBuilder_ == null) {
          viewer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          viewerBuilder_.clear();
        }
        isManager_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        banSpeak_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (locationBuilder_ == null) {
          location_ = com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        shareUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        if (otherPKInfoBuilder_ == null) {
          otherPKInfo_ = com.mi.liveassistant.proto.LiveCommonProto.PKInfo.getDefaultInstance();
        } else {
          otherPKInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        pkInitTicket_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        downStreamUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        if (micInfoBuilder_ == null) {
          micInfo_ = com.mi.liveassistant.proto.LiveCommonProto.MicInfo.getDefaultInstance();
        } else {
          micInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        micuidStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        if (liveCoverBuilder_ == null) {
          liveCover_ = com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance();
        } else {
          liveCoverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        liveTitle_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        messageMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        if (msgRuleBuilder_ == null) {
          msgRule_ = com.mi.liveassistant.proto.LiveCommonProto.MsgRule.getDefaultInstance();
        } else {
          msgRuleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        isShop_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        hideGift_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        hideIcon_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        if (ticketStatusBuilder_ == null) {
          ticketStatus_ = com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.getDefaultInstance();
        } else {
          ticketStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        supportMagicFace_ = false;
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_EnterLiveRsp_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.EnterLiveRsp getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.EnterLiveRsp.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.EnterLiveRsp build() {
        com.mi.liveassistant.proto.LiveProto.EnterLiveRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.EnterLiveRsp buildPartial() {
        com.mi.liveassistant.proto.LiveProto.EnterLiveRsp result = new com.mi.liveassistant.proto.LiveProto.EnterLiveRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.viewerCnt_ = viewerCnt_;
        if (viewerBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            viewer_ = java.util.Collections.unmodifiableList(viewer_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.viewer_ = viewer_;
        } else {
          result.viewer_ = viewerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isManager_ = isManager_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.banSpeak_ = banSpeak_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.shareUrl_ = shareUrl_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        if (otherPKInfoBuilder_ == null) {
          result.otherPKInfo_ = otherPKInfo_;
        } else {
          result.otherPKInfo_ = otherPKInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pkInitTicket_ = pkInitTicket_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.downStreamUrl_ = downStreamUrl_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        if (micInfoBuilder_ == null) {
          result.micInfo_ = micInfo_;
        } else {
          result.micInfo_ = micInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.micuidStatus_ = micuidStatus_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (liveCoverBuilder_ == null) {
          result.liveCover_ = liveCover_;
        } else {
          result.liveCover_ = liveCoverBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.liveTitle_ = liveTitle_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.messageMode_ = messageMode_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (msgRuleBuilder_ == null) {
          result.msgRule_ = msgRule_;
        } else {
          result.msgRule_ = msgRuleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.isShop_ = isShop_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.hideGift_ = hideGift_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.hideIcon_ = hideIcon_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (ticketStatusBuilder_ == null) {
          result.ticketStatus_ = ticketStatus_;
        } else {
          result.ticketStatus_ = ticketStatusBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.supportMagicFace_ = supportMagicFace_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.EnterLiveRsp) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.EnterLiveRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.EnterLiveRsp other) {
        if (other == com.mi.liveassistant.proto.LiveProto.EnterLiveRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        if (other.hasViewerCnt()) {
          setViewerCnt(other.getViewerCnt());
        }
        if (viewerBuilder_ == null) {
          if (!other.viewer_.isEmpty()) {
            if (viewer_.isEmpty()) {
              viewer_ = other.viewer_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureViewerIsMutable();
              viewer_.addAll(other.viewer_);
            }
            onChanged();
          }
        } else {
          if (!other.viewer_.isEmpty()) {
            if (viewerBuilder_.isEmpty()) {
              viewerBuilder_.dispose();
              viewerBuilder_ = null;
              viewer_ = other.viewer_;
              bitField0_ = (bitField0_ & ~0x00000004);
              viewerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getViewerFieldBuilder() : null;
            } else {
              viewerBuilder_.addAllMessages(other.viewer_);
            }
          }
        }
        if (other.hasIsManager()) {
          setIsManager(other.getIsManager());
        }
        if (other.hasBanSpeak()) {
          setBanSpeak(other.getBanSpeak());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasShareUrl()) {
          bitField0_ |= 0x00000080;
          shareUrl_ = other.shareUrl_;
          onChanged();
        }
        if (other.hasOtherPKInfo()) {
          mergeOtherPKInfo(other.getOtherPKInfo());
        }
        if (other.hasPkInitTicket()) {
          setPkInitTicket(other.getPkInitTicket());
        }
        if (other.hasDownStreamUrl()) {
          bitField0_ |= 0x00000400;
          downStreamUrl_ = other.downStreamUrl_;
          onChanged();
        }
        if (other.hasMicInfo()) {
          mergeMicInfo(other.getMicInfo());
        }
        if (other.hasMicuidStatus()) {
          setMicuidStatus(other.getMicuidStatus());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasLiveCover()) {
          mergeLiveCover(other.getLiveCover());
        }
        if (other.hasLiveTitle()) {
          bitField0_ |= 0x00008000;
          liveTitle_ = other.liveTitle_;
          onChanged();
        }
        if (other.hasMessageMode()) {
          setMessageMode(other.getMessageMode());
        }
        if (other.hasMsgRule()) {
          mergeMsgRule(other.getMsgRule());
        }
        if (other.hasIsShop()) {
          setIsShop(other.getIsShop());
        }
        if (other.hasHideGift()) {
          setHideGift(other.getHideGift());
        }
        if (other.hasHideIcon()) {
          setHideIcon(other.getHideIcon());
        }
        if (other.hasTicketStatus()) {
          mergeTicketStatus(other.getTicketStatus());
        }
        if (other.hasSupportMagicFace()) {
          setSupportMagicFace(other.getSupportMagicFace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        for (int i = 0; i < getViewerCount(); i++) {
          if (!getViewer(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasMicInfo()) {
          if (!getMicInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.EnterLiveRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.EnterLiveRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      private int viewerCnt_ ;
      /**
       * <code>optional uint32 viewerCnt = 2;</code>
       *
       * <pre>
       *观众数
       * </pre>
       */
      public boolean hasViewerCnt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 viewerCnt = 2;</code>
       *
       * <pre>
       *观众数
       * </pre>
       */
      public int getViewerCnt() {
        return viewerCnt_;
      }
      /**
       * <code>optional uint32 viewerCnt = 2;</code>
       *
       * <pre>
       *观众数
       * </pre>
       */
      public Builder setViewerCnt(int value) {
        bitField0_ |= 0x00000002;
        viewerCnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 viewerCnt = 2;</code>
       *
       * <pre>
       *观众数
       * </pre>
       */
      public Builder clearViewerCnt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        viewerCnt_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> viewer_ =
        java.util.Collections.emptyList();
      private void ensureViewerIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          viewer_ = new java.util.ArrayList<com.mi.liveassistant.proto.LiveCommonProto.Viewer>(viewer_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.Viewer, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder, com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> viewerBuilder_;

      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> getViewerList() {
        if (viewerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(viewer_);
        } else {
          return viewerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public int getViewerCount() {
        if (viewerBuilder_ == null) {
          return viewer_.size();
        } else {
          return viewerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Viewer getViewer(int index) {
        if (viewerBuilder_ == null) {
          return viewer_.get(index);
        } else {
          return viewerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public Builder setViewer(
          int index, com.mi.liveassistant.proto.LiveCommonProto.Viewer value) {
        if (viewerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewerIsMutable();
          viewer_.set(index, value);
          onChanged();
        } else {
          viewerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public Builder setViewer(
          int index, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder builderForValue) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          viewer_.set(index, builderForValue.build());
          onChanged();
        } else {
          viewerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public Builder addViewer(com.mi.liveassistant.proto.LiveCommonProto.Viewer value) {
        if (viewerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewerIsMutable();
          viewer_.add(value);
          onChanged();
        } else {
          viewerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public Builder addViewer(
          int index, com.mi.liveassistant.proto.LiveCommonProto.Viewer value) {
        if (viewerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewerIsMutable();
          viewer_.add(index, value);
          onChanged();
        } else {
          viewerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public Builder addViewer(
          com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder builderForValue) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          viewer_.add(builderForValue.build());
          onChanged();
        } else {
          viewerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public Builder addViewer(
          int index, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder builderForValue) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          viewer_.add(index, builderForValue.build());
          onChanged();
        } else {
          viewerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public Builder addAllViewer(
          java.lang.Iterable<? extends com.mi.liveassistant.proto.LiveCommonProto.Viewer> values) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, viewer_);
          onChanged();
        } else {
          viewerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public Builder clearViewer() {
        if (viewerBuilder_ == null) {
          viewer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          viewerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public Builder removeViewer(int index) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          viewer_.remove(index);
          onChanged();
        } else {
          viewerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder getViewerBuilder(
          int index) {
        return getViewerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder getViewerOrBuilder(
          int index) {
        if (viewerBuilder_ == null) {
          return viewer_.get(index);  } else {
          return viewerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> 
           getViewerOrBuilderList() {
        if (viewerBuilder_ != null) {
          return viewerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(viewer_);
        }
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder addViewerBuilder() {
        return getViewerFieldBuilder().addBuilder(
            com.mi.liveassistant.proto.LiveCommonProto.Viewer.getDefaultInstance());
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder addViewerBuilder(
          int index) {
        return getViewerFieldBuilder().addBuilder(
            index, com.mi.liveassistant.proto.LiveCommonProto.Viewer.getDefaultInstance());
      }
      /**
       * <code>repeated .Viewer viewer = 4;</code>
       *
       * <pre>
       *    optional uint32 ticket          = 3; //票数
       * </pre>
       */
      public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder> 
           getViewerBuilderList() {
        return getViewerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.Viewer, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder, com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> 
          getViewerFieldBuilder() {
        if (viewerBuilder_ == null) {
          viewerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.Viewer, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder, com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder>(
                  viewer_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          viewer_ = null;
        }
        return viewerBuilder_;
      }

      private boolean isManager_ ;
      /**
       * <code>optional bool isManager = 6;</code>
       *
       * <pre>
       *    optional UserInfo liveOwner     = 5;
       * </pre>
       */
      public boolean hasIsManager() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool isManager = 6;</code>
       *
       * <pre>
       *    optional UserInfo liveOwner     = 5;
       * </pre>
       */
      public boolean getIsManager() {
        return isManager_;
      }
      /**
       * <code>optional bool isManager = 6;</code>
       *
       * <pre>
       *    optional UserInfo liveOwner     = 5;
       * </pre>
       */
      public Builder setIsManager(boolean value) {
        bitField0_ |= 0x00000008;
        isManager_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isManager = 6;</code>
       *
       * <pre>
       *    optional UserInfo liveOwner     = 5;
       * </pre>
       */
      public Builder clearIsManager() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isManager_ = false;
        onChanged();
        return this;
      }

      private boolean banSpeak_ ;
      /**
       * <code>optional bool banSpeak = 7;</code>
       *
       * <pre>
       *是否被禁言了
       * </pre>
       */
      public boolean hasBanSpeak() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool banSpeak = 7;</code>
       *
       * <pre>
       *是否被禁言了
       * </pre>
       */
      public boolean getBanSpeak() {
        return banSpeak_;
      }
      /**
       * <code>optional bool banSpeak = 7;</code>
       *
       * <pre>
       *是否被禁言了
       * </pre>
       */
      public Builder setBanSpeak(boolean value) {
        bitField0_ |= 0x00000010;
        banSpeak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool banSpeak = 7;</code>
       *
       * <pre>
       *是否被禁言了
       * </pre>
       */
      public Builder clearBanSpeak() {
        bitField0_ = (bitField0_ & ~0x00000010);
        banSpeak_ = false;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.Location location_ = com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.Location, com.mi.liveassistant.proto.LiveCommonProto.Location.Builder, com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder> locationBuilder_;
      /**
       * <code>optional .Location location = 8;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .Location location = 8;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Location location = 8;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setLocation(com.mi.liveassistant.proto.LiveCommonProto.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Location location = 8;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setLocation(
          com.mi.liveassistant.proto.LiveCommonProto.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Location location = 8;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder mergeLocation(com.mi.liveassistant.proto.LiveCommonProto.Location value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              location_ != com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance()) {
            location_ =
              com.mi.liveassistant.proto.LiveCommonProto.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Location location = 8;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = com.mi.liveassistant.proto.LiveCommonProto.Location.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .Location location = 8;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Location.Builder getLocationBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Location location = 8;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>optional .Location location = 8;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.Location, com.mi.liveassistant.proto.LiveCommonProto.Location.Builder, com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.Location, com.mi.liveassistant.proto.LiveCommonProto.Location.Builder, com.mi.liveassistant.proto.LiveCommonProto.LocationOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private int type_ ;
      /**
       * <code>optional uint32 type = 9;</code>
       *
       * <pre>
       *类型，0公开，1私密, 2密码, 3门票直播
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 type = 9;</code>
       *
       * <pre>
       *类型，0公开，1私密, 2密码, 3门票直播
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional uint32 type = 9;</code>
       *
       * <pre>
       *类型，0公开，1私密, 2密码, 3门票直播
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000040;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 type = 9;</code>
       *
       * <pre>
       *类型，0公开，1私密, 2密码, 3门票直播
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object shareUrl_ = "";
      /**
       * <code>optional string shareUrl = 10;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public boolean hasShareUrl() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string shareUrl = 10;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public java.lang.String getShareUrl() {
        java.lang.Object ref = shareUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            shareUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string shareUrl = 10;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public com.google.protobuf.ByteString
          getShareUrlBytes() {
        java.lang.Object ref = shareUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shareUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string shareUrl = 10;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public Builder setShareUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        shareUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string shareUrl = 10;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public Builder clearShareUrl() {
        bitField0_ = (bitField0_ & ~0x00000080);
        shareUrl_ = getDefaultInstance().getShareUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string shareUrl = 10;</code>
       *
       * <pre>
       *分享的url
       * </pre>
       */
      public Builder setShareUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        shareUrl_ = value;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.PKInfo otherPKInfo_ = com.mi.liveassistant.proto.LiveCommonProto.PKInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.PKInfo, com.mi.liveassistant.proto.LiveCommonProto.PKInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.PKInfoOrBuilder> otherPKInfoBuilder_;
      /**
       * <code>optional .PKInfo otherPKInfo = 11;</code>
       *
       * <pre>
       *如果在pk，则有此信息
       * </pre>
       */
      public boolean hasOtherPKInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .PKInfo otherPKInfo = 11;</code>
       *
       * <pre>
       *如果在pk，则有此信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.PKInfo getOtherPKInfo() {
        if (otherPKInfoBuilder_ == null) {
          return otherPKInfo_;
        } else {
          return otherPKInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PKInfo otherPKInfo = 11;</code>
       *
       * <pre>
       *如果在pk，则有此信息
       * </pre>
       */
      public Builder setOtherPKInfo(com.mi.liveassistant.proto.LiveCommonProto.PKInfo value) {
        if (otherPKInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          otherPKInfo_ = value;
          onChanged();
        } else {
          otherPKInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .PKInfo otherPKInfo = 11;</code>
       *
       * <pre>
       *如果在pk，则有此信息
       * </pre>
       */
      public Builder setOtherPKInfo(
          com.mi.liveassistant.proto.LiveCommonProto.PKInfo.Builder builderForValue) {
        if (otherPKInfoBuilder_ == null) {
          otherPKInfo_ = builderForValue.build();
          onChanged();
        } else {
          otherPKInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .PKInfo otherPKInfo = 11;</code>
       *
       * <pre>
       *如果在pk，则有此信息
       * </pre>
       */
      public Builder mergeOtherPKInfo(com.mi.liveassistant.proto.LiveCommonProto.PKInfo value) {
        if (otherPKInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              otherPKInfo_ != com.mi.liveassistant.proto.LiveCommonProto.PKInfo.getDefaultInstance()) {
            otherPKInfo_ =
              com.mi.liveassistant.proto.LiveCommonProto.PKInfo.newBuilder(otherPKInfo_).mergeFrom(value).buildPartial();
          } else {
            otherPKInfo_ = value;
          }
          onChanged();
        } else {
          otherPKInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .PKInfo otherPKInfo = 11;</code>
       *
       * <pre>
       *如果在pk，则有此信息
       * </pre>
       */
      public Builder clearOtherPKInfo() {
        if (otherPKInfoBuilder_ == null) {
          otherPKInfo_ = com.mi.liveassistant.proto.LiveCommonProto.PKInfo.getDefaultInstance();
          onChanged();
        } else {
          otherPKInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .PKInfo otherPKInfo = 11;</code>
       *
       * <pre>
       *如果在pk，则有此信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.PKInfo.Builder getOtherPKInfoBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getOtherPKInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PKInfo otherPKInfo = 11;</code>
       *
       * <pre>
       *如果在pk，则有此信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.PKInfoOrBuilder getOtherPKInfoOrBuilder() {
        if (otherPKInfoBuilder_ != null) {
          return otherPKInfoBuilder_.getMessageOrBuilder();
        } else {
          return otherPKInfo_;
        }
      }
      /**
       * <code>optional .PKInfo otherPKInfo = 11;</code>
       *
       * <pre>
       *如果在pk，则有此信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.PKInfo, com.mi.liveassistant.proto.LiveCommonProto.PKInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.PKInfoOrBuilder> 
          getOtherPKInfoFieldBuilder() {
        if (otherPKInfoBuilder_ == null) {
          otherPKInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.PKInfo, com.mi.liveassistant.proto.LiveCommonProto.PKInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.PKInfoOrBuilder>(
                  getOtherPKInfo(),
                  getParentForChildren(),
                  isClean());
          otherPKInfo_ = null;
        }
        return otherPKInfoBuilder_;
      }

      private int pkInitTicket_ ;
      /**
       * <code>optional uint32 pkInitTicket = 12;</code>
       *
       * <pre>
       *主播pk初始票值
       * </pre>
       */
      public boolean hasPkInitTicket() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 pkInitTicket = 12;</code>
       *
       * <pre>
       *主播pk初始票值
       * </pre>
       */
      public int getPkInitTicket() {
        return pkInitTicket_;
      }
      /**
       * <code>optional uint32 pkInitTicket = 12;</code>
       *
       * <pre>
       *主播pk初始票值
       * </pre>
       */
      public Builder setPkInitTicket(int value) {
        bitField0_ |= 0x00000200;
        pkInitTicket_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 pkInitTicket = 12;</code>
       *
       * <pre>
       *主播pk初始票值
       * </pre>
       */
      public Builder clearPkInitTicket() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pkInitTicket_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object downStreamUrl_ = "";
      /**
       * <code>optional string downStreamUrl = 13;</code>
       *
       * <pre>
       *完整的url拉流地址
       * </pre>
       */
      public boolean hasDownStreamUrl() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string downStreamUrl = 13;</code>
       *
       * <pre>
       *完整的url拉流地址
       * </pre>
       */
      public java.lang.String getDownStreamUrl() {
        java.lang.Object ref = downStreamUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            downStreamUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string downStreamUrl = 13;</code>
       *
       * <pre>
       *完整的url拉流地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDownStreamUrlBytes() {
        java.lang.Object ref = downStreamUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          downStreamUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string downStreamUrl = 13;</code>
       *
       * <pre>
       *完整的url拉流地址
       * </pre>
       */
      public Builder setDownStreamUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        downStreamUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string downStreamUrl = 13;</code>
       *
       * <pre>
       *完整的url拉流地址
       * </pre>
       */
      public Builder clearDownStreamUrl() {
        bitField0_ = (bitField0_ & ~0x00000400);
        downStreamUrl_ = getDefaultInstance().getDownStreamUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string downStreamUrl = 13;</code>
       *
       * <pre>
       *完整的url拉流地址
       * </pre>
       */
      public Builder setDownStreamUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        downStreamUrl_ = value;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.MicInfo micInfo_ = com.mi.liveassistant.proto.LiveCommonProto.MicInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.MicInfo, com.mi.liveassistant.proto.LiveCommonProto.MicInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.MicInfoOrBuilder> micInfoBuilder_;
      /**
       * <code>optional .MicInfo micInfo = 14;</code>
       *
       * <pre>
       *连麦的信息，如果在连麦，则有此信息
       * </pre>
       */
      public boolean hasMicInfo() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .MicInfo micInfo = 14;</code>
       *
       * <pre>
       *连麦的信息，如果在连麦，则有此信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.MicInfo getMicInfo() {
        if (micInfoBuilder_ == null) {
          return micInfo_;
        } else {
          return micInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .MicInfo micInfo = 14;</code>
       *
       * <pre>
       *连麦的信息，如果在连麦，则有此信息
       * </pre>
       */
      public Builder setMicInfo(com.mi.liveassistant.proto.LiveCommonProto.MicInfo value) {
        if (micInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          micInfo_ = value;
          onChanged();
        } else {
          micInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .MicInfo micInfo = 14;</code>
       *
       * <pre>
       *连麦的信息，如果在连麦，则有此信息
       * </pre>
       */
      public Builder setMicInfo(
          com.mi.liveassistant.proto.LiveCommonProto.MicInfo.Builder builderForValue) {
        if (micInfoBuilder_ == null) {
          micInfo_ = builderForValue.build();
          onChanged();
        } else {
          micInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .MicInfo micInfo = 14;</code>
       *
       * <pre>
       *连麦的信息，如果在连麦，则有此信息
       * </pre>
       */
      public Builder mergeMicInfo(com.mi.liveassistant.proto.LiveCommonProto.MicInfo value) {
        if (micInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              micInfo_ != com.mi.liveassistant.proto.LiveCommonProto.MicInfo.getDefaultInstance()) {
            micInfo_ =
              com.mi.liveassistant.proto.LiveCommonProto.MicInfo.newBuilder(micInfo_).mergeFrom(value).buildPartial();
          } else {
            micInfo_ = value;
          }
          onChanged();
        } else {
          micInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .MicInfo micInfo = 14;</code>
       *
       * <pre>
       *连麦的信息，如果在连麦，则有此信息
       * </pre>
       */
      public Builder clearMicInfo() {
        if (micInfoBuilder_ == null) {
          micInfo_ = com.mi.liveassistant.proto.LiveCommonProto.MicInfo.getDefaultInstance();
          onChanged();
        } else {
          micInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .MicInfo micInfo = 14;</code>
       *
       * <pre>
       *连麦的信息，如果在连麦，则有此信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.MicInfo.Builder getMicInfoBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getMicInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .MicInfo micInfo = 14;</code>
       *
       * <pre>
       *连麦的信息，如果在连麦，则有此信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.MicInfoOrBuilder getMicInfoOrBuilder() {
        if (micInfoBuilder_ != null) {
          return micInfoBuilder_.getMessageOrBuilder();
        } else {
          return micInfo_;
        }
      }
      /**
       * <code>optional .MicInfo micInfo = 14;</code>
       *
       * <pre>
       *连麦的信息，如果在连麦，则有此信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.MicInfo, com.mi.liveassistant.proto.LiveCommonProto.MicInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.MicInfoOrBuilder> 
          getMicInfoFieldBuilder() {
        if (micInfoBuilder_ == null) {
          micInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.MicInfo, com.mi.liveassistant.proto.LiveCommonProto.MicInfo.Builder, com.mi.liveassistant.proto.LiveCommonProto.MicInfoOrBuilder>(
                  getMicInfo(),
                  getParentForChildren(),
                  isClean());
          micInfo_ = null;
        }
        return micInfoBuilder_;
      }

      private int micuidStatus_ ;
      /**
       * <code>optional uint32 micuidStatus = 15;</code>
       *
       * <pre>
       *连麦嘉宾状态， 0：正常， 1：连麦嘉宾退到后台
       * </pre>
       */
      public boolean hasMicuidStatus() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 micuidStatus = 15;</code>
       *
       * <pre>
       *连麦嘉宾状态， 0：正常， 1：连麦嘉宾退到后台
       * </pre>
       */
      public int getMicuidStatus() {
        return micuidStatus_;
      }
      /**
       * <code>optional uint32 micuidStatus = 15;</code>
       *
       * <pre>
       *连麦嘉宾状态， 0：正常， 1：连麦嘉宾退到后台
       * </pre>
       */
      public Builder setMicuidStatus(int value) {
        bitField0_ |= 0x00001000;
        micuidStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 micuidStatus = 15;</code>
       *
       * <pre>
       *连麦嘉宾状态， 0：正常， 1：连麦嘉宾退到后台
       * </pre>
       */
      public Builder clearMicuidStatus() {
        bitField0_ = (bitField0_ & ~0x00001000);
        micuidStatus_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional uint64 timestamp = 16;</code>
       *
       * <pre>
       *进房间时间戳(毫秒)
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint64 timestamp = 16;</code>
       *
       * <pre>
       *进房间时间戳(毫秒)
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint64 timestamp = 16;</code>
       *
       * <pre>
       *进房间时间戳(毫秒)
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00002000;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 timestamp = 16;</code>
       *
       * <pre>
       *进房间时间戳(毫秒)
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00002000);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.LiveCover liveCover_ = com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.LiveCover, com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder, com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder> liveCoverBuilder_;
      /**
       * <code>optional .LiveCover liveCover = 17;</code>
       *
       * <pre>
       *房间的封面信息
       * </pre>
       */
      public boolean hasLiveCover() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .LiveCover liveCover = 17;</code>
       *
       * <pre>
       *房间的封面信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.LiveCover getLiveCover() {
        if (liveCoverBuilder_ == null) {
          return liveCover_;
        } else {
          return liveCoverBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LiveCover liveCover = 17;</code>
       *
       * <pre>
       *房间的封面信息
       * </pre>
       */
      public Builder setLiveCover(com.mi.liveassistant.proto.LiveCommonProto.LiveCover value) {
        if (liveCoverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          liveCover_ = value;
          onChanged();
        } else {
          liveCoverBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .LiveCover liveCover = 17;</code>
       *
       * <pre>
       *房间的封面信息
       * </pre>
       */
      public Builder setLiveCover(
          com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder builderForValue) {
        if (liveCoverBuilder_ == null) {
          liveCover_ = builderForValue.build();
          onChanged();
        } else {
          liveCoverBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .LiveCover liveCover = 17;</code>
       *
       * <pre>
       *房间的封面信息
       * </pre>
       */
      public Builder mergeLiveCover(com.mi.liveassistant.proto.LiveCommonProto.LiveCover value) {
        if (liveCoverBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              liveCover_ != com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance()) {
            liveCover_ =
              com.mi.liveassistant.proto.LiveCommonProto.LiveCover.newBuilder(liveCover_).mergeFrom(value).buildPartial();
          } else {
            liveCover_ = value;
          }
          onChanged();
        } else {
          liveCoverBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .LiveCover liveCover = 17;</code>
       *
       * <pre>
       *房间的封面信息
       * </pre>
       */
      public Builder clearLiveCover() {
        if (liveCoverBuilder_ == null) {
          liveCover_ = com.mi.liveassistant.proto.LiveCommonProto.LiveCover.getDefaultInstance();
          onChanged();
        } else {
          liveCoverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .LiveCover liveCover = 17;</code>
       *
       * <pre>
       *房间的封面信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder getLiveCoverBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getLiveCoverFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LiveCover liveCover = 17;</code>
       *
       * <pre>
       *房间的封面信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder getLiveCoverOrBuilder() {
        if (liveCoverBuilder_ != null) {
          return liveCoverBuilder_.getMessageOrBuilder();
        } else {
          return liveCover_;
        }
      }
      /**
       * <code>optional .LiveCover liveCover = 17;</code>
       *
       * <pre>
       *房间的封面信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.LiveCover, com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder, com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder> 
          getLiveCoverFieldBuilder() {
        if (liveCoverBuilder_ == null) {
          liveCoverBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.LiveCover, com.mi.liveassistant.proto.LiveCommonProto.LiveCover.Builder, com.mi.liveassistant.proto.LiveCommonProto.LiveCoverOrBuilder>(
                  getLiveCover(),
                  getParentForChildren(),
                  isClean());
          liveCover_ = null;
        }
        return liveCoverBuilder_;
      }

      private java.lang.Object liveTitle_ = "";
      /**
       * <code>optional string liveTitle = 18;</code>
       *
       * <pre>
       *直播标题
       * </pre>
       */
      public boolean hasLiveTitle() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string liveTitle = 18;</code>
       *
       * <pre>
       *直播标题
       * </pre>
       */
      public java.lang.String getLiveTitle() {
        java.lang.Object ref = liveTitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveTitle_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string liveTitle = 18;</code>
       *
       * <pre>
       *直播标题
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiveTitleBytes() {
        java.lang.Object ref = liveTitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveTitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string liveTitle = 18;</code>
       *
       * <pre>
       *直播标题
       * </pre>
       */
      public Builder setLiveTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        liveTitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveTitle = 18;</code>
       *
       * <pre>
       *直播标题
       * </pre>
       */
      public Builder clearLiveTitle() {
        bitField0_ = (bitField0_ & ~0x00008000);
        liveTitle_ = getDefaultInstance().getLiveTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string liveTitle = 18;</code>
       *
       * <pre>
       *直播标题
       * </pre>
       */
      public Builder setLiveTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        liveTitle_ = value;
        onChanged();
        return this;
      }

      private int messageMode_ ;
      /**
       * <code>optional int32 messageMode = 19;</code>
       *
       * <pre>
       *房间的弹幕拉状态位，0:push模型，1:pull模型
       * </pre>
       */
      public boolean hasMessageMode() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 messageMode = 19;</code>
       *
       * <pre>
       *房间的弹幕拉状态位，0:push模型，1:pull模型
       * </pre>
       */
      public int getMessageMode() {
        return messageMode_;
      }
      /**
       * <code>optional int32 messageMode = 19;</code>
       *
       * <pre>
       *房间的弹幕拉状态位，0:push模型，1:pull模型
       * </pre>
       */
      public Builder setMessageMode(int value) {
        bitField0_ |= 0x00010000;
        messageMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 messageMode = 19;</code>
       *
       * <pre>
       *房间的弹幕拉状态位，0:push模型，1:pull模型
       * </pre>
       */
      public Builder clearMessageMode() {
        bitField0_ = (bitField0_ & ~0x00010000);
        messageMode_ = 0;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.MsgRule msgRule_ = com.mi.liveassistant.proto.LiveCommonProto.MsgRule.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.MsgRule, com.mi.liveassistant.proto.LiveCommonProto.MsgRule.Builder, com.mi.liveassistant.proto.LiveCommonProto.MsgRuleOrBuilder> msgRuleBuilder_;
      /**
       * <code>optional .MsgRule msgRule = 20;</code>
       *
       * <pre>
       *房间的发消息的规则
       * </pre>
       */
      public boolean hasMsgRule() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .MsgRule msgRule = 20;</code>
       *
       * <pre>
       *房间的发消息的规则
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.MsgRule getMsgRule() {
        if (msgRuleBuilder_ == null) {
          return msgRule_;
        } else {
          return msgRuleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .MsgRule msgRule = 20;</code>
       *
       * <pre>
       *房间的发消息的规则
       * </pre>
       */
      public Builder setMsgRule(com.mi.liveassistant.proto.LiveCommonProto.MsgRule value) {
        if (msgRuleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msgRule_ = value;
          onChanged();
        } else {
          msgRuleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .MsgRule msgRule = 20;</code>
       *
       * <pre>
       *房间的发消息的规则
       * </pre>
       */
      public Builder setMsgRule(
          com.mi.liveassistant.proto.LiveCommonProto.MsgRule.Builder builderForValue) {
        if (msgRuleBuilder_ == null) {
          msgRule_ = builderForValue.build();
          onChanged();
        } else {
          msgRuleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .MsgRule msgRule = 20;</code>
       *
       * <pre>
       *房间的发消息的规则
       * </pre>
       */
      public Builder mergeMsgRule(com.mi.liveassistant.proto.LiveCommonProto.MsgRule value) {
        if (msgRuleBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              msgRule_ != com.mi.liveassistant.proto.LiveCommonProto.MsgRule.getDefaultInstance()) {
            msgRule_ =
              com.mi.liveassistant.proto.LiveCommonProto.MsgRule.newBuilder(msgRule_).mergeFrom(value).buildPartial();
          } else {
            msgRule_ = value;
          }
          onChanged();
        } else {
          msgRuleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .MsgRule msgRule = 20;</code>
       *
       * <pre>
       *房间的发消息的规则
       * </pre>
       */
      public Builder clearMsgRule() {
        if (msgRuleBuilder_ == null) {
          msgRule_ = com.mi.liveassistant.proto.LiveCommonProto.MsgRule.getDefaultInstance();
          onChanged();
        } else {
          msgRuleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .MsgRule msgRule = 20;</code>
       *
       * <pre>
       *房间的发消息的规则
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.MsgRule.Builder getMsgRuleBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getMsgRuleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .MsgRule msgRule = 20;</code>
       *
       * <pre>
       *房间的发消息的规则
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.MsgRuleOrBuilder getMsgRuleOrBuilder() {
        if (msgRuleBuilder_ != null) {
          return msgRuleBuilder_.getMessageOrBuilder();
        } else {
          return msgRule_;
        }
      }
      /**
       * <code>optional .MsgRule msgRule = 20;</code>
       *
       * <pre>
       *房间的发消息的规则
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.MsgRule, com.mi.liveassistant.proto.LiveCommonProto.MsgRule.Builder, com.mi.liveassistant.proto.LiveCommonProto.MsgRuleOrBuilder> 
          getMsgRuleFieldBuilder() {
        if (msgRuleBuilder_ == null) {
          msgRuleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.MsgRule, com.mi.liveassistant.proto.LiveCommonProto.MsgRule.Builder, com.mi.liveassistant.proto.LiveCommonProto.MsgRuleOrBuilder>(
                  getMsgRule(),
                  getParentForChildren(),
                  isClean());
          msgRule_ = null;
        }
        return msgRuleBuilder_;
      }

      private boolean isShop_ ;
      /**
       * <code>optional bool isShop = 21;</code>
       *
       * <pre>
       *是否是商铺房间，默认是false
       * </pre>
       */
      public boolean hasIsShop() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool isShop = 21;</code>
       *
       * <pre>
       *是否是商铺房间，默认是false
       * </pre>
       */
      public boolean getIsShop() {
        return isShop_;
      }
      /**
       * <code>optional bool isShop = 21;</code>
       *
       * <pre>
       *是否是商铺房间，默认是false
       * </pre>
       */
      public Builder setIsShop(boolean value) {
        bitField0_ |= 0x00040000;
        isShop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isShop = 21;</code>
       *
       * <pre>
       *是否是商铺房间，默认是false
       * </pre>
       */
      public Builder clearIsShop() {
        bitField0_ = (bitField0_ & ~0x00040000);
        isShop_ = false;
        onChanged();
        return this;
      }

      private boolean hideGift_ ;
      /**
       * <code>optional bool hideGift = 22;</code>
       *
       * <pre>
       *是否是隐藏商品，默认是false
       * </pre>
       */
      public boolean hasHideGift() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool hideGift = 22;</code>
       *
       * <pre>
       *是否是隐藏商品，默认是false
       * </pre>
       */
      public boolean getHideGift() {
        return hideGift_;
      }
      /**
       * <code>optional bool hideGift = 22;</code>
       *
       * <pre>
       *是否是隐藏商品，默认是false
       * </pre>
       */
      public Builder setHideGift(boolean value) {
        bitField0_ |= 0x00080000;
        hideGift_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hideGift = 22;</code>
       *
       * <pre>
       *是否是隐藏商品，默认是false
       * </pre>
       */
      public Builder clearHideGift() {
        bitField0_ = (bitField0_ & ~0x00080000);
        hideGift_ = false;
        onChanged();
        return this;
      }

      private int hideIcon_ ;
      /**
       * <code>optional int32 hideIcon = 23;</code>
       *
       * <pre>
       *从最低位开始：1-是否隐藏发弹幕icon 2-是否隐藏私信icon 3-是否隐藏分享icon 4-是否隐藏礼物icon 5-是否隐藏点亮 （默认全不隐藏，该位为1时隐藏）
       * </pre>
       */
      public boolean hasHideIcon() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 hideIcon = 23;</code>
       *
       * <pre>
       *从最低位开始：1-是否隐藏发弹幕icon 2-是否隐藏私信icon 3-是否隐藏分享icon 4-是否隐藏礼物icon 5-是否隐藏点亮 （默认全不隐藏，该位为1时隐藏）
       * </pre>
       */
      public int getHideIcon() {
        return hideIcon_;
      }
      /**
       * <code>optional int32 hideIcon = 23;</code>
       *
       * <pre>
       *从最低位开始：1-是否隐藏发弹幕icon 2-是否隐藏私信icon 3-是否隐藏分享icon 4-是否隐藏礼物icon 5-是否隐藏点亮 （默认全不隐藏，该位为1时隐藏）
       * </pre>
       */
      public Builder setHideIcon(int value) {
        bitField0_ |= 0x00100000;
        hideIcon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hideIcon = 23;</code>
       *
       * <pre>
       *从最低位开始：1-是否隐藏发弹幕icon 2-是否隐藏私信icon 3-是否隐藏分享icon 4-是否隐藏礼物icon 5-是否隐藏点亮 （默认全不隐藏，该位为1时隐藏）
       * </pre>
       */
      public Builder clearHideIcon() {
        bitField0_ = (bitField0_ & ~0x00100000);
        hideIcon_ = 0;
        onChanged();
        return this;
      }

      private com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus ticketStatus_ = com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.Builder, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatusOrBuilder> ticketStatusBuilder_;
      /**
       * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
       *
       * <pre>
       *用户观看门票直播状态信息
       * </pre>
       */
      public boolean hasTicketStatus() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
       *
       * <pre>
       *用户观看门票直播状态信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus getTicketStatus() {
        if (ticketStatusBuilder_ == null) {
          return ticketStatus_;
        } else {
          return ticketStatusBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
       *
       * <pre>
       *用户观看门票直播状态信息
       * </pre>
       */
      public Builder setTicketStatus(com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus value) {
        if (ticketStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ticketStatus_ = value;
          onChanged();
        } else {
          ticketStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
       *
       * <pre>
       *用户观看门票直播状态信息
       * </pre>
       */
      public Builder setTicketStatus(
          com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.Builder builderForValue) {
        if (ticketStatusBuilder_ == null) {
          ticketStatus_ = builderForValue.build();
          onChanged();
        } else {
          ticketStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
       *
       * <pre>
       *用户观看门票直播状态信息
       * </pre>
       */
      public Builder mergeTicketStatus(com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus value) {
        if (ticketStatusBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              ticketStatus_ != com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.getDefaultInstance()) {
            ticketStatus_ =
              com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.newBuilder(ticketStatus_).mergeFrom(value).buildPartial();
          } else {
            ticketStatus_ = value;
          }
          onChanged();
        } else {
          ticketStatusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
       *
       * <pre>
       *用户观看门票直播状态信息
       * </pre>
       */
      public Builder clearTicketStatus() {
        if (ticketStatusBuilder_ == null) {
          ticketStatus_ = com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.getDefaultInstance();
          onChanged();
        } else {
          ticketStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
       *
       * <pre>
       *用户观看门票直播状态信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.Builder getTicketStatusBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getTicketStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
       *
       * <pre>
       *用户观看门票直播状态信息
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatusOrBuilder getTicketStatusOrBuilder() {
        if (ticketStatusBuilder_ != null) {
          return ticketStatusBuilder_.getMessageOrBuilder();
        } else {
          return ticketStatus_;
        }
      }
      /**
       * <code>optional .TicketLiveStatus ticketStatus = 24;</code>
       *
       * <pre>
       *用户观看门票直播状态信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.Builder, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatusOrBuilder> 
          getTicketStatusFieldBuilder() {
        if (ticketStatusBuilder_ == null) {
          ticketStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatus.Builder, com.mi.liveassistant.proto.LiveCommonProto.TicketLiveStatusOrBuilder>(
                  getTicketStatus(),
                  getParentForChildren(),
                  isClean());
          ticketStatus_ = null;
        }
        return ticketStatusBuilder_;
      }

      private boolean supportMagicFace_ ;
      /**
       * <code>optional bool supportMagicFace = 26;</code>
       *
       * <pre>
       *支持魔法表情
       * </pre>
       */
      public boolean hasSupportMagicFace() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional bool supportMagicFace = 26;</code>
       *
       * <pre>
       *支持魔法表情
       * </pre>
       */
      public boolean getSupportMagicFace() {
        return supportMagicFace_;
      }
      /**
       * <code>optional bool supportMagicFace = 26;</code>
       *
       * <pre>
       *支持魔法表情
       * </pre>
       */
      public Builder setSupportMagicFace(boolean value) {
        bitField0_ |= 0x00400000;
        supportMagicFace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool supportMagicFace = 26;</code>
       *
       * <pre>
       *支持魔法表情
       * </pre>
       */
      public Builder clearSupportMagicFace() {
        bitField0_ = (bitField0_ & ~0x00400000);
        supportMagicFace_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EnterLiveRsp)
    }

    static {
      defaultInstance = new EnterLiveRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EnterLiveRsp)
  }

  public interface LeaveLiveReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LeaveLiveReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    boolean hasUuid();
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    long getUuid();

    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    boolean hasZuid();
    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    long getZuid();

    /**
     * <code>required string liveId = 3;</code>
     */
    boolean hasLiveId();
    /**
     * <code>required string liveId = 3;</code>
     */
    java.lang.String getLiveId();
    /**
     * <code>required string liveId = 3;</code>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional int32 messageMode = 4;</code>
     *
     * <pre>
     *房间的弹幕拉状态位，0:push模型，1:pull模型
     * </pre>
     */
    boolean hasMessageMode();
    /**
     * <code>optional int32 messageMode = 4;</code>
     *
     * <pre>
     *房间的弹幕拉状态位，0:push模型，1:pull模型
     * </pre>
     */
    int getMessageMode();
  }
  /**
   * Protobuf type {@code LeaveLiveReq}
   *
   * <pre>
   *离开房间
   *zhibo.live.leave
   * </pre>
   */
  public static final class LeaveLiveReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LeaveLiveReq)
      LeaveLiveReqOrBuilder {
    // Use LeaveLiveReq.newBuilder() to construct.
    private LeaveLiveReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LeaveLiveReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LeaveLiveReq defaultInstance;
    public static LeaveLiveReq getDefaultInstance() {
      return defaultInstance;
    }

    public LeaveLiveReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LeaveLiveReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              zuid_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              liveId_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              messageMode_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.LeaveLiveReq.class, com.mi.liveassistant.proto.LiveProto.LeaveLiveReq.Builder.class);
    }

    public static com.google.protobuf.Parser<LeaveLiveReq> PARSER =
        new com.google.protobuf.AbstractParser<LeaveLiveReq>() {
      public LeaveLiveReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LeaveLiveReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LeaveLiveReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private long uuid_;
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public long getUuid() {
      return uuid_;
    }

    public static final int ZUID_FIELD_NUMBER = 2;
    private long zuid_;
    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    public boolean hasZuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    public long getZuid() {
      return zuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 3;
    private java.lang.Object liveId_;
    /**
     * <code>required string liveId = 3;</code>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string liveId = 3;</code>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string liveId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGEMODE_FIELD_NUMBER = 4;
    private int messageMode_;
    /**
     * <code>optional int32 messageMode = 4;</code>
     *
     * <pre>
     *房间的弹幕拉状态位，0:push模型，1:pull模型
     * </pre>
     */
    public boolean hasMessageMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 messageMode = 4;</code>
     *
     * <pre>
     *房间的弹幕拉状态位，0:push模型，1:pull模型
     * </pre>
     */
    public int getMessageMode() {
      return messageMode_;
    }

    private void initFields() {
      uuid_ = 0L;
      zuid_ = 0L;
      liveId_ = "";
      messageMode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLiveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, messageMode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, messageMode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.LeaveLiveReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LeaveLiveReq}
     *
     * <pre>
     *离开房间
     *zhibo.live.leave
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LeaveLiveReq)
        com.mi.liveassistant.proto.LiveProto.LeaveLiveReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.LeaveLiveReq.class, com.mi.liveassistant.proto.LiveProto.LeaveLiveReq.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.LeaveLiveReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        zuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        messageMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveReq_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.LeaveLiveReq getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.LeaveLiveReq.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.LeaveLiveReq build() {
        com.mi.liveassistant.proto.LiveProto.LeaveLiveReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.LeaveLiveReq buildPartial() {
        com.mi.liveassistant.proto.LiveProto.LeaveLiveReq result = new com.mi.liveassistant.proto.LiveProto.LeaveLiveReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.zuid_ = zuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.messageMode_ = messageMode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.LeaveLiveReq) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.LeaveLiveReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.LeaveLiveReq other) {
        if (other == com.mi.liveassistant.proto.LiveProto.LeaveLiveReq.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasZuid()) {
          setZuid(other.getZuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000004;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasMessageMode()) {
          setMessageMode(other.getMessageMode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasZuid()) {
          
          return false;
        }
        if (!hasLiveId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.LeaveLiveReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.LeaveLiveReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long uuid_ ;
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public long getUuid() {
        return uuid_;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder setUuid(long value) {
        bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = 0L;
        onChanged();
        return this;
      }

      private long zuid_ ;
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public boolean hasZuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public long getZuid() {
        return zuid_;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public Builder setZuid(long value) {
        bitField0_ |= 0x00000002;
        zuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public Builder clearZuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        zuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>required string liveId = 3;</code>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }

      private int messageMode_ ;
      /**
       * <code>optional int32 messageMode = 4;</code>
       *
       * <pre>
       *房间的弹幕拉状态位，0:push模型，1:pull模型
       * </pre>
       */
      public boolean hasMessageMode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 messageMode = 4;</code>
       *
       * <pre>
       *房间的弹幕拉状态位，0:push模型，1:pull模型
       * </pre>
       */
      public int getMessageMode() {
        return messageMode_;
      }
      /**
       * <code>optional int32 messageMode = 4;</code>
       *
       * <pre>
       *房间的弹幕拉状态位，0:push模型，1:pull模型
       * </pre>
       */
      public Builder setMessageMode(int value) {
        bitField0_ |= 0x00000008;
        messageMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 messageMode = 4;</code>
       *
       * <pre>
       *房间的弹幕拉状态位，0:push模型，1:pull模型
       * </pre>
       */
      public Builder clearMessageMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        messageMode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LeaveLiveReq)
    }

    static {
      defaultInstance = new LeaveLiveReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LeaveLiveReq)
  }

  public interface LeaveLiveRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LeaveLiveRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    int getRetCode();
  }
  /**
   * Protobuf type {@code LeaveLiveRsp}
   */
  public static final class LeaveLiveRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LeaveLiveRsp)
      LeaveLiveRspOrBuilder {
    // Use LeaveLiveRsp.newBuilder() to construct.
    private LeaveLiveRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LeaveLiveRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LeaveLiveRsp defaultInstance;
    public static LeaveLiveRsp getDefaultInstance() {
      return defaultInstance;
    }

    public LeaveLiveRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LeaveLiveRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp.class, com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<LeaveLiveRsp> PARSER =
        new com.google.protobuf.AbstractParser<LeaveLiveRsp>() {
      public LeaveLiveRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LeaveLiveRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LeaveLiveRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    private void initFields() {
      retCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LeaveLiveRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LeaveLiveRsp)
        com.mi.liveassistant.proto.LiveProto.LeaveLiveRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp.class, com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_LeaveLiveRsp_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp build() {
        com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp buildPartial() {
        com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp result = new com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp other) {
        if (other == com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.LeaveLiveRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LeaveLiveRsp)
    }

    static {
      defaultInstance = new LeaveLiveRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LeaveLiveRsp)
  }

  public interface HeartBeatReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeartBeatReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    boolean hasLiveId();
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    java.lang.String getLiveId();
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>optional uint64 pkuid = 2;</code>
     *
     * <pre>
     *如果在pk，对应pk的用户id
     * </pre>
     */
    boolean hasPkuid();
    /**
     * <code>optional uint64 pkuid = 2;</code>
     *
     * <pre>
     *如果在pk，对应pk的用户id
     * </pre>
     */
    long getPkuid();

    /**
     * <code>optional string pkLiveId = 3;</code>
     *
     * <pre>
     *如果在pk，被pk的用户的房间号
     * </pre>
     */
    boolean hasPkLiveId();
    /**
     * <code>optional string pkLiveId = 3;</code>
     *
     * <pre>
     *如果在pk，被pk的用户的房间号
     * </pre>
     */
    java.lang.String getPkLiveId();
    /**
     * <code>optional string pkLiveId = 3;</code>
     *
     * <pre>
     *如果在pk，被pk的用户的房间号
     * </pre>
     */
    com.google.protobuf.ByteString
        getPkLiveIdBytes();

    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     *此房间的状态，0：正常，1：主播退到后台
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     *此房间的状态，0：正常，1：主播退到后台
     * </pre>
     */
    int getStatus();

    /**
     * <code>optional uint64 micuid = 5;</code>
     *
     * <pre>
     *连麦的观众id,如果主播在和观众连麦，则有此字段，用于服务器校验
     * </pre>
     */
    boolean hasMicuid();
    /**
     * <code>optional uint64 micuid = 5;</code>
     *
     * <pre>
     *连麦的观众id,如果主播在和观众连麦，则有此字段，用于服务器校验
     * </pre>
     */
    long getMicuid();

    /**
     * <code>optional int32 micuidStatus = 6;</code>
     *
     * <pre>
     *连麦的观众的状态，0：正常，1：退到后台
     * </pre>
     */
    boolean hasMicuidStatus();
    /**
     * <code>optional int32 micuidStatus = 6;</code>
     *
     * <pre>
     *连麦的观众的状态，0：正常，1：退到后台
     * </pre>
     */
    int getMicuidStatus();
  }
  /**
   * Protobuf type {@code HeartBeatReq}
   *
   * <pre>
   *主播心跳
   *zhibo.live.hb
   * </pre>
   */
  public static final class HeartBeatReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:HeartBeatReq)
      HeartBeatReqOrBuilder {
    // Use HeartBeatReq.newBuilder() to construct.
    private HeartBeatReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeartBeatReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeartBeatReq defaultInstance;
    public static HeartBeatReq getDefaultInstance() {
      return defaultInstance;
    }

    public HeartBeatReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeartBeatReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              liveId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              pkuid_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              pkLiveId_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              status_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              micuid_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              micuidStatus_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.HeartBeatReq.class, com.mi.liveassistant.proto.LiveProto.HeartBeatReq.Builder.class);
    }

    public static com.google.protobuf.Parser<HeartBeatReq> PARSER =
        new com.google.protobuf.AbstractParser<HeartBeatReq>() {
      public HeartBeatReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartBeatReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeartBeatReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LIVEID_FIELD_NUMBER = 1;
    private java.lang.Object liveId_;
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PKUID_FIELD_NUMBER = 2;
    private long pkuid_;
    /**
     * <code>optional uint64 pkuid = 2;</code>
     *
     * <pre>
     *如果在pk，对应pk的用户id
     * </pre>
     */
    public boolean hasPkuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 pkuid = 2;</code>
     *
     * <pre>
     *如果在pk，对应pk的用户id
     * </pre>
     */
    public long getPkuid() {
      return pkuid_;
    }

    public static final int PKLIVEID_FIELD_NUMBER = 3;
    private java.lang.Object pkLiveId_;
    /**
     * <code>optional string pkLiveId = 3;</code>
     *
     * <pre>
     *如果在pk，被pk的用户的房间号
     * </pre>
     */
    public boolean hasPkLiveId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string pkLiveId = 3;</code>
     *
     * <pre>
     *如果在pk，被pk的用户的房间号
     * </pre>
     */
    public java.lang.String getPkLiveId() {
      java.lang.Object ref = pkLiveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pkLiveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pkLiveId = 3;</code>
     *
     * <pre>
     *如果在pk，被pk的用户的房间号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPkLiveIdBytes() {
      java.lang.Object ref = pkLiveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pkLiveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_;
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     *此房间的状态，0：正常，1：主播退到后台
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     *此房间的状态，0：正常，1：主播退到后台
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    public static final int MICUID_FIELD_NUMBER = 5;
    private long micuid_;
    /**
     * <code>optional uint64 micuid = 5;</code>
     *
     * <pre>
     *连麦的观众id,如果主播在和观众连麦，则有此字段，用于服务器校验
     * </pre>
     */
    public boolean hasMicuid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 micuid = 5;</code>
     *
     * <pre>
     *连麦的观众id,如果主播在和观众连麦，则有此字段，用于服务器校验
     * </pre>
     */
    public long getMicuid() {
      return micuid_;
    }

    public static final int MICUIDSTATUS_FIELD_NUMBER = 6;
    private int micuidStatus_;
    /**
     * <code>optional int32 micuidStatus = 6;</code>
     *
     * <pre>
     *连麦的观众的状态，0：正常，1：退到后台
     * </pre>
     */
    public boolean hasMicuidStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 micuidStatus = 6;</code>
     *
     * <pre>
     *连麦的观众的状态，0：正常，1：退到后台
     * </pre>
     */
    public int getMicuidStatus() {
      return micuidStatus_;
    }

    private void initFields() {
      liveId_ = "";
      pkuid_ = 0L;
      pkLiveId_ = "";
      status_ = 0;
      micuid_ = 0L;
      micuidStatus_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLiveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, pkuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPkLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, micuid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, micuidStatus_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, pkuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPkLiveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, micuid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, micuidStatus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.HeartBeatReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HeartBeatReq}
     *
     * <pre>
     *主播心跳
     *zhibo.live.hb
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HeartBeatReq)
        com.mi.liveassistant.proto.LiveProto.HeartBeatReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.HeartBeatReq.class, com.mi.liveassistant.proto.LiveProto.HeartBeatReq.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.HeartBeatReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        pkuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        pkLiveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        micuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        micuidStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatReq_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.HeartBeatReq getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.HeartBeatReq.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.HeartBeatReq build() {
        com.mi.liveassistant.proto.LiveProto.HeartBeatReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.HeartBeatReq buildPartial() {
        com.mi.liveassistant.proto.LiveProto.HeartBeatReq result = new com.mi.liveassistant.proto.LiveProto.HeartBeatReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pkuid_ = pkuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pkLiveId_ = pkLiveId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.micuid_ = micuid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.micuidStatus_ = micuidStatus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.HeartBeatReq) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.HeartBeatReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.HeartBeatReq other) {
        if (other == com.mi.liveassistant.proto.LiveProto.HeartBeatReq.getDefaultInstance()) return this;
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000001;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasPkuid()) {
          setPkuid(other.getPkuid());
        }
        if (other.hasPkLiveId()) {
          bitField0_ |= 0x00000004;
          pkLiveId_ = other.pkLiveId_;
          onChanged();
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasMicuid()) {
          setMicuid(other.getMicuid());
        }
        if (other.hasMicuidStatus()) {
          setMicuidStatus(other.getMicuidStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLiveId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.HeartBeatReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.HeartBeatReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object liveId_ = "";
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        liveId_ = value;
        onChanged();
        return this;
      }

      private long pkuid_ ;
      /**
       * <code>optional uint64 pkuid = 2;</code>
       *
       * <pre>
       *如果在pk，对应pk的用户id
       * </pre>
       */
      public boolean hasPkuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 pkuid = 2;</code>
       *
       * <pre>
       *如果在pk，对应pk的用户id
       * </pre>
       */
      public long getPkuid() {
        return pkuid_;
      }
      /**
       * <code>optional uint64 pkuid = 2;</code>
       *
       * <pre>
       *如果在pk，对应pk的用户id
       * </pre>
       */
      public Builder setPkuid(long value) {
        bitField0_ |= 0x00000002;
        pkuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 pkuid = 2;</code>
       *
       * <pre>
       *如果在pk，对应pk的用户id
       * </pre>
       */
      public Builder clearPkuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pkuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object pkLiveId_ = "";
      /**
       * <code>optional string pkLiveId = 3;</code>
       *
       * <pre>
       *如果在pk，被pk的用户的房间号
       * </pre>
       */
      public boolean hasPkLiveId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string pkLiveId = 3;</code>
       *
       * <pre>
       *如果在pk，被pk的用户的房间号
       * </pre>
       */
      public java.lang.String getPkLiveId() {
        java.lang.Object ref = pkLiveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pkLiveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pkLiveId = 3;</code>
       *
       * <pre>
       *如果在pk，被pk的用户的房间号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPkLiveIdBytes() {
        java.lang.Object ref = pkLiveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pkLiveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pkLiveId = 3;</code>
       *
       * <pre>
       *如果在pk，被pk的用户的房间号
       * </pre>
       */
      public Builder setPkLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        pkLiveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pkLiveId = 3;</code>
       *
       * <pre>
       *如果在pk，被pk的用户的房间号
       * </pre>
       */
      public Builder clearPkLiveId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pkLiveId_ = getDefaultInstance().getPkLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pkLiveId = 3;</code>
       *
       * <pre>
       *如果在pk，被pk的用户的房间号
       * </pre>
       */
      public Builder setPkLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        pkLiveId_ = value;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       *此房间的状态，0：正常，1：主播退到后台
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       *此房间的状态，0：正常，1：主播退到后台
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       *此房间的状态，0：正常，1：主播退到后台
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000008;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       *此房间的状态，0：正常，1：主播退到后台
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        onChanged();
        return this;
      }

      private long micuid_ ;
      /**
       * <code>optional uint64 micuid = 5;</code>
       *
       * <pre>
       *连麦的观众id,如果主播在和观众连麦，则有此字段，用于服务器校验
       * </pre>
       */
      public boolean hasMicuid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 micuid = 5;</code>
       *
       * <pre>
       *连麦的观众id,如果主播在和观众连麦，则有此字段，用于服务器校验
       * </pre>
       */
      public long getMicuid() {
        return micuid_;
      }
      /**
       * <code>optional uint64 micuid = 5;</code>
       *
       * <pre>
       *连麦的观众id,如果主播在和观众连麦，则有此字段，用于服务器校验
       * </pre>
       */
      public Builder setMicuid(long value) {
        bitField0_ |= 0x00000010;
        micuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 micuid = 5;</code>
       *
       * <pre>
       *连麦的观众id,如果主播在和观众连麦，则有此字段，用于服务器校验
       * </pre>
       */
      public Builder clearMicuid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        micuid_ = 0L;
        onChanged();
        return this;
      }

      private int micuidStatus_ ;
      /**
       * <code>optional int32 micuidStatus = 6;</code>
       *
       * <pre>
       *连麦的观众的状态，0：正常，1：退到后台
       * </pre>
       */
      public boolean hasMicuidStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 micuidStatus = 6;</code>
       *
       * <pre>
       *连麦的观众的状态，0：正常，1：退到后台
       * </pre>
       */
      public int getMicuidStatus() {
        return micuidStatus_;
      }
      /**
       * <code>optional int32 micuidStatus = 6;</code>
       *
       * <pre>
       *连麦的观众的状态，0：正常，1：退到后台
       * </pre>
       */
      public Builder setMicuidStatus(int value) {
        bitField0_ |= 0x00000020;
        micuidStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 micuidStatus = 6;</code>
       *
       * <pre>
       *连麦的观众的状态，0：正常，1：退到后台
       * </pre>
       */
      public Builder clearMicuidStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        micuidStatus_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeartBeatReq)
    }

    static {
      defaultInstance = new HeartBeatReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HeartBeatReq)
  }

  public interface HeartBeatRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeartBeatRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    int getRetCode();
  }
  /**
   * Protobuf type {@code HeartBeatRsp}
   */
  public static final class HeartBeatRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:HeartBeatRsp)
      HeartBeatRspOrBuilder {
    // Use HeartBeatRsp.newBuilder() to construct.
    private HeartBeatRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeartBeatRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeartBeatRsp defaultInstance;
    public static HeartBeatRsp getDefaultInstance() {
      return defaultInstance;
    }

    public HeartBeatRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeartBeatRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.HeartBeatRsp.class, com.mi.liveassistant.proto.LiveProto.HeartBeatRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<HeartBeatRsp> PARSER =
        new com.google.protobuf.AbstractParser<HeartBeatRsp>() {
      public HeartBeatRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartBeatRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeartBeatRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    private void initFields() {
      retCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.HeartBeatRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HeartBeatRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HeartBeatRsp)
        com.mi.liveassistant.proto.LiveProto.HeartBeatRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.HeartBeatRsp.class, com.mi.liveassistant.proto.LiveProto.HeartBeatRsp.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.HeartBeatRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_HeartBeatRsp_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.HeartBeatRsp getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.HeartBeatRsp.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.HeartBeatRsp build() {
        com.mi.liveassistant.proto.LiveProto.HeartBeatRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.HeartBeatRsp buildPartial() {
        com.mi.liveassistant.proto.LiveProto.HeartBeatRsp result = new com.mi.liveassistant.proto.LiveProto.HeartBeatRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.HeartBeatRsp) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.HeartBeatRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.HeartBeatRsp other) {
        if (other == com.mi.liveassistant.proto.LiveProto.HeartBeatRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.HeartBeatRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.HeartBeatRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeartBeatRsp)
    }

    static {
      defaultInstance = new HeartBeatRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HeartBeatRsp)
  }

  public interface ViewerTopReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ViewerTopReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    boolean hasUuid();
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    long getUuid();

    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    boolean hasZuid();
    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    long getZuid();

    /**
     * <code>required string liveId = 3;</code>
     */
    boolean hasLiveId();
    /**
     * <code>required string liveId = 3;</code>
     */
    java.lang.String getLiveId();
    /**
     * <code>required string liveId = 3;</code>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();
  }
  /**
   * Protobuf type {@code ViewerTopReq}
   *
   * <pre>
   *房间人top
   *zhibo.live.viewertop
   * </pre>
   */
  public static final class ViewerTopReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ViewerTopReq)
      ViewerTopReqOrBuilder {
    // Use ViewerTopReq.newBuilder() to construct.
    private ViewerTopReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ViewerTopReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ViewerTopReq defaultInstance;
    public static ViewerTopReq getDefaultInstance() {
      return defaultInstance;
    }

    public ViewerTopReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ViewerTopReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              zuid_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              liveId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.ViewerTopReq.class, com.mi.liveassistant.proto.LiveProto.ViewerTopReq.Builder.class);
    }

    public static com.google.protobuf.Parser<ViewerTopReq> PARSER =
        new com.google.protobuf.AbstractParser<ViewerTopReq>() {
      public ViewerTopReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ViewerTopReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ViewerTopReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private long uuid_;
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 uuid = 1;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public long getUuid() {
      return uuid_;
    }

    public static final int ZUID_FIELD_NUMBER = 2;
    private long zuid_;
    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    public boolean hasZuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 zuid = 2;</code>
     *
     * <pre>
     *直播人id
     * </pre>
     */
    public long getZuid() {
      return zuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 3;
    private java.lang.Object liveId_;
    /**
     * <code>required string liveId = 3;</code>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string liveId = 3;</code>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string liveId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uuid_ = 0L;
      zuid_ = 0L;
      liveId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLiveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getLiveIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, zuid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getLiveIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.ViewerTopReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ViewerTopReq}
     *
     * <pre>
     *房间人top
     *zhibo.live.viewertop
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ViewerTopReq)
        com.mi.liveassistant.proto.LiveProto.ViewerTopReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.ViewerTopReq.class, com.mi.liveassistant.proto.LiveProto.ViewerTopReq.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.ViewerTopReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        zuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopReq_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.ViewerTopReq getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.ViewerTopReq.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.ViewerTopReq build() {
        com.mi.liveassistant.proto.LiveProto.ViewerTopReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.ViewerTopReq buildPartial() {
        com.mi.liveassistant.proto.LiveProto.ViewerTopReq result = new com.mi.liveassistant.proto.LiveProto.ViewerTopReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.zuid_ = zuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.liveId_ = liveId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.ViewerTopReq) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.ViewerTopReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.ViewerTopReq other) {
        if (other == com.mi.liveassistant.proto.LiveProto.ViewerTopReq.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasZuid()) {
          setZuid(other.getZuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000004;
          liveId_ = other.liveId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasZuid()) {
          
          return false;
        }
        if (!hasLiveId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.ViewerTopReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.ViewerTopReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long uuid_ ;
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public long getUuid() {
        return uuid_;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder setUuid(long value) {
        bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uuid = 1;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = 0L;
        onChanged();
        return this;
      }

      private long zuid_ ;
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public boolean hasZuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public long getZuid() {
        return zuid_;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public Builder setZuid(long value) {
        bitField0_ |= 0x00000002;
        zuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 zuid = 2;</code>
       *
       * <pre>
       *直播人id
       * </pre>
       */
      public Builder clearZuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        zuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>required string liveId = 3;</code>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 3;</code>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        liveId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ViewerTopReq)
    }

    static {
      defaultInstance = new ViewerTopReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ViewerTopReq)
  }

  public interface ViewerTopRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ViewerTopRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    int getRetCode();

    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> 
        getViewerList();
    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.Viewer getViewer(int index);
    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    int getViewerCount();
    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> 
        getViewerOrBuilderList();
    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder getViewerOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ViewerTopRsp}
   */
  public static final class ViewerTopRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ViewerTopRsp)
      ViewerTopRspOrBuilder {
    // Use ViewerTopRsp.newBuilder() to construct.
    private ViewerTopRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ViewerTopRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ViewerTopRsp defaultInstance;
    public static ViewerTopRsp getDefaultInstance() {
      return defaultInstance;
    }

    public ViewerTopRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ViewerTopRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                viewer_ = new java.util.ArrayList<com.mi.liveassistant.proto.LiveCommonProto.Viewer>();
                mutable_bitField0_ |= 0x00000002;
              }
              viewer_.add(input.readMessage(com.mi.liveassistant.proto.LiveCommonProto.Viewer.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          viewer_ = java.util.Collections.unmodifiableList(viewer_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.ViewerTopRsp.class, com.mi.liveassistant.proto.LiveProto.ViewerTopRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<ViewerTopRsp> PARSER =
        new com.google.protobuf.AbstractParser<ViewerTopRsp>() {
      public ViewerTopRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ViewerTopRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ViewerTopRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    public static final int VIEWER_FIELD_NUMBER = 2;
    private java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> viewer_;
    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> getViewerList() {
      return viewer_;
    }
    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    public java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> 
        getViewerOrBuilderList() {
      return viewer_;
    }
    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    public int getViewerCount() {
      return viewer_.size();
    }
    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.Viewer getViewer(int index) {
      return viewer_.get(index);
    }
    /**
     * <code>repeated .Viewer viewer = 2;</code>
     *
     * <pre>
     *观众
     * </pre>
     */
    public com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder getViewerOrBuilder(
        int index) {
      return viewer_.get(index);
    }

    private void initFields() {
      retCode_ = 0;
      viewer_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getViewerCount(); i++) {
        if (!getViewer(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      for (int i = 0; i < viewer_.size(); i++) {
        output.writeMessage(2, viewer_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      for (int i = 0; i < viewer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, viewer_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.ViewerTopRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ViewerTopRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ViewerTopRsp)
        com.mi.liveassistant.proto.LiveProto.ViewerTopRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.ViewerTopRsp.class, com.mi.liveassistant.proto.LiveProto.ViewerTopRsp.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.ViewerTopRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getViewerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (viewerBuilder_ == null) {
          viewer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          viewerBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ViewerTopRsp_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.ViewerTopRsp getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.ViewerTopRsp.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.ViewerTopRsp build() {
        com.mi.liveassistant.proto.LiveProto.ViewerTopRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.ViewerTopRsp buildPartial() {
        com.mi.liveassistant.proto.LiveProto.ViewerTopRsp result = new com.mi.liveassistant.proto.LiveProto.ViewerTopRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        if (viewerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            viewer_ = java.util.Collections.unmodifiableList(viewer_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.viewer_ = viewer_;
        } else {
          result.viewer_ = viewerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.ViewerTopRsp) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.ViewerTopRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.ViewerTopRsp other) {
        if (other == com.mi.liveassistant.proto.LiveProto.ViewerTopRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        if (viewerBuilder_ == null) {
          if (!other.viewer_.isEmpty()) {
            if (viewer_.isEmpty()) {
              viewer_ = other.viewer_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureViewerIsMutable();
              viewer_.addAll(other.viewer_);
            }
            onChanged();
          }
        } else {
          if (!other.viewer_.isEmpty()) {
            if (viewerBuilder_.isEmpty()) {
              viewerBuilder_.dispose();
              viewerBuilder_ = null;
              viewer_ = other.viewer_;
              bitField0_ = (bitField0_ & ~0x00000002);
              viewerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getViewerFieldBuilder() : null;
            } else {
              viewerBuilder_.addAllMessages(other.viewer_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        for (int i = 0; i < getViewerCount(); i++) {
          if (!getViewer(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.ViewerTopRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.ViewerTopRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> viewer_ =
        java.util.Collections.emptyList();
      private void ensureViewerIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          viewer_ = new java.util.ArrayList<com.mi.liveassistant.proto.LiveCommonProto.Viewer>(viewer_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.Viewer, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder, com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> viewerBuilder_;

      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer> getViewerList() {
        if (viewerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(viewer_);
        } else {
          return viewerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public int getViewerCount() {
        if (viewerBuilder_ == null) {
          return viewer_.size();
        } else {
          return viewerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Viewer getViewer(int index) {
        if (viewerBuilder_ == null) {
          return viewer_.get(index);
        } else {
          return viewerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public Builder setViewer(
          int index, com.mi.liveassistant.proto.LiveCommonProto.Viewer value) {
        if (viewerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewerIsMutable();
          viewer_.set(index, value);
          onChanged();
        } else {
          viewerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public Builder setViewer(
          int index, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder builderForValue) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          viewer_.set(index, builderForValue.build());
          onChanged();
        } else {
          viewerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public Builder addViewer(com.mi.liveassistant.proto.LiveCommonProto.Viewer value) {
        if (viewerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewerIsMutable();
          viewer_.add(value);
          onChanged();
        } else {
          viewerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public Builder addViewer(
          int index, com.mi.liveassistant.proto.LiveCommonProto.Viewer value) {
        if (viewerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureViewerIsMutable();
          viewer_.add(index, value);
          onChanged();
        } else {
          viewerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public Builder addViewer(
          com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder builderForValue) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          viewer_.add(builderForValue.build());
          onChanged();
        } else {
          viewerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public Builder addViewer(
          int index, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder builderForValue) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          viewer_.add(index, builderForValue.build());
          onChanged();
        } else {
          viewerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public Builder addAllViewer(
          java.lang.Iterable<? extends com.mi.liveassistant.proto.LiveCommonProto.Viewer> values) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, viewer_);
          onChanged();
        } else {
          viewerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public Builder clearViewer() {
        if (viewerBuilder_ == null) {
          viewer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          viewerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public Builder removeViewer(int index) {
        if (viewerBuilder_ == null) {
          ensureViewerIsMutable();
          viewer_.remove(index);
          onChanged();
        } else {
          viewerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder getViewerBuilder(
          int index) {
        return getViewerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder getViewerOrBuilder(
          int index) {
        if (viewerBuilder_ == null) {
          return viewer_.get(index);  } else {
          return viewerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public java.util.List<? extends com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> 
           getViewerOrBuilderList() {
        if (viewerBuilder_ != null) {
          return viewerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(viewer_);
        }
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder addViewerBuilder() {
        return getViewerFieldBuilder().addBuilder(
            com.mi.liveassistant.proto.LiveCommonProto.Viewer.getDefaultInstance());
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder addViewerBuilder(
          int index) {
        return getViewerFieldBuilder().addBuilder(
            index, com.mi.liveassistant.proto.LiveCommonProto.Viewer.getDefaultInstance());
      }
      /**
       * <code>repeated .Viewer viewer = 2;</code>
       *
       * <pre>
       *观众
       * </pre>
       */
      public java.util.List<com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder> 
           getViewerBuilderList() {
        return getViewerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mi.liveassistant.proto.LiveCommonProto.Viewer, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder, com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder> 
          getViewerFieldBuilder() {
        if (viewerBuilder_ == null) {
          viewerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mi.liveassistant.proto.LiveCommonProto.Viewer, com.mi.liveassistant.proto.LiveCommonProto.Viewer.Builder, com.mi.liveassistant.proto.LiveCommonProto.ViewerOrBuilder>(
                  viewer_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          viewer_ = null;
        }
        return viewerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ViewerTopRsp)
    }

    static {
      defaultInstance = new ViewerTopRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ViewerTopRsp)
  }

  public interface ZuidSleepReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ZuidSleepReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    boolean hasLiveId();
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    java.lang.String getLiveId();
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();
  }
  /**
   * Protobuf type {@code ZuidSleepReq}
   *
   * <pre>
   *主播退到后台运行
   *zhibo.live.zuidSleep
   * </pre>
   */
  public static final class ZuidSleepReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ZuidSleepReq)
      ZuidSleepReqOrBuilder {
    // Use ZuidSleepReq.newBuilder() to construct.
    private ZuidSleepReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZuidSleepReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZuidSleepReq defaultInstance;
    public static ZuidSleepReq getDefaultInstance() {
      return defaultInstance;
    }

    public ZuidSleepReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZuidSleepReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              liveId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.ZuidSleepReq.class, com.mi.liveassistant.proto.LiveProto.ZuidSleepReq.Builder.class);
    }

    public static com.google.protobuf.Parser<ZuidSleepReq> PARSER =
        new com.google.protobuf.AbstractParser<ZuidSleepReq>() {
      public ZuidSleepReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZuidSleepReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZuidSleepReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LIVEID_FIELD_NUMBER = 1;
    private java.lang.Object liveId_;
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      liveId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLiveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLiveIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLiveIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.ZuidSleepReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZuidSleepReq}
     *
     * <pre>
     *主播退到后台运行
     *zhibo.live.zuidSleep
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ZuidSleepReq)
        com.mi.liveassistant.proto.LiveProto.ZuidSleepReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.ZuidSleepReq.class, com.mi.liveassistant.proto.LiveProto.ZuidSleepReq.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.ZuidSleepReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepReq_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidSleepReq getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.ZuidSleepReq.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidSleepReq build() {
        com.mi.liveassistant.proto.LiveProto.ZuidSleepReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidSleepReq buildPartial() {
        com.mi.liveassistant.proto.LiveProto.ZuidSleepReq result = new com.mi.liveassistant.proto.LiveProto.ZuidSleepReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.liveId_ = liveId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.ZuidSleepReq) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.ZuidSleepReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.ZuidSleepReq other) {
        if (other == com.mi.liveassistant.proto.LiveProto.ZuidSleepReq.getDefaultInstance()) return this;
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000001;
          liveId_ = other.liveId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLiveId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.ZuidSleepReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.ZuidSleepReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object liveId_ = "";
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        liveId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZuidSleepReq)
    }

    static {
      defaultInstance = new ZuidSleepReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZuidSleepReq)
  }

  public interface ZuidSleepRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ZuidSleepRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    int getRetCode();
  }
  /**
   * Protobuf type {@code ZuidSleepRsp}
   */
  public static final class ZuidSleepRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ZuidSleepRsp)
      ZuidSleepRspOrBuilder {
    // Use ZuidSleepRsp.newBuilder() to construct.
    private ZuidSleepRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZuidSleepRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZuidSleepRsp defaultInstance;
    public static ZuidSleepRsp getDefaultInstance() {
      return defaultInstance;
    }

    public ZuidSleepRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZuidSleepRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp.class, com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<ZuidSleepRsp> PARSER =
        new com.google.protobuf.AbstractParser<ZuidSleepRsp>() {
      public ZuidSleepRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZuidSleepRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZuidSleepRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    private void initFields() {
      retCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZuidSleepRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ZuidSleepRsp)
        com.mi.liveassistant.proto.LiveProto.ZuidSleepRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp.class, com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidSleepRsp_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp build() {
        com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp buildPartial() {
        com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp result = new com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp other) {
        if (other == com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.ZuidSleepRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZuidSleepRsp)
    }

    static {
      defaultInstance = new ZuidSleepRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZuidSleepRsp)
  }

  public interface ZuidActiveReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ZuidActiveReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    boolean hasLiveId();
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    java.lang.String getLiveId();
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();
  }
  /**
   * Protobuf type {@code ZuidActiveReq}
   *
   * <pre>
   *主播回来
   *zhibo.live.zuidActive
   * </pre>
   */
  public static final class ZuidActiveReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ZuidActiveReq)
      ZuidActiveReqOrBuilder {
    // Use ZuidActiveReq.newBuilder() to construct.
    private ZuidActiveReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZuidActiveReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZuidActiveReq defaultInstance;
    public static ZuidActiveReq getDefaultInstance() {
      return defaultInstance;
    }

    public ZuidActiveReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZuidActiveReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              liveId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.ZuidActiveReq.class, com.mi.liveassistant.proto.LiveProto.ZuidActiveReq.Builder.class);
    }

    public static com.google.protobuf.Parser<ZuidActiveReq> PARSER =
        new com.google.protobuf.AbstractParser<ZuidActiveReq>() {
      public ZuidActiveReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZuidActiveReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZuidActiveReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LIVEID_FIELD_NUMBER = 1;
    private java.lang.Object liveId_;
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string liveId = 1;</code>
     *
     * <pre>
     *流名或者是房间号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      liveId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLiveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLiveIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLiveIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.ZuidActiveReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZuidActiveReq}
     *
     * <pre>
     *主播回来
     *zhibo.live.zuidActive
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ZuidActiveReq)
        com.mi.liveassistant.proto.LiveProto.ZuidActiveReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.ZuidActiveReq.class, com.mi.liveassistant.proto.LiveProto.ZuidActiveReq.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.ZuidActiveReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveReq_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidActiveReq getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.ZuidActiveReq.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidActiveReq build() {
        com.mi.liveassistant.proto.LiveProto.ZuidActiveReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidActiveReq buildPartial() {
        com.mi.liveassistant.proto.LiveProto.ZuidActiveReq result = new com.mi.liveassistant.proto.LiveProto.ZuidActiveReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.liveId_ = liveId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.ZuidActiveReq) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.ZuidActiveReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.ZuidActiveReq other) {
        if (other == com.mi.liveassistant.proto.LiveProto.ZuidActiveReq.getDefaultInstance()) return this;
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000001;
          liveId_ = other.liveId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLiveId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.ZuidActiveReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.ZuidActiveReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object liveId_ = "";
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 1;</code>
       *
       * <pre>
       *流名或者是房间号
       * </pre>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        liveId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZuidActiveReq)
    }

    static {
      defaultInstance = new ZuidActiveReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZuidActiveReq)
  }

  public interface ZuidActiveRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ZuidActiveRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    boolean hasRetCode();
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    int getRetCode();
  }
  /**
   * Protobuf type {@code ZuidActiveRsp}
   */
  public static final class ZuidActiveRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ZuidActiveRsp)
      ZuidActiveRspOrBuilder {
    // Use ZuidActiveRsp.newBuilder() to construct.
    private ZuidActiveRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZuidActiveRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZuidActiveRsp defaultInstance;
    public static ZuidActiveRsp getDefaultInstance() {
      return defaultInstance;
    }

    public ZuidActiveRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZuidActiveRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retCode_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp.class, com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<ZuidActiveRsp> PARSER =
        new com.google.protobuf.AbstractParser<ZuidActiveRsp>() {
      public ZuidActiveRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZuidActiveRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZuidActiveRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private int retCode_;
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public boolean hasRetCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 retCode = 1;</code>
     *
     * <pre>
     *0:表示成功
     * </pre>
     */
    public int getRetCode() {
      return retCode_;
    }

    private void initFields() {
      retCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, retCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, retCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ZuidActiveRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ZuidActiveRsp)
        com.mi.liveassistant.proto.LiveProto.ZuidActiveRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp.class, com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp.Builder.class);
      }

      // Construct using com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        retCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mi.liveassistant.proto.LiveProto.internal_static_ZuidActiveRsp_descriptor;
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp getDefaultInstanceForType() {
        return com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp.getDefaultInstance();
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp build() {
        com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp buildPartial() {
        com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp result = new com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retCode_ = retCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp) {
          return mergeFrom((com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp other) {
        if (other == com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mi.liveassistant.proto.LiveProto.ZuidActiveRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retCode_ ;
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public boolean hasRetCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public int getRetCode() {
        return retCode_;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder setRetCode(int value) {
        bitField0_ |= 0x00000001;
        retCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 retCode = 1;</code>
       *
       * <pre>
       *0:表示成功
       * </pre>
       */
      public Builder clearRetCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ZuidActiveRsp)
    }

    static {
      defaultInstance = new ZuidActiveRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ZuidActiveRsp)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BeginLiveReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BeginLiveReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BeginLiveRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BeginLiveRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EndLiveReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EndLiveReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EndLiveRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EndLiveRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EnterLiveReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EnterLiveReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EnterLiveRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EnterLiveRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LeaveLiveReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LeaveLiveReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LeaveLiveRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LeaveLiveRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HeartBeatReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeartBeatReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HeartBeatRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeartBeatRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ViewerTopReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ViewerTopReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ViewerTopRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ViewerTopRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ZuidSleepReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZuidSleepReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ZuidSleepRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZuidSleepRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ZuidActiveReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZuidActiveReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ZuidActiveRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ZuidActiveRsp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nLive.proto\032\020LiveCommon.proto\"\353\002\n\014Begin" +
      "LiveReq\022\014\n\004uuid\030\001 \002(\004\022\033\n\010location\030\002 \001(\0132" +
      "\t.Location\022\014\n\004type\030\003 \001(\r\022\017\n\007invitee\030\004 \003(" +
      "\004\022\022\n\naddHistory\030\005 \001(\010\022\021\n\tliveTitle\030\006 \001(\t" +
      "\022\020\n\010password\030\007 \001(\t\022\035\n\tliveCover\030\010 \001(\0132\n." +
      "LiveCover\022\016\n\006liveId\030\t \001(\t\022\017\n\007appType\030\n \001" +
      "(\r\022\031\n\007appInfo\030\013 \001(\0132\010.AppInfo\022\016\n\006playUI\030" +
      "\014 \001(\r\022\'\n\016ticketLiveInfo\030\r \001(\0132\017.TicketLi" +
      "veInfo\022\032\n\010tagInfos\030\016 \003(\0132\010.TagInfo\022\030\n\020su" +
      "pportMagicFace\030\020 \001(\010\022\016\n\006source\030\021 \001(\r\"\322\001\n",
      "\014BeginLiveRsp\022\017\n\007retCode\030\001 \002(\r\022\016\n\006liveId" +
      "\030\002 \001(\t\022\022\n\ncreateTime\030\003 \001(\004\022\020\n\010shareUrl\030\004" +
      " \001(\t\022\023\n\013upStreamUrl\030\005 \001(\t\022\022\n\nbeginLevel\030" +
      "\006 \001(\r\022\024\n\014showIconCtrl\030\007 \001(\r\022\026\n\016udpUpstre" +
      "amUrl\030\010 \001(\t\022$\n\016newUpStreamUrl\030\t \003(\0132\014.Up" +
      "StreamUrl\"g\n\nEndLiveReq\022\014\n\004uuid\030\001 \002(\004\022\016\n" +
      "\006liveId\030\002 \002(\t\022\017\n\007appType\030\003 \001(\r\022\031\n\007appInf" +
      "o\030\004 \001(\0132\010.AppInfo\022\017\n\007guildId\030\005 \001(\004\"\311\001\n\nE" +
      "ndLiveRsp\022\017\n\007retCode\030\001 \002(\r\022\024\n\014hisViewerC" +
      "nt\030\002 \001(\r\022\033\n\023generateHistorySucc\030\003 \001(\010\022\032\n",
      "\022generateHistoryMsg\030\004 \001(\t\022\030\n\020ticketBuyer" +
      "Count\030\005 \001(\r\022\027\n\017hisBeginLiveCnt\030\006 \001(\004\022\020\n\010" +
      "duration\030\007 \001(\004\022\026\n\016newFollowerCnt\030\010 \001(\004\"Z" +
      "\n\014EnterLiveReq\022\014\n\004uuid\030\001 \002(\004\022\014\n\004zuid\030\002 \002" +
      "(\004\022\016\n\006liveId\030\003 \002(\t\022\020\n\010password\030\004 \001(\t\022\014\n\004" +
      "type\030\005 \001(\r\"\225\004\n\014EnterLiveRsp\022\017\n\007retCode\030\001" +
      " \002(\r\022\021\n\tviewerCnt\030\002 \001(\r\022\027\n\006viewer\030\004 \003(\0132" +
      "\007.Viewer\022\021\n\tisManager\030\006 \001(\010\022\020\n\010banSpeak\030" +
      "\007 \001(\010\022\033\n\010location\030\010 \001(\0132\t.Location\022\014\n\004ty" +
      "pe\030\t \001(\r\022\020\n\010shareUrl\030\n \001(\t\022\034\n\013otherPKInf",
      "o\030\013 \001(\0132\007.PKInfo\022\024\n\014pkInitTicket\030\014 \001(\r\022\025" +
      "\n\rdownStreamUrl\030\r \001(\t\022\031\n\007micInfo\030\016 \001(\0132\010" +
      ".MicInfo\022\024\n\014micuidStatus\030\017 \001(\r\022\021\n\ttimest" +
      "amp\030\020 \001(\004\022\035\n\tliveCover\030\021 \001(\0132\n.LiveCover" +
      "\022\021\n\tliveTitle\030\022 \001(\t\022\023\n\013messageMode\030\023 \001(\005" +
      "\022\031\n\007msgRule\030\024 \001(\0132\010.MsgRule\022\016\n\006isShop\030\025 " +
      "\001(\010\022\020\n\010hideGift\030\026 \001(\010\022\020\n\010hideIcon\030\027 \001(\005\022" +
      "\'\n\014ticketStatus\030\030 \001(\0132\021.TicketLiveStatus" +
      "\022\030\n\020supportMagicFace\030\032 \001(\010\"O\n\014LeaveLiveR" +
      "eq\022\014\n\004uuid\030\001 \002(\004\022\014\n\004zuid\030\002 \002(\004\022\016\n\006liveId",
      "\030\003 \002(\t\022\023\n\013messageMode\030\004 \001(\005\"\037\n\014LeaveLive" +
      "Rsp\022\017\n\007retCode\030\001 \002(\r\"u\n\014HeartBeatReq\022\016\n\006" +
      "liveId\030\001 \002(\t\022\r\n\005pkuid\030\002 \001(\004\022\020\n\010pkLiveId\030" +
      "\003 \001(\t\022\016\n\006status\030\004 \001(\005\022\016\n\006micuid\030\005 \001(\004\022\024\n" +
      "\014micuidStatus\030\006 \001(\005\"\037\n\014HeartBeatRsp\022\017\n\007r" +
      "etCode\030\001 \002(\r\":\n\014ViewerTopReq\022\014\n\004uuid\030\001 \002" +
      "(\004\022\014\n\004zuid\030\002 \002(\004\022\016\n\006liveId\030\003 \002(\t\"8\n\014View" +
      "erTopRsp\022\017\n\007retCode\030\001 \002(\r\022\027\n\006viewer\030\002 \003(" +
      "\0132\007.Viewer\"\036\n\014ZuidSleepReq\022\016\n\006liveId\030\001 \002" +
      "(\t\"\037\n\014ZuidSleepRsp\022\017\n\007retCode\030\001 \002(\r\"\037\n\rZ",
      "uidActiveReq\022\016\n\006liveId\030\001 \002(\t\" \n\rZuidActi" +
      "veRsp\022\017\n\007retCode\030\001 \002(\rB\'\n\032com.mi.liveass" +
      "istant.protoB\tLiveProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.mi.liveassistant.proto.LiveCommonProto.getDescriptor(),
        }, assigner);
    internal_static_BeginLiveReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_BeginLiveReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_BeginLiveReq_descriptor,
        new java.lang.String[] { "Uuid", "Location", "Type", "Invitee", "AddHistory", "LiveTitle", "Password", "LiveCover", "LiveId", "AppType", "AppInfo", "PlayUI", "TicketLiveInfo", "TagInfos", "SupportMagicFace", "Source", });
    internal_static_BeginLiveRsp_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_BeginLiveRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_BeginLiveRsp_descriptor,
        new java.lang.String[] { "RetCode", "LiveId", "CreateTime", "ShareUrl", "UpStreamUrl", "BeginLevel", "ShowIconCtrl", "UdpUpstreamUrl", "NewUpStreamUrl", });
    internal_static_EndLiveReq_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_EndLiveReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_EndLiveReq_descriptor,
        new java.lang.String[] { "Uuid", "LiveId", "AppType", "AppInfo", "GuildId", });
    internal_static_EndLiveRsp_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_EndLiveRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_EndLiveRsp_descriptor,
        new java.lang.String[] { "RetCode", "HisViewerCnt", "GenerateHistorySucc", "GenerateHistoryMsg", "TicketBuyerCount", "HisBeginLiveCnt", "Duration", "NewFollowerCnt", });
    internal_static_EnterLiveReq_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_EnterLiveReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_EnterLiveReq_descriptor,
        new java.lang.String[] { "Uuid", "Zuid", "LiveId", "Password", "Type", });
    internal_static_EnterLiveRsp_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_EnterLiveRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_EnterLiveRsp_descriptor,
        new java.lang.String[] { "RetCode", "ViewerCnt", "Viewer", "IsManager", "BanSpeak", "Location", "Type", "ShareUrl", "OtherPKInfo", "PkInitTicket", "DownStreamUrl", "MicInfo", "MicuidStatus", "Timestamp", "LiveCover", "LiveTitle", "MessageMode", "MsgRule", "IsShop", "HideGift", "HideIcon", "TicketStatus", "SupportMagicFace", });
    internal_static_LeaveLiveReq_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_LeaveLiveReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LeaveLiveReq_descriptor,
        new java.lang.String[] { "Uuid", "Zuid", "LiveId", "MessageMode", });
    internal_static_LeaveLiveRsp_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_LeaveLiveRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LeaveLiveRsp_descriptor,
        new java.lang.String[] { "RetCode", });
    internal_static_HeartBeatReq_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_HeartBeatReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_HeartBeatReq_descriptor,
        new java.lang.String[] { "LiveId", "Pkuid", "PkLiveId", "Status", "Micuid", "MicuidStatus", });
    internal_static_HeartBeatRsp_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_HeartBeatRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_HeartBeatRsp_descriptor,
        new java.lang.String[] { "RetCode", });
    internal_static_ViewerTopReq_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_ViewerTopReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ViewerTopReq_descriptor,
        new java.lang.String[] { "Uuid", "Zuid", "LiveId", });
    internal_static_ViewerTopRsp_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_ViewerTopRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ViewerTopRsp_descriptor,
        new java.lang.String[] { "RetCode", "Viewer", });
    internal_static_ZuidSleepReq_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_ZuidSleepReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ZuidSleepReq_descriptor,
        new java.lang.String[] { "LiveId", });
    internal_static_ZuidSleepRsp_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_ZuidSleepRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ZuidSleepRsp_descriptor,
        new java.lang.String[] { "RetCode", });
    internal_static_ZuidActiveReq_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_ZuidActiveReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ZuidActiveReq_descriptor,
        new java.lang.String[] { "LiveId", });
    internal_static_ZuidActiveRsp_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_ZuidActiveRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ZuidActiveRsp_descriptor,
        new java.lang.String[] { "RetCode", });
    com.mi.liveassistant.proto.LiveCommonProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
