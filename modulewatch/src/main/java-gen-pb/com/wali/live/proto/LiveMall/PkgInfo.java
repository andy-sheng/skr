// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMall.proto
package com.wali.live.proto.LiveMall;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PkgInfo extends Message<PkgInfo, PkgInfo.Builder> {
  public static final ProtoAdapter<PkgInfo> ADAPTER = new ProtoAdapter_PkgInfo();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_PKG_ID = 0L;

  public static final String DEFAULT_PKG_NAME = "";

  public static final String DEFAULT_PKG_DESC = "";

  public static final String DEFAULT_PKG_URL = "";

  /**
   * 二级商品包id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long pkg_id;

  /**
   * 二级商品包name
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String pkg_name;

  /**
   * 二级商品包desc
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String pkg_desc;

  /**
   * 缩略图
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String pkg_url;

  public PkgInfo(Long pkg_id, String pkg_name, String pkg_desc, String pkg_url) {
    this(pkg_id, pkg_name, pkg_desc, pkg_url, ByteString.EMPTY);
  }

  public PkgInfo(Long pkg_id, String pkg_name, String pkg_desc, String pkg_url,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.pkg_id = pkg_id;
    this.pkg_name = pkg_name;
    this.pkg_desc = pkg_desc;
    this.pkg_url = pkg_url;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.pkg_id = pkg_id;
    builder.pkg_name = pkg_name;
    builder.pkg_desc = pkg_desc;
    builder.pkg_url = pkg_url;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PkgInfo)) return false;
    PkgInfo o = (PkgInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(pkg_id, o.pkg_id)
        && Internal.equals(pkg_name, o.pkg_name)
        && Internal.equals(pkg_desc, o.pkg_desc)
        && Internal.equals(pkg_url, o.pkg_url);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (pkg_id != null ? pkg_id.hashCode() : 0);
      result = result * 37 + (pkg_name != null ? pkg_name.hashCode() : 0);
      result = result * 37 + (pkg_desc != null ? pkg_desc.hashCode() : 0);
      result = result * 37 + (pkg_url != null ? pkg_url.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (pkg_id != null) builder.append(", pkg_id=").append(pkg_id);
    if (pkg_name != null) builder.append(", pkg_name=").append(pkg_name);
    if (pkg_desc != null) builder.append(", pkg_desc=").append(pkg_desc);
    if (pkg_url != null) builder.append(", pkg_url=").append(pkg_url);
    return builder.replace(0, 2, "PkgInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return PkgInfo.ADAPTER.encode(this);
  }

  public static final PkgInfo parseFrom(byte[] data) throws IOException {
    PkgInfo c = null;
       c = PkgInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 二级商品包id
   */
  public Long getPkgId() {
    if(pkg_id==null){
        return DEFAULT_PKG_ID;
    }
    return pkg_id;
  }

  /**
   * 二级商品包name
   */
  public String getPkgName() {
    if(pkg_name==null){
        return DEFAULT_PKG_NAME;
    }
    return pkg_name;
  }

  /**
   * 二级商品包desc
   */
  public String getPkgDesc() {
    if(pkg_desc==null){
        return DEFAULT_PKG_DESC;
    }
    return pkg_desc;
  }

  /**
   * 缩略图
   */
  public String getPkgUrl() {
    if(pkg_url==null){
        return DEFAULT_PKG_URL;
    }
    return pkg_url;
  }

  /**
   * 二级商品包id
   */
  public boolean hasPkgId() {
    return pkg_id!=null;
  }

  /**
   * 二级商品包name
   */
  public boolean hasPkgName() {
    return pkg_name!=null;
  }

  /**
   * 二级商品包desc
   */
  public boolean hasPkgDesc() {
    return pkg_desc!=null;
  }

  /**
   * 缩略图
   */
  public boolean hasPkgUrl() {
    return pkg_url!=null;
  }

  public static final class Builder extends Message.Builder<PkgInfo, Builder> {
    public Long pkg_id;

    public String pkg_name;

    public String pkg_desc;

    public String pkg_url;

    public Builder() {
    }

    /**
     * 二级商品包id
     */
    public Builder setPkgId(Long pkg_id) {
      this.pkg_id = pkg_id;
      return this;
    }

    /**
     * 二级商品包name
     */
    public Builder setPkgName(String pkg_name) {
      this.pkg_name = pkg_name;
      return this;
    }

    /**
     * 二级商品包desc
     */
    public Builder setPkgDesc(String pkg_desc) {
      this.pkg_desc = pkg_desc;
      return this;
    }

    /**
     * 缩略图
     */
    public Builder setPkgUrl(String pkg_url) {
      this.pkg_url = pkg_url;
      return this;
    }

    @Override
    public PkgInfo build() {
      return new PkgInfo(pkg_id, pkg_name, pkg_desc, pkg_url, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PkgInfo extends ProtoAdapter<PkgInfo> {
    public ProtoAdapter_PkgInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, PkgInfo.class);
    }

    @Override
    public int encodedSize(PkgInfo value) {
      return ProtoAdapter.INT64.encodedSizeWithTag(1, value.pkg_id)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.pkg_name)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.pkg_desc)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.pkg_url)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PkgInfo value) throws IOException {
      ProtoAdapter.INT64.encodeWithTag(writer, 1, value.pkg_id);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.pkg_name);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.pkg_desc);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.pkg_url);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PkgInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setPkgId(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.setPkgName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.setPkgDesc(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setPkgUrl(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PkgInfo redact(PkgInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
