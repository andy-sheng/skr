// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 拉取未读消息响应
 */
public final class SyncUnreadResponse extends Message<SyncUnreadResponse, SyncUnreadResponse.Builder> {
  public static final ProtoAdapter<SyncUnreadResponse> ADAPTER = new ProtoAdapter_SyncUnreadResponse();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RET = 0;

  public static final String DEFAULT_ERROR_MSG = "";

  public static final Integer DEFAULT_TOTAL_UNREAD_COUNT = 0;

  public static final Long DEFAULT_CID = 0L;

  public static final String DEFAULT_PAGE_ID = "";

  /**
   *  返回码
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer ret;

  /**
   * 错误信息
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String error_msg;

  /**
   * 所有未读消息
   */
  @WireField(
      tag = 3,
      adapter = "com.wali.live.proto.LiveMessage.Unread#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Unread> unread;

  /**
   * 总共未读数
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer total_unread_count;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long cid;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String page_id;

  public SyncUnreadResponse(Integer ret, String error_msg, List<Unread> unread,
      Integer total_unread_count, Long cid, String page_id) {
    this(ret, error_msg, unread, total_unread_count, cid, page_id, ByteString.EMPTY);
  }

  public SyncUnreadResponse(Integer ret, String error_msg, List<Unread> unread,
      Integer total_unread_count, Long cid, String page_id, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.ret = ret;
    this.error_msg = error_msg;
    this.unread = Internal.immutableCopyOf("unread", unread);
    this.total_unread_count = total_unread_count;
    this.cid = cid;
    this.page_id = page_id;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.ret = ret;
    builder.error_msg = error_msg;
    builder.unread = Internal.copyOf("unread", unread);
    builder.total_unread_count = total_unread_count;
    builder.cid = cid;
    builder.page_id = page_id;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SyncUnreadResponse)) return false;
    SyncUnreadResponse o = (SyncUnreadResponse) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(ret, o.ret)
        && Internal.equals(error_msg, o.error_msg)
        && unread.equals(o.unread)
        && Internal.equals(total_unread_count, o.total_unread_count)
        && Internal.equals(cid, o.cid)
        && Internal.equals(page_id, o.page_id);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (ret != null ? ret.hashCode() : 0);
      result = result * 37 + (error_msg != null ? error_msg.hashCode() : 0);
      result = result * 37 + unread.hashCode();
      result = result * 37 + (total_unread_count != null ? total_unread_count.hashCode() : 0);
      result = result * 37 + (cid != null ? cid.hashCode() : 0);
      result = result * 37 + (page_id != null ? page_id.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (ret != null) builder.append(", ret=").append(ret);
    if (error_msg != null) builder.append(", error_msg=").append(error_msg);
    if (!unread.isEmpty()) builder.append(", unread=").append(unread);
    if (total_unread_count != null) builder.append(", total_unread_count=").append(total_unread_count);
    if (cid != null) builder.append(", cid=").append(cid);
    if (page_id != null) builder.append(", page_id=").append(page_id);
    return builder.replace(0, 2, "SyncUnreadResponse{").append('}').toString();
  }

  public static final SyncUnreadResponse parseFrom(byte[] data) throws IOException {
    SyncUnreadResponse c = null;
       c = SyncUnreadResponse.ADAPTER.decode(data);
    return c;
  }

  /**
   *  返回码
   */
  public Integer getRet() {
    if(ret==null){
        return DEFAULT_RET;
    }
    return ret;
  }

  /**
   * 错误信息
   */
  public String getErrorMsg() {
    if(error_msg==null){
        return DEFAULT_ERROR_MSG;
    }
    return error_msg;
  }

  /**
   * 所有未读消息
   */
  public List<Unread> getUnreadList() {
    if(unread==null){
        return new java.util.ArrayList<Unread>();
    }
    return unread;
  }

  /**
   * 总共未读数
   */
  public Integer getTotalUnreadCount() {
    if(total_unread_count==null){
        return DEFAULT_TOTAL_UNREAD_COUNT;
    }
    return total_unread_count;
  }

  public Long getCid() {
    if(cid==null){
        return DEFAULT_CID;
    }
    return cid;
  }

  public String getPageId() {
    if(page_id==null){
        return DEFAULT_PAGE_ID;
    }
    return page_id;
  }

  /**
   *  返回码
   */
  public boolean hasRet() {
    return ret!=null;
  }

  /**
   * 错误信息
   */
  public boolean hasErrorMsg() {
    return error_msg!=null;
  }

  /**
   * 所有未读消息
   */
  public boolean hasUnreadList() {
    return unread!=null;
  }

  /**
   * 总共未读数
   */
  public boolean hasTotalUnreadCount() {
    return total_unread_count!=null;
  }

  public boolean hasCid() {
    return cid!=null;
  }

  public boolean hasPageId() {
    return page_id!=null;
  }

  public static final class Builder extends Message.Builder<SyncUnreadResponse, Builder> {
    public Integer ret;

    public String error_msg;

    public List<Unread> unread;

    public Integer total_unread_count;

    public Long cid;

    public String page_id;

    public Builder() {
      unread = Internal.newMutableList();
    }

    /**
     *  返回码
     */
    public Builder setRet(Integer ret) {
      this.ret = ret;
      return this;
    }

    /**
     * 错误信息
     */
    public Builder setErrorMsg(String error_msg) {
      this.error_msg = error_msg;
      return this;
    }

    /**
     * 所有未读消息
     */
    public Builder addAllUnread(List<Unread> unread) {
      Internal.checkElementsNotNull(unread);
      this.unread = unread;
      return this;
    }

    /**
     * 总共未读数
     */
    public Builder setTotalUnreadCount(Integer total_unread_count) {
      this.total_unread_count = total_unread_count;
      return this;
    }

    public Builder setCid(Long cid) {
      this.cid = cid;
      return this;
    }

    public Builder setPageId(String page_id) {
      this.page_id = page_id;
      return this;
    }

    @Override
    public SyncUnreadResponse build() {
      return new SyncUnreadResponse(ret, error_msg, unread, total_unread_count, cid, page_id, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SyncUnreadResponse extends ProtoAdapter<SyncUnreadResponse> {
    public ProtoAdapter_SyncUnreadResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, SyncUnreadResponse.class);
    }

    @Override
    public int encodedSize(SyncUnreadResponse value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.ret)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.error_msg)
          + Unread.ADAPTER.asRepeated().encodedSizeWithTag(3, value.unread)
          + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.total_unread_count)
          + ProtoAdapter.UINT64.encodedSizeWithTag(5, value.cid)
          + ProtoAdapter.STRING.encodedSizeWithTag(6, value.page_id)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SyncUnreadResponse value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.ret);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.error_msg);
      Unread.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.unread);
      ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.total_unread_count);
      ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.cid);
      ProtoAdapter.STRING.encodeWithTag(writer, 6, value.page_id);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SyncUnreadResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRet(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setErrorMsg(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.unread.add(Unread.ADAPTER.decode(reader)); break;
          case 4: builder.setTotalUnreadCount(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.setCid(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.setPageId(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SyncUnreadResponse redact(SyncUnreadResponse value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.unread, Unread.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
