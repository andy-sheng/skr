// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 直播结束消息
 */
public final class LiveEndMessage extends Message<LiveEndMessage, LiveEndMessage.Builder> {
  public static final ProtoAdapter<LiveEndMessage> ADAPTER = new ProtoAdapter_LiveEndMessage();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_HISVIEWERCNT = 0;

  public static final Long DEFAULT_HISBEGINLIVECNT = 0L;

  public static final Long DEFAULT_DURATION = 0L;

  public static final Long DEFAULT_NEWFOLLOWERCNT = 0L;

  /**
   * 历史房间观众数
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer hisViewerCnt;

  /**
   * 历史开播次数
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long hisBeginLiveCnt;

  /**
   * 开播时长（ms）
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long duration;

  /**
   * 新增关注数
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long newFollowerCnt;

  public LiveEndMessage(Integer hisViewerCnt, Long hisBeginLiveCnt, Long duration,
      Long newFollowerCnt) {
    this(hisViewerCnt, hisBeginLiveCnt, duration, newFollowerCnt, ByteString.EMPTY);
  }

  public LiveEndMessage(Integer hisViewerCnt, Long hisBeginLiveCnt, Long duration,
      Long newFollowerCnt, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.hisViewerCnt = hisViewerCnt;
    this.hisBeginLiveCnt = hisBeginLiveCnt;
    this.duration = duration;
    this.newFollowerCnt = newFollowerCnt;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.hisViewerCnt = hisViewerCnt;
    builder.hisBeginLiveCnt = hisBeginLiveCnt;
    builder.duration = duration;
    builder.newFollowerCnt = newFollowerCnt;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof LiveEndMessage)) return false;
    LiveEndMessage o = (LiveEndMessage) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(hisViewerCnt, o.hisViewerCnt)
        && Internal.equals(hisBeginLiveCnt, o.hisBeginLiveCnt)
        && Internal.equals(duration, o.duration)
        && Internal.equals(newFollowerCnt, o.newFollowerCnt);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (hisViewerCnt != null ? hisViewerCnt.hashCode() : 0);
      result = result * 37 + (hisBeginLiveCnt != null ? hisBeginLiveCnt.hashCode() : 0);
      result = result * 37 + (duration != null ? duration.hashCode() : 0);
      result = result * 37 + (newFollowerCnt != null ? newFollowerCnt.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (hisViewerCnt != null) builder.append(", hisViewerCnt=").append(hisViewerCnt);
    if (hisBeginLiveCnt != null) builder.append(", hisBeginLiveCnt=").append(hisBeginLiveCnt);
    if (duration != null) builder.append(", duration=").append(duration);
    if (newFollowerCnt != null) builder.append(", newFollowerCnt=").append(newFollowerCnt);
    return builder.replace(0, 2, "LiveEndMessage{").append('}').toString();
  }

  public byte[] toByteArray() {
    return LiveEndMessage.ADAPTER.encode(this);
  }

  public static final LiveEndMessage parseFrom(byte[] data) throws IOException {
    LiveEndMessage c = null;
       c = LiveEndMessage.ADAPTER.decode(data);
    return c;
  }

  /**
   * 历史房间观众数
   */
  public Integer getHisViewerCnt() {
    if(hisViewerCnt==null){
        return DEFAULT_HISVIEWERCNT;
    }
    return hisViewerCnt;
  }

  /**
   * 历史开播次数
   */
  public Long getHisBeginLiveCnt() {
    if(hisBeginLiveCnt==null){
        return DEFAULT_HISBEGINLIVECNT;
    }
    return hisBeginLiveCnt;
  }

  /**
   * 开播时长（ms）
   */
  public Long getDuration() {
    if(duration==null){
        return DEFAULT_DURATION;
    }
    return duration;
  }

  /**
   * 新增关注数
   */
  public Long getNewFollowerCnt() {
    if(newFollowerCnt==null){
        return DEFAULT_NEWFOLLOWERCNT;
    }
    return newFollowerCnt;
  }

  /**
   * 历史房间观众数
   */
  public boolean hasHisViewerCnt() {
    return hisViewerCnt!=null;
  }

  /**
   * 历史开播次数
   */
  public boolean hasHisBeginLiveCnt() {
    return hisBeginLiveCnt!=null;
  }

  /**
   * 开播时长（ms）
   */
  public boolean hasDuration() {
    return duration!=null;
  }

  /**
   * 新增关注数
   */
  public boolean hasNewFollowerCnt() {
    return newFollowerCnt!=null;
  }

  public static final class Builder extends Message.Builder<LiveEndMessage, Builder> {
    public Integer hisViewerCnt;

    public Long hisBeginLiveCnt;

    public Long duration;

    public Long newFollowerCnt;

    public Builder() {
    }

    /**
     * 历史房间观众数
     */
    public Builder setHisViewerCnt(Integer hisViewerCnt) {
      this.hisViewerCnt = hisViewerCnt;
      return this;
    }

    /**
     * 历史开播次数
     */
    public Builder setHisBeginLiveCnt(Long hisBeginLiveCnt) {
      this.hisBeginLiveCnt = hisBeginLiveCnt;
      return this;
    }

    /**
     * 开播时长（ms）
     */
    public Builder setDuration(Long duration) {
      this.duration = duration;
      return this;
    }

    /**
     * 新增关注数
     */
    public Builder setNewFollowerCnt(Long newFollowerCnt) {
      this.newFollowerCnt = newFollowerCnt;
      return this;
    }

    @Override
    public LiveEndMessage build() {
      return new LiveEndMessage(hisViewerCnt, hisBeginLiveCnt, duration, newFollowerCnt, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_LiveEndMessage extends ProtoAdapter<LiveEndMessage> {
    public ProtoAdapter_LiveEndMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, LiveEndMessage.class);
    }

    @Override
    public int encodedSize(LiveEndMessage value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.hisViewerCnt)
          + ProtoAdapter.UINT64.encodedSizeWithTag(2, value.hisBeginLiveCnt)
          + ProtoAdapter.UINT64.encodedSizeWithTag(3, value.duration)
          + ProtoAdapter.UINT64.encodedSizeWithTag(4, value.newFollowerCnt)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, LiveEndMessage value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.hisViewerCnt);
      ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.hisBeginLiveCnt);
      ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.duration);
      ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.newFollowerCnt);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public LiveEndMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setHisViewerCnt(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setHisBeginLiveCnt(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.setDuration(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.setNewFollowerCnt(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public LiveEndMessage redact(LiveEndMessage value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
