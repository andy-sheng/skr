// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: RadioSignal.proto
package com.wali.live.proto.RadioSignal;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * cmd: zhibo.diantai.apply_list  获取申请连麦中的用户列表
 */
public final class DiantaiApplyListReq extends Message<DiantaiApplyListReq, DiantaiApplyListReq.Builder> {
  public static final ProtoAdapter<DiantaiApplyListReq> ADAPTER = new ProtoAdapter_DiantaiApplyListReq();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_DIANTAI_ID = 0;

  public static final String DEFAULT_ROOM_ID = "";

  /**
   * 电台id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer diantai_id;

  /**
   * 直播房间id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String room_id;

  public DiantaiApplyListReq(Integer diantai_id, String room_id) {
    this(diantai_id, room_id, ByteString.EMPTY);
  }

  public DiantaiApplyListReq(Integer diantai_id, String room_id, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.diantai_id = diantai_id;
    this.room_id = room_id;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.diantai_id = diantai_id;
    builder.room_id = room_id;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof DiantaiApplyListReq)) return false;
    DiantaiApplyListReq o = (DiantaiApplyListReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(diantai_id, o.diantai_id)
        && Internal.equals(room_id, o.room_id);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (diantai_id != null ? diantai_id.hashCode() : 0);
      result = result * 37 + (room_id != null ? room_id.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (diantai_id != null) builder.append(", diantai_id=").append(diantai_id);
    if (room_id != null) builder.append(", room_id=").append(room_id);
    return builder.replace(0, 2, "DiantaiApplyListReq{").append('}').toString();
  }

  public byte[] toByteArray() {
    return DiantaiApplyListReq.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<DiantaiApplyListReq, Builder> {
    public Integer diantai_id;

    public String room_id;

    public Builder() {
    }

    /**
     * 电台id
     */
    public Builder setDiantaiId(Integer diantai_id) {
      this.diantai_id = diantai_id;
      return this;
    }

    /**
     * 直播房间id
     */
    public Builder setRoomId(String room_id) {
      this.room_id = room_id;
      return this;
    }

    @Override
    public DiantaiApplyListReq build() {
      return new DiantaiApplyListReq(diantai_id, room_id, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_DiantaiApplyListReq extends ProtoAdapter<DiantaiApplyListReq> {
    public ProtoAdapter_DiantaiApplyListReq() {
      super(FieldEncoding.LENGTH_DELIMITED, DiantaiApplyListReq.class);
    }

    @Override
    public int encodedSize(DiantaiApplyListReq value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.diantai_id)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.room_id)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, DiantaiApplyListReq value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.diantai_id);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.room_id);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public DiantaiApplyListReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setDiantaiId(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setRoomId(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public DiantaiApplyListReq redact(DiantaiApplyListReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
