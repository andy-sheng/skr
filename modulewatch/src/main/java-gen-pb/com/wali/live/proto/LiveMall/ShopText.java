// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMall.proto
package com.wali.live.proto.LiveMall;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ShopText extends Message<ShopText, ShopText.Builder> {
  public static final ProtoAdapter<ShopText> ADAPTER = new ProtoAdapter_ShopText();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_TEXT = "";

  public static final Long DEFAULT_SHOP_ID = 0L;

  public static final String DEFAULT_SHOP_URL = "";

  public static final String DEFAULT_URL = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String text;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long shop_id;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String shop_url;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String url;

  public ShopText(String text, Long shop_id, String shop_url, String url) {
    this(text, shop_id, shop_url, url, ByteString.EMPTY);
  }

  public ShopText(String text, Long shop_id, String shop_url, String url,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.text = text;
    this.shop_id = shop_id;
    this.shop_url = shop_url;
    this.url = url;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.text = text;
    builder.shop_id = shop_id;
    builder.shop_url = shop_url;
    builder.url = url;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ShopText)) return false;
    ShopText o = (ShopText) other;
    return unknownFields().equals(o.unknownFields())
        && text.equals(o.text)
        && Internal.equals(shop_id, o.shop_id)
        && Internal.equals(shop_url, o.shop_url)
        && Internal.equals(url, o.url);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + text.hashCode();
      result = result * 37 + (shop_id != null ? shop_id.hashCode() : 0);
      result = result * 37 + (shop_url != null ? shop_url.hashCode() : 0);
      result = result * 37 + (url != null ? url.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", text=").append(text);
    if (shop_id != null) builder.append(", shop_id=").append(shop_id);
    if (shop_url != null) builder.append(", shop_url=").append(shop_url);
    if (url != null) builder.append(", url=").append(url);
    return builder.replace(0, 2, "ShopText{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ShopText.ADAPTER.encode(this);
  }

  public static final ShopText parseFrom(byte[] data) throws IOException {
    ShopText c = null;
       c = ShopText.ADAPTER.decode(data);
    return c;
  }

  public String getText() {
    if(text==null){
        return DEFAULT_TEXT;
    }
    return text;
  }

  public Long getShopId() {
    if(shop_id==null){
        return DEFAULT_SHOP_ID;
    }
    return shop_id;
  }

  public String getShopUrl() {
    if(shop_url==null){
        return DEFAULT_SHOP_URL;
    }
    return shop_url;
  }

  public String getUrl() {
    if(url==null){
        return DEFAULT_URL;
    }
    return url;
  }

  public boolean hasText() {
    return text!=null;
  }

  public boolean hasShopId() {
    return shop_id!=null;
  }

  public boolean hasShopUrl() {
    return shop_url!=null;
  }

  public boolean hasUrl() {
    return url!=null;
  }

  public static final class Builder extends Message.Builder<ShopText, Builder> {
    public String text;

    public Long shop_id;

    public String shop_url;

    public String url;

    public Builder() {
    }

    public Builder setText(String text) {
      this.text = text;
      return this;
    }

    public Builder setShopId(Long shop_id) {
      this.shop_id = shop_id;
      return this;
    }

    public Builder setShopUrl(String shop_url) {
      this.shop_url = shop_url;
      return this;
    }

    public Builder setUrl(String url) {
      this.url = url;
      return this;
    }

    @Override
    public ShopText build() {
      return new ShopText(text, shop_id, shop_url, url, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ShopText extends ProtoAdapter<ShopText> {
    public ProtoAdapter_ShopText() {
      super(FieldEncoding.LENGTH_DELIMITED, ShopText.class);
    }

    @Override
    public int encodedSize(ShopText value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.text)
          + ProtoAdapter.INT64.encodedSizeWithTag(2, value.shop_id)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.shop_url)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.url)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ShopText value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.text);
      ProtoAdapter.INT64.encodeWithTag(writer, 2, value.shop_id);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.shop_url);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.url);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ShopText decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setText(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.setShopId(ProtoAdapter.INT64.decode(reader)); break;
          case 3: builder.setShopUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setUrl(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ShopText redact(ShopText value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
