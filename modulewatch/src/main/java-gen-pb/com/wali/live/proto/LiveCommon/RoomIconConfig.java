// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveCommon.proto
package com.wali.live.proto.LiveCommon;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class RoomIconConfig extends Message<RoomIconConfig, RoomIconConfig.Builder> {
  public static final ProtoAdapter<RoomIconConfig> ADAPTER = new ProtoAdapter_RoomIconConfig();

  private static final long serialVersionUID = 0L;

  public static final Boolean DEFAULT_NOMIC = false;

  public static final Boolean DEFAULT_NOPIC = false;

  public static final Boolean DEFAULT_NOVIDEO = false;

  public static final Boolean DEFAULT_NOSCREENPROJECTION = false;

  public static final Boolean DEFAULT_NOATMOSPHERE = false;

  public static final Boolean DEFAULT_NOMUSIC = false;

  public static final Boolean DEFAULT_NOEMOTICON = false;

  public static final Boolean DEFAULT_NOHONGBAO = false;

  public static final Boolean DEFAULT_NOCONSUMETASK = false;

  /**
   * 是否不显示连麦
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean noMic;

  /**
   * 是否不显示图片
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean noPic;

  /**
   * 是否不显示视频
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean noVideo;

  /**
   * 是否不显示投屏
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean noScreenProjection;

  /**
   * 是否不显示氛围
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean noAtmosphere;

  /**
   * 是否不显示音乐
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean noMusic;

  /**
   * 是否不显示动态表情
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean noEmoticon;

  /**
   * 是否不显示红包
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean noHongBao;

  /**
   * 是否不显示消费任务
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean noConsumeTask;

  public RoomIconConfig(Boolean noMic, Boolean noPic, Boolean noVideo, Boolean noScreenProjection,
      Boolean noAtmosphere, Boolean noMusic, Boolean noEmoticon, Boolean noHongBao,
      Boolean noConsumeTask) {
    this(noMic, noPic, noVideo, noScreenProjection, noAtmosphere, noMusic, noEmoticon, noHongBao, noConsumeTask, ByteString.EMPTY);
  }

  public RoomIconConfig(Boolean noMic, Boolean noPic, Boolean noVideo, Boolean noScreenProjection,
      Boolean noAtmosphere, Boolean noMusic, Boolean noEmoticon, Boolean noHongBao,
      Boolean noConsumeTask, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.noMic = noMic;
    this.noPic = noPic;
    this.noVideo = noVideo;
    this.noScreenProjection = noScreenProjection;
    this.noAtmosphere = noAtmosphere;
    this.noMusic = noMusic;
    this.noEmoticon = noEmoticon;
    this.noHongBao = noHongBao;
    this.noConsumeTask = noConsumeTask;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.noMic = noMic;
    builder.noPic = noPic;
    builder.noVideo = noVideo;
    builder.noScreenProjection = noScreenProjection;
    builder.noAtmosphere = noAtmosphere;
    builder.noMusic = noMusic;
    builder.noEmoticon = noEmoticon;
    builder.noHongBao = noHongBao;
    builder.noConsumeTask = noConsumeTask;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RoomIconConfig)) return false;
    RoomIconConfig o = (RoomIconConfig) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(noMic, o.noMic)
        && Internal.equals(noPic, o.noPic)
        && Internal.equals(noVideo, o.noVideo)
        && Internal.equals(noScreenProjection, o.noScreenProjection)
        && Internal.equals(noAtmosphere, o.noAtmosphere)
        && Internal.equals(noMusic, o.noMusic)
        && Internal.equals(noEmoticon, o.noEmoticon)
        && Internal.equals(noHongBao, o.noHongBao)
        && Internal.equals(noConsumeTask, o.noConsumeTask);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (noMic != null ? noMic.hashCode() : 0);
      result = result * 37 + (noPic != null ? noPic.hashCode() : 0);
      result = result * 37 + (noVideo != null ? noVideo.hashCode() : 0);
      result = result * 37 + (noScreenProjection != null ? noScreenProjection.hashCode() : 0);
      result = result * 37 + (noAtmosphere != null ? noAtmosphere.hashCode() : 0);
      result = result * 37 + (noMusic != null ? noMusic.hashCode() : 0);
      result = result * 37 + (noEmoticon != null ? noEmoticon.hashCode() : 0);
      result = result * 37 + (noHongBao != null ? noHongBao.hashCode() : 0);
      result = result * 37 + (noConsumeTask != null ? noConsumeTask.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (noMic != null) builder.append(", noMic=").append(noMic);
    if (noPic != null) builder.append(", noPic=").append(noPic);
    if (noVideo != null) builder.append(", noVideo=").append(noVideo);
    if (noScreenProjection != null) builder.append(", noScreenProjection=").append(noScreenProjection);
    if (noAtmosphere != null) builder.append(", noAtmosphere=").append(noAtmosphere);
    if (noMusic != null) builder.append(", noMusic=").append(noMusic);
    if (noEmoticon != null) builder.append(", noEmoticon=").append(noEmoticon);
    if (noHongBao != null) builder.append(", noHongBao=").append(noHongBao);
    if (noConsumeTask != null) builder.append(", noConsumeTask=").append(noConsumeTask);
    return builder.replace(0, 2, "RoomIconConfig{").append('}').toString();
  }

  public byte[] toByteArray() {
    return RoomIconConfig.ADAPTER.encode(this);
  }

  public static final RoomIconConfig parseFrom(byte[] data) throws IOException {
    RoomIconConfig c = null;
       c = RoomIconConfig.ADAPTER.decode(data);
    return c;
  }

  /**
   * 是否不显示连麦
   */
  public Boolean getNoMic() {
    if(noMic==null){
        return DEFAULT_NOMIC;
    }
    return noMic;
  }

  /**
   * 是否不显示图片
   */
  public Boolean getNoPic() {
    if(noPic==null){
        return DEFAULT_NOPIC;
    }
    return noPic;
  }

  /**
   * 是否不显示视频
   */
  public Boolean getNoVideo() {
    if(noVideo==null){
        return DEFAULT_NOVIDEO;
    }
    return noVideo;
  }

  /**
   * 是否不显示投屏
   */
  public Boolean getNoScreenProjection() {
    if(noScreenProjection==null){
        return DEFAULT_NOSCREENPROJECTION;
    }
    return noScreenProjection;
  }

  /**
   * 是否不显示氛围
   */
  public Boolean getNoAtmosphere() {
    if(noAtmosphere==null){
        return DEFAULT_NOATMOSPHERE;
    }
    return noAtmosphere;
  }

  /**
   * 是否不显示音乐
   */
  public Boolean getNoMusic() {
    if(noMusic==null){
        return DEFAULT_NOMUSIC;
    }
    return noMusic;
  }

  /**
   * 是否不显示动态表情
   */
  public Boolean getNoEmoticon() {
    if(noEmoticon==null){
        return DEFAULT_NOEMOTICON;
    }
    return noEmoticon;
  }

  /**
   * 是否不显示红包
   */
  public Boolean getNoHongBao() {
    if(noHongBao==null){
        return DEFAULT_NOHONGBAO;
    }
    return noHongBao;
  }

  /**
   * 是否不显示消费任务
   */
  public Boolean getNoConsumeTask() {
    if(noConsumeTask==null){
        return DEFAULT_NOCONSUMETASK;
    }
    return noConsumeTask;
  }

  /**
   * 是否不显示连麦
   */
  public boolean hasNoMic() {
    return noMic!=null;
  }

  /**
   * 是否不显示图片
   */
  public boolean hasNoPic() {
    return noPic!=null;
  }

  /**
   * 是否不显示视频
   */
  public boolean hasNoVideo() {
    return noVideo!=null;
  }

  /**
   * 是否不显示投屏
   */
  public boolean hasNoScreenProjection() {
    return noScreenProjection!=null;
  }

  /**
   * 是否不显示氛围
   */
  public boolean hasNoAtmosphere() {
    return noAtmosphere!=null;
  }

  /**
   * 是否不显示音乐
   */
  public boolean hasNoMusic() {
    return noMusic!=null;
  }

  /**
   * 是否不显示动态表情
   */
  public boolean hasNoEmoticon() {
    return noEmoticon!=null;
  }

  /**
   * 是否不显示红包
   */
  public boolean hasNoHongBao() {
    return noHongBao!=null;
  }

  /**
   * 是否不显示消费任务
   */
  public boolean hasNoConsumeTask() {
    return noConsumeTask!=null;
  }

  public static final class Builder extends Message.Builder<RoomIconConfig, Builder> {
    public Boolean noMic;

    public Boolean noPic;

    public Boolean noVideo;

    public Boolean noScreenProjection;

    public Boolean noAtmosphere;

    public Boolean noMusic;

    public Boolean noEmoticon;

    public Boolean noHongBao;

    public Boolean noConsumeTask;

    public Builder() {
    }

    /**
     * 是否不显示连麦
     */
    public Builder setNoMic(Boolean noMic) {
      this.noMic = noMic;
      return this;
    }

    /**
     * 是否不显示图片
     */
    public Builder setNoPic(Boolean noPic) {
      this.noPic = noPic;
      return this;
    }

    /**
     * 是否不显示视频
     */
    public Builder setNoVideo(Boolean noVideo) {
      this.noVideo = noVideo;
      return this;
    }

    /**
     * 是否不显示投屏
     */
    public Builder setNoScreenProjection(Boolean noScreenProjection) {
      this.noScreenProjection = noScreenProjection;
      return this;
    }

    /**
     * 是否不显示氛围
     */
    public Builder setNoAtmosphere(Boolean noAtmosphere) {
      this.noAtmosphere = noAtmosphere;
      return this;
    }

    /**
     * 是否不显示音乐
     */
    public Builder setNoMusic(Boolean noMusic) {
      this.noMusic = noMusic;
      return this;
    }

    /**
     * 是否不显示动态表情
     */
    public Builder setNoEmoticon(Boolean noEmoticon) {
      this.noEmoticon = noEmoticon;
      return this;
    }

    /**
     * 是否不显示红包
     */
    public Builder setNoHongBao(Boolean noHongBao) {
      this.noHongBao = noHongBao;
      return this;
    }

    /**
     * 是否不显示消费任务
     */
    public Builder setNoConsumeTask(Boolean noConsumeTask) {
      this.noConsumeTask = noConsumeTask;
      return this;
    }

    @Override
    public RoomIconConfig build() {
      return new RoomIconConfig(noMic, noPic, noVideo, noScreenProjection, noAtmosphere, noMusic, noEmoticon, noHongBao, noConsumeTask, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_RoomIconConfig extends ProtoAdapter<RoomIconConfig> {
    public ProtoAdapter_RoomIconConfig() {
      super(FieldEncoding.LENGTH_DELIMITED, RoomIconConfig.class);
    }

    @Override
    public int encodedSize(RoomIconConfig value) {
      return ProtoAdapter.BOOL.encodedSizeWithTag(1, value.noMic)
          + ProtoAdapter.BOOL.encodedSizeWithTag(2, value.noPic)
          + ProtoAdapter.BOOL.encodedSizeWithTag(3, value.noVideo)
          + ProtoAdapter.BOOL.encodedSizeWithTag(4, value.noScreenProjection)
          + ProtoAdapter.BOOL.encodedSizeWithTag(5, value.noAtmosphere)
          + ProtoAdapter.BOOL.encodedSizeWithTag(6, value.noMusic)
          + ProtoAdapter.BOOL.encodedSizeWithTag(7, value.noEmoticon)
          + ProtoAdapter.BOOL.encodedSizeWithTag(8, value.noHongBao)
          + ProtoAdapter.BOOL.encodedSizeWithTag(9, value.noConsumeTask)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, RoomIconConfig value) throws IOException {
      ProtoAdapter.BOOL.encodeWithTag(writer, 1, value.noMic);
      ProtoAdapter.BOOL.encodeWithTag(writer, 2, value.noPic);
      ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.noVideo);
      ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.noScreenProjection);
      ProtoAdapter.BOOL.encodeWithTag(writer, 5, value.noAtmosphere);
      ProtoAdapter.BOOL.encodeWithTag(writer, 6, value.noMusic);
      ProtoAdapter.BOOL.encodeWithTag(writer, 7, value.noEmoticon);
      ProtoAdapter.BOOL.encodeWithTag(writer, 8, value.noHongBao);
      ProtoAdapter.BOOL.encodeWithTag(writer, 9, value.noConsumeTask);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public RoomIconConfig decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setNoMic(ProtoAdapter.BOOL.decode(reader)); break;
          case 2: builder.setNoPic(ProtoAdapter.BOOL.decode(reader)); break;
          case 3: builder.setNoVideo(ProtoAdapter.BOOL.decode(reader)); break;
          case 4: builder.setNoScreenProjection(ProtoAdapter.BOOL.decode(reader)); break;
          case 5: builder.setNoAtmosphere(ProtoAdapter.BOOL.decode(reader)); break;
          case 6: builder.setNoMusic(ProtoAdapter.BOOL.decode(reader)); break;
          case 7: builder.setNoEmoticon(ProtoAdapter.BOOL.decode(reader)); break;
          case 8: builder.setNoHongBao(ProtoAdapter.BOOL.decode(reader)); break;
          case 9: builder.setNoConsumeTask(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public RoomIconConfig redact(RoomIconConfig value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
