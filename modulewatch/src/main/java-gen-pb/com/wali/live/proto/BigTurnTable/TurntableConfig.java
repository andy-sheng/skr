// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: BigTurnTable.proto
package com.wali.live.proto.BigTurnTable;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class TurntableConfig extends Message<TurntableConfig, TurntableConfig.Builder> {
  public static final ProtoAdapter<TurntableConfig> ADAPTER = new ProtoAdapter_TurntableConfig();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_STATUS = 0;

  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.BigTurnTable.TurntablePreConfig#ADAPTER"
  )
  public final TurntablePreConfig preConfig;

  /**
   * 0:未开启, 1:已开启
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  public TurntableConfig(TurntablePreConfig preConfig, Integer status) {
    this(preConfig, status, ByteString.EMPTY);
  }

  public TurntableConfig(TurntablePreConfig preConfig, Integer status, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.preConfig = preConfig;
    this.status = status;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.preConfig = preConfig;
    builder.status = status;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TurntableConfig)) return false;
    TurntableConfig o = (TurntableConfig) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(preConfig, o.preConfig)
        && Internal.equals(status, o.status);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (preConfig != null ? preConfig.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (preConfig != null) builder.append(", preConfig=").append(preConfig);
    if (status != null) builder.append(", status=").append(status);
    return builder.replace(0, 2, "TurntableConfig{").append('}').toString();
  }

  public byte[] toByteArray() {
    return TurntableConfig.ADAPTER.encode(this);
  }

  public static final TurntableConfig parseFrom(byte[] data) throws IOException {
    TurntableConfig c = null;
       c = TurntableConfig.ADAPTER.decode(data);
    return c;
  }

  public TurntablePreConfig getPreConfig() {
    if(preConfig==null){
        return new TurntablePreConfig.Builder().build();
    }
    return preConfig;
  }

  /**
   * 0:未开启, 1:已开启
   */
  public Integer getStatus() {
    if(status==null){
        return DEFAULT_STATUS;
    }
    return status;
  }

  public boolean hasPreConfig() {
    return preConfig!=null;
  }

  /**
   * 0:未开启, 1:已开启
   */
  public boolean hasStatus() {
    return status!=null;
  }

  public static final class Builder extends Message.Builder<TurntableConfig, Builder> {
    public TurntablePreConfig preConfig;

    public Integer status;

    public Builder() {
    }

    public Builder setPreConfig(TurntablePreConfig preConfig) {
      this.preConfig = preConfig;
      return this;
    }

    /**
     * 0:未开启, 1:已开启
     */
    public Builder setStatus(Integer status) {
      this.status = status;
      return this;
    }

    @Override
    public TurntableConfig build() {
      return new TurntableConfig(preConfig, status, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_TurntableConfig extends ProtoAdapter<TurntableConfig> {
    public ProtoAdapter_TurntableConfig() {
      super(FieldEncoding.LENGTH_DELIMITED, TurntableConfig.class);
    }

    @Override
    public int encodedSize(TurntableConfig value) {
      return TurntablePreConfig.ADAPTER.encodedSizeWithTag(1, value.preConfig)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.status)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, TurntableConfig value) throws IOException {
      TurntablePreConfig.ADAPTER.encodeWithTag(writer, 1, value.preConfig);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.status);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public TurntableConfig decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setPreConfig(TurntablePreConfig.ADAPTER.decode(reader)); break;
          case 2: builder.setStatus(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public TurntableConfig redact(TurntableConfig value) {
      Builder builder = value.newBuilder();
      if (builder.preConfig != null) builder.preConfig = TurntablePreConfig.ADAPTER.redact(builder.preConfig);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
