// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import com.wali.live.proto.LiveCommon.NewWidgetItem;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class NewWidgetMessageItem extends Message<NewWidgetMessageItem, NewWidgetMessageItem.Builder> {
  public static final ProtoAdapter<NewWidgetMessageItem> ADAPTER = new ProtoAdapter_NewWidgetMessageItem();

  private static final long serialVersionUID = 0L;

  public static final Boolean DEFAULT_ISDELETE = false;

  public static final Integer DEFAULT_SHOWTYPE = 0;

  /**
   * 新版运营位push内容
   */
  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.LiveCommon.NewWidgetItem#ADAPTER",
      label = WireField.Label.REQUIRED
  )
  public final NewWidgetItem newWidgetItem;

  /**
   * 是否为不显示该运营位
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isDelete;

  /**
   * 展示的类型 0：都展示，1 观众展示，2 主播展示
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer showType;

  public NewWidgetMessageItem(NewWidgetItem newWidgetItem, Boolean isDelete, Integer showType) {
    this(newWidgetItem, isDelete, showType, ByteString.EMPTY);
  }

  public NewWidgetMessageItem(NewWidgetItem newWidgetItem, Boolean isDelete, Integer showType,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.newWidgetItem = newWidgetItem;
    this.isDelete = isDelete;
    this.showType = showType;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.newWidgetItem = newWidgetItem;
    builder.isDelete = isDelete;
    builder.showType = showType;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NewWidgetMessageItem)) return false;
    NewWidgetMessageItem o = (NewWidgetMessageItem) other;
    return unknownFields().equals(o.unknownFields())
        && newWidgetItem.equals(o.newWidgetItem)
        && Internal.equals(isDelete, o.isDelete)
        && Internal.equals(showType, o.showType);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + newWidgetItem.hashCode();
      result = result * 37 + (isDelete != null ? isDelete.hashCode() : 0);
      result = result * 37 + (showType != null ? showType.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", newWidgetItem=").append(newWidgetItem);
    if (isDelete != null) builder.append(", isDelete=").append(isDelete);
    if (showType != null) builder.append(", showType=").append(showType);
    return builder.replace(0, 2, "NewWidgetMessageItem{").append('}').toString();
  }

  public byte[] toByteArray() {
    return NewWidgetMessageItem.ADAPTER.encode(this);
  }

  public static final NewWidgetMessageItem parseFrom(byte[] data) throws IOException {
    NewWidgetMessageItem c = null;
       c = NewWidgetMessageItem.ADAPTER.decode(data);
    return c;
  }

  /**
   * 新版运营位push内容
   */
  public NewWidgetItem getNewWidgetItem() {
    if(newWidgetItem==null){
        return new NewWidgetItem.Builder().build();
    }
    return newWidgetItem;
  }

  /**
   * 是否为不显示该运营位
   */
  public Boolean getIsDelete() {
    if(isDelete==null){
        return DEFAULT_ISDELETE;
    }
    return isDelete;
  }

  /**
   * 展示的类型 0：都展示，1 观众展示，2 主播展示
   */
  public Integer getShowType() {
    if(showType==null){
        return DEFAULT_SHOWTYPE;
    }
    return showType;
  }

  /**
   * 新版运营位push内容
   */
  public boolean hasNewWidgetItem() {
    return newWidgetItem!=null;
  }

  /**
   * 是否为不显示该运营位
   */
  public boolean hasIsDelete() {
    return isDelete!=null;
  }

  /**
   * 展示的类型 0：都展示，1 观众展示，2 主播展示
   */
  public boolean hasShowType() {
    return showType!=null;
  }

  public static final class Builder extends Message.Builder<NewWidgetMessageItem, Builder> {
    public NewWidgetItem newWidgetItem;

    public Boolean isDelete;

    public Integer showType;

    public Builder() {
    }

    /**
     * 新版运营位push内容
     */
    public Builder setNewWidgetItem(NewWidgetItem newWidgetItem) {
      this.newWidgetItem = newWidgetItem;
      return this;
    }

    /**
     * 是否为不显示该运营位
     */
    public Builder setIsDelete(Boolean isDelete) {
      this.isDelete = isDelete;
      return this;
    }

    /**
     * 展示的类型 0：都展示，1 观众展示，2 主播展示
     */
    public Builder setShowType(Integer showType) {
      this.showType = showType;
      return this;
    }

    @Override
    public NewWidgetMessageItem build() {
      return new NewWidgetMessageItem(newWidgetItem, isDelete, showType, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_NewWidgetMessageItem extends ProtoAdapter<NewWidgetMessageItem> {
    public ProtoAdapter_NewWidgetMessageItem() {
      super(FieldEncoding.LENGTH_DELIMITED, NewWidgetMessageItem.class);
    }

    @Override
    public int encodedSize(NewWidgetMessageItem value) {
      return NewWidgetItem.ADAPTER.encodedSizeWithTag(1, value.newWidgetItem)
          + ProtoAdapter.BOOL.encodedSizeWithTag(2, value.isDelete)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.showType)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, NewWidgetMessageItem value) throws IOException {
      NewWidgetItem.ADAPTER.encodeWithTag(writer, 1, value.newWidgetItem);
      ProtoAdapter.BOOL.encodeWithTag(writer, 2, value.isDelete);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.showType);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public NewWidgetMessageItem decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setNewWidgetItem(NewWidgetItem.ADAPTER.decode(reader)); break;
          case 2: builder.setIsDelete(ProtoAdapter.BOOL.decode(reader)); break;
          case 3: builder.setShowType(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public NewWidgetMessageItem redact(NewWidgetMessageItem value) {
      Builder builder = value.newBuilder();
      builder.newWidgetItem = NewWidgetItem.ADAPTER.redact(builder.newWidgetItem);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
