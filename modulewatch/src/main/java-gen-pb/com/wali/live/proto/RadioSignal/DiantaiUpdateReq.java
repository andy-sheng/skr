// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: RadioSignal.proto
package com.wali.live.proto.RadioSignal;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * cmd: zhibo.diantai.update  更新当前用户的状态
 */
public final class DiantaiUpdateReq extends Message<DiantaiUpdateReq, DiantaiUpdateReq.Builder> {
  public static final ProtoAdapter<DiantaiUpdateReq> ADAPTER = new ProtoAdapter_DiantaiUpdateReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_FROM_ZUID = 0L;

  public static final Integer DEFAULT_DIANTAI_ID = 0;

  public static final String DEFAULT_ROOM_ID = "";

  public static final Integer DEFAULT_MUTE_STATUS = 0;

  public static final Integer DEFAULT_SPEAK_STATUS = 0;

  /**
   * 发起方用户id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long from_zuid;

  /**
   * 电台id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer diantai_id;

  /**
   * 直播房间id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String room_id;

  /**
   * 用户自己静音状态：0:没有静音 1:静音
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer mute_status;

  /**
   * 用户发言状态： 0:没有发言 1:发言中
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer speak_status;

  public DiantaiUpdateReq(Long from_zuid, Integer diantai_id, String room_id, Integer mute_status,
      Integer speak_status) {
    this(from_zuid, diantai_id, room_id, mute_status, speak_status, ByteString.EMPTY);
  }

  public DiantaiUpdateReq(Long from_zuid, Integer diantai_id, String room_id, Integer mute_status,
      Integer speak_status, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.from_zuid = from_zuid;
    this.diantai_id = diantai_id;
    this.room_id = room_id;
    this.mute_status = mute_status;
    this.speak_status = speak_status;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.from_zuid = from_zuid;
    builder.diantai_id = diantai_id;
    builder.room_id = room_id;
    builder.mute_status = mute_status;
    builder.speak_status = speak_status;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof DiantaiUpdateReq)) return false;
    DiantaiUpdateReq o = (DiantaiUpdateReq) other;
    return unknownFields().equals(o.unknownFields())
        && from_zuid.equals(o.from_zuid)
        && Internal.equals(diantai_id, o.diantai_id)
        && Internal.equals(room_id, o.room_id)
        && Internal.equals(mute_status, o.mute_status)
        && Internal.equals(speak_status, o.speak_status);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + from_zuid.hashCode();
      result = result * 37 + (diantai_id != null ? diantai_id.hashCode() : 0);
      result = result * 37 + (room_id != null ? room_id.hashCode() : 0);
      result = result * 37 + (mute_status != null ? mute_status.hashCode() : 0);
      result = result * 37 + (speak_status != null ? speak_status.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", from_zuid=").append(from_zuid);
    if (diantai_id != null) builder.append(", diantai_id=").append(diantai_id);
    if (room_id != null) builder.append(", room_id=").append(room_id);
    if (mute_status != null) builder.append(", mute_status=").append(mute_status);
    if (speak_status != null) builder.append(", speak_status=").append(speak_status);
    return builder.replace(0, 2, "DiantaiUpdateReq{").append('}').toString();
  }

  public byte[] toByteArray() {
    return DiantaiUpdateReq.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<DiantaiUpdateReq, Builder> {
    public Long from_zuid;

    public Integer diantai_id;

    public String room_id;

    public Integer mute_status;

    public Integer speak_status;

    public Builder() {
    }

    /**
     * 发起方用户id
     */
    public Builder setFromZuid(Long from_zuid) {
      this.from_zuid = from_zuid;
      return this;
    }

    /**
     * 电台id
     */
    public Builder setDiantaiId(Integer diantai_id) {
      this.diantai_id = diantai_id;
      return this;
    }

    /**
     * 直播房间id
     */
    public Builder setRoomId(String room_id) {
      this.room_id = room_id;
      return this;
    }

    /**
     * 用户自己静音状态：0:没有静音 1:静音
     */
    public Builder setMuteStatus(Integer mute_status) {
      this.mute_status = mute_status;
      return this;
    }

    /**
     * 用户发言状态： 0:没有发言 1:发言中
     */
    public Builder setSpeakStatus(Integer speak_status) {
      this.speak_status = speak_status;
      return this;
    }

    @Override
    public DiantaiUpdateReq build() {
      if (from_zuid == null) {
        throw Internal.missingRequiredFields(from_zuid, "from_zuid");
      }
      return new DiantaiUpdateReq(from_zuid, diantai_id, room_id, mute_status, speak_status, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_DiantaiUpdateReq extends ProtoAdapter<DiantaiUpdateReq> {
    public ProtoAdapter_DiantaiUpdateReq() {
      super(FieldEncoding.LENGTH_DELIMITED, DiantaiUpdateReq.class);
    }

    @Override
    public int encodedSize(DiantaiUpdateReq value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.from_zuid)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.diantai_id)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.room_id)
          + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.mute_status)
          + ProtoAdapter.UINT32.encodedSizeWithTag(5, value.speak_status)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, DiantaiUpdateReq value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.from_zuid);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.diantai_id);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.room_id);
      ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.mute_status);
      ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.speak_status);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public DiantaiUpdateReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setFromZuid(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.setDiantaiId(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.setRoomId(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setMuteStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.setSpeakStatus(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public DiantaiUpdateReq redact(DiantaiUpdateReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
