// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMall.proto
package com.wali.live.proto.LiveMall;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 命令字：zhibo.shopping.get_sales_info
 */
public final class OrderInfo extends Message<OrderInfo, OrderInfo.Builder> {
  public static final ProtoAdapter<OrderInfo> ADAPTER = new ProtoAdapter_OrderInfo();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_UID = 0L;

  public static final Long DEFAULT_HOST_ID = 0L;

  public static final Integer DEFAULT_SHOP_TYPE = 0;

  public static final Long DEFAULT_ORDER_ID = 0L;

  public static final Double DEFAULT_TOTAL_PRICE = 0.0d;

  public static final Integer DEFAULT_ORDER_STATUS = 0;

  public static final Double DEFAULT_INCOME_VALUE = 0.0d;

  public static final Long DEFAULT_CREATE_TIME = 0L;

  public static final Long DEFAULT_UPDATE_TIME = 0L;

  public static final String DEFAULT_ROOM_ID = "";

  public static final String DEFAULT_INCOME_CONTENT = "";

  /**
   * 用户
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64",
      label = WireField.Label.REQUIRED
  )
  public final Long uid;

  /**
   * 主播
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long host_id;

  /**
   * 0 京东
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer shop_type;

  /**
   * 订单id
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long order_id;

  /**
   * 购吴信息
   */
  @WireField(
      tag = 5,
      adapter = "com.wali.live.proto.LiveMall.GoodsInfo#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<GoodsInfo> goods_info;

  /**
   * 总价
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double total_price;

  /**
   * 1 下单, 2 支付， 3 妥投, 4 退货, 5部分退货, 6 结算
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer order_status;

  /**
   * 佣金
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double income_value;

  /**
   * 订单日期
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long create_time;

  /**
   * 更新事件
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long update_time;

  /**
   * 房间
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String room_id;

  /**
   * 佣金内容？？
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String income_content;

  public OrderInfo(Long uid, Long host_id, Integer shop_type, Long order_id,
      List<GoodsInfo> goods_info, Double total_price, Integer order_status, Double income_value,
      Long create_time, Long update_time, String room_id, String income_content) {
    this(uid, host_id, shop_type, order_id, goods_info, total_price, order_status, income_value, create_time, update_time, room_id, income_content, ByteString.EMPTY);
  }

  public OrderInfo(Long uid, Long host_id, Integer shop_type, Long order_id,
      List<GoodsInfo> goods_info, Double total_price, Integer order_status, Double income_value,
      Long create_time, Long update_time, String room_id, String income_content,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.uid = uid;
    this.host_id = host_id;
    this.shop_type = shop_type;
    this.order_id = order_id;
    this.goods_info = Internal.immutableCopyOf("goods_info", goods_info);
    this.total_price = total_price;
    this.order_status = order_status;
    this.income_value = income_value;
    this.create_time = create_time;
    this.update_time = update_time;
    this.room_id = room_id;
    this.income_content = income_content;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.uid = uid;
    builder.host_id = host_id;
    builder.shop_type = shop_type;
    builder.order_id = order_id;
    builder.goods_info = Internal.copyOf("goods_info", goods_info);
    builder.total_price = total_price;
    builder.order_status = order_status;
    builder.income_value = income_value;
    builder.create_time = create_time;
    builder.update_time = update_time;
    builder.room_id = room_id;
    builder.income_content = income_content;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderInfo)) return false;
    OrderInfo o = (OrderInfo) other;
    return unknownFields().equals(o.unknownFields())
        && uid.equals(o.uid)
        && Internal.equals(host_id, o.host_id)
        && Internal.equals(shop_type, o.shop_type)
        && Internal.equals(order_id, o.order_id)
        && goods_info.equals(o.goods_info)
        && Internal.equals(total_price, o.total_price)
        && Internal.equals(order_status, o.order_status)
        && Internal.equals(income_value, o.income_value)
        && Internal.equals(create_time, o.create_time)
        && Internal.equals(update_time, o.update_time)
        && Internal.equals(room_id, o.room_id)
        && Internal.equals(income_content, o.income_content);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + uid.hashCode();
      result = result * 37 + (host_id != null ? host_id.hashCode() : 0);
      result = result * 37 + (shop_type != null ? shop_type.hashCode() : 0);
      result = result * 37 + (order_id != null ? order_id.hashCode() : 0);
      result = result * 37 + goods_info.hashCode();
      result = result * 37 + (total_price != null ? total_price.hashCode() : 0);
      result = result * 37 + (order_status != null ? order_status.hashCode() : 0);
      result = result * 37 + (income_value != null ? income_value.hashCode() : 0);
      result = result * 37 + (create_time != null ? create_time.hashCode() : 0);
      result = result * 37 + (update_time != null ? update_time.hashCode() : 0);
      result = result * 37 + (room_id != null ? room_id.hashCode() : 0);
      result = result * 37 + (income_content != null ? income_content.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", uid=").append(uid);
    if (host_id != null) builder.append(", host_id=").append(host_id);
    if (shop_type != null) builder.append(", shop_type=").append(shop_type);
    if (order_id != null) builder.append(", order_id=").append(order_id);
    if (!goods_info.isEmpty()) builder.append(", goods_info=").append(goods_info);
    if (total_price != null) builder.append(", total_price=").append(total_price);
    if (order_status != null) builder.append(", order_status=").append(order_status);
    if (income_value != null) builder.append(", income_value=").append(income_value);
    if (create_time != null) builder.append(", create_time=").append(create_time);
    if (update_time != null) builder.append(", update_time=").append(update_time);
    if (room_id != null) builder.append(", room_id=").append(room_id);
    if (income_content != null) builder.append(", income_content=").append(income_content);
    return builder.replace(0, 2, "OrderInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return OrderInfo.ADAPTER.encode(this);
  }

  public static final OrderInfo parseFrom(byte[] data) throws IOException {
    OrderInfo c = null;
       c = OrderInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 用户
   */
  public Long getUid() {
    if(uid==null){
        return DEFAULT_UID;
    }
    return uid;
  }

  /**
   * 主播
   */
  public Long getHostId() {
    if(host_id==null){
        return DEFAULT_HOST_ID;
    }
    return host_id;
  }

  /**
   * 0 京东
   */
  public Integer getShopType() {
    if(shop_type==null){
        return DEFAULT_SHOP_TYPE;
    }
    return shop_type;
  }

  /**
   * 订单id
   */
  public Long getOrderId() {
    if(order_id==null){
        return DEFAULT_ORDER_ID;
    }
    return order_id;
  }

  /**
   * 购吴信息
   */
  public List<GoodsInfo> getGoodsInfoList() {
    if(goods_info==null){
        return new java.util.ArrayList<GoodsInfo>();
    }
    return goods_info;
  }

  /**
   * 总价
   */
  public Double getTotalPrice() {
    if(total_price==null){
        return DEFAULT_TOTAL_PRICE;
    }
    return total_price;
  }

  /**
   * 1 下单, 2 支付， 3 妥投, 4 退货, 5部分退货, 6 结算
   */
  public Integer getOrderStatus() {
    if(order_status==null){
        return DEFAULT_ORDER_STATUS;
    }
    return order_status;
  }

  /**
   * 佣金
   */
  public Double getIncomeValue() {
    if(income_value==null){
        return DEFAULT_INCOME_VALUE;
    }
    return income_value;
  }

  /**
   * 订单日期
   */
  public Long getCreateTime() {
    if(create_time==null){
        return DEFAULT_CREATE_TIME;
    }
    return create_time;
  }

  /**
   * 更新事件
   */
  public Long getUpdateTime() {
    if(update_time==null){
        return DEFAULT_UPDATE_TIME;
    }
    return update_time;
  }

  /**
   * 房间
   */
  public String getRoomId() {
    if(room_id==null){
        return DEFAULT_ROOM_ID;
    }
    return room_id;
  }

  /**
   * 佣金内容？？
   */
  public String getIncomeContent() {
    if(income_content==null){
        return DEFAULT_INCOME_CONTENT;
    }
    return income_content;
  }

  /**
   * 用户
   */
  public boolean hasUid() {
    return uid!=null;
  }

  /**
   * 主播
   */
  public boolean hasHostId() {
    return host_id!=null;
  }

  /**
   * 0 京东
   */
  public boolean hasShopType() {
    return shop_type!=null;
  }

  /**
   * 订单id
   */
  public boolean hasOrderId() {
    return order_id!=null;
  }

  /**
   * 购吴信息
   */
  public boolean hasGoodsInfoList() {
    return goods_info!=null;
  }

  /**
   * 总价
   */
  public boolean hasTotalPrice() {
    return total_price!=null;
  }

  /**
   * 1 下单, 2 支付， 3 妥投, 4 退货, 5部分退货, 6 结算
   */
  public boolean hasOrderStatus() {
    return order_status!=null;
  }

  /**
   * 佣金
   */
  public boolean hasIncomeValue() {
    return income_value!=null;
  }

  /**
   * 订单日期
   */
  public boolean hasCreateTime() {
    return create_time!=null;
  }

  /**
   * 更新事件
   */
  public boolean hasUpdateTime() {
    return update_time!=null;
  }

  /**
   * 房间
   */
  public boolean hasRoomId() {
    return room_id!=null;
  }

  /**
   * 佣金内容？？
   */
  public boolean hasIncomeContent() {
    return income_content!=null;
  }

  public static final class Builder extends Message.Builder<OrderInfo, Builder> {
    public Long uid;

    public Long host_id;

    public Integer shop_type;

    public Long order_id;

    public List<GoodsInfo> goods_info;

    public Double total_price;

    public Integer order_status;

    public Double income_value;

    public Long create_time;

    public Long update_time;

    public String room_id;

    public String income_content;

    public Builder() {
      goods_info = Internal.newMutableList();
    }

    /**
     * 用户
     */
    public Builder setUid(Long uid) {
      this.uid = uid;
      return this;
    }

    /**
     * 主播
     */
    public Builder setHostId(Long host_id) {
      this.host_id = host_id;
      return this;
    }

    /**
     * 0 京东
     */
    public Builder setShopType(Integer shop_type) {
      this.shop_type = shop_type;
      return this;
    }

    /**
     * 订单id
     */
    public Builder setOrderId(Long order_id) {
      this.order_id = order_id;
      return this;
    }

    /**
     * 购吴信息
     */
    public Builder addAllGoodsInfo(List<GoodsInfo> goods_info) {
      Internal.checkElementsNotNull(goods_info);
      this.goods_info = goods_info;
      return this;
    }

    /**
     * 总价
     */
    public Builder setTotalPrice(Double total_price) {
      this.total_price = total_price;
      return this;
    }

    /**
     * 1 下单, 2 支付， 3 妥投, 4 退货, 5部分退货, 6 结算
     */
    public Builder setOrderStatus(Integer order_status) {
      this.order_status = order_status;
      return this;
    }

    /**
     * 佣金
     */
    public Builder setIncomeValue(Double income_value) {
      this.income_value = income_value;
      return this;
    }

    /**
     * 订单日期
     */
    public Builder setCreateTime(Long create_time) {
      this.create_time = create_time;
      return this;
    }

    /**
     * 更新事件
     */
    public Builder setUpdateTime(Long update_time) {
      this.update_time = update_time;
      return this;
    }

    /**
     * 房间
     */
    public Builder setRoomId(String room_id) {
      this.room_id = room_id;
      return this;
    }

    /**
     * 佣金内容？？
     */
    public Builder setIncomeContent(String income_content) {
      this.income_content = income_content;
      return this;
    }

    @Override
    public OrderInfo build() {
      return new OrderInfo(uid, host_id, shop_type, order_id, goods_info, total_price, order_status, income_value, create_time, update_time, room_id, income_content, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderInfo extends ProtoAdapter<OrderInfo> {
    public ProtoAdapter_OrderInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderInfo.class);
    }

    @Override
    public int encodedSize(OrderInfo value) {
      return ProtoAdapter.INT64.encodedSizeWithTag(1, value.uid)
          + ProtoAdapter.INT64.encodedSizeWithTag(2, value.host_id)
          + ProtoAdapter.INT32.encodedSizeWithTag(3, value.shop_type)
          + ProtoAdapter.INT64.encodedSizeWithTag(4, value.order_id)
          + GoodsInfo.ADAPTER.asRepeated().encodedSizeWithTag(5, value.goods_info)
          + ProtoAdapter.DOUBLE.encodedSizeWithTag(6, value.total_price)
          + ProtoAdapter.INT32.encodedSizeWithTag(7, value.order_status)
          + ProtoAdapter.DOUBLE.encodedSizeWithTag(8, value.income_value)
          + ProtoAdapter.INT64.encodedSizeWithTag(9, value.create_time)
          + ProtoAdapter.INT64.encodedSizeWithTag(10, value.update_time)
          + ProtoAdapter.STRING.encodedSizeWithTag(11, value.room_id)
          + ProtoAdapter.STRING.encodedSizeWithTag(12, value.income_content)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderInfo value) throws IOException {
      ProtoAdapter.INT64.encodeWithTag(writer, 1, value.uid);
      ProtoAdapter.INT64.encodeWithTag(writer, 2, value.host_id);
      ProtoAdapter.INT32.encodeWithTag(writer, 3, value.shop_type);
      ProtoAdapter.INT64.encodeWithTag(writer, 4, value.order_id);
      GoodsInfo.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.goods_info);
      ProtoAdapter.DOUBLE.encodeWithTag(writer, 6, value.total_price);
      ProtoAdapter.INT32.encodeWithTag(writer, 7, value.order_status);
      ProtoAdapter.DOUBLE.encodeWithTag(writer, 8, value.income_value);
      ProtoAdapter.INT64.encodeWithTag(writer, 9, value.create_time);
      ProtoAdapter.INT64.encodeWithTag(writer, 10, value.update_time);
      ProtoAdapter.STRING.encodeWithTag(writer, 11, value.room_id);
      ProtoAdapter.STRING.encodeWithTag(writer, 12, value.income_content);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUid(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.setHostId(ProtoAdapter.INT64.decode(reader)); break;
          case 3: builder.setShopType(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.setOrderId(ProtoAdapter.INT64.decode(reader)); break;
          case 5: builder.goods_info.add(GoodsInfo.ADAPTER.decode(reader)); break;
          case 6: builder.setTotalPrice(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 7: builder.setOrderStatus(ProtoAdapter.INT32.decode(reader)); break;
          case 8: builder.setIncomeValue(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 9: builder.setCreateTime(ProtoAdapter.INT64.decode(reader)); break;
          case 10: builder.setUpdateTime(ProtoAdapter.INT64.decode(reader)); break;
          case 11: builder.setRoomId(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.setIncomeContent(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderInfo redact(OrderInfo value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.goods_info, GoodsInfo.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
