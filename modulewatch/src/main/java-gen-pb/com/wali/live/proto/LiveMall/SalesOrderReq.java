// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMall.proto
package com.wali.live.proto.LiveMall;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 命令字：zhibo.shopping.get_sales_orders
 */
public final class SalesOrderReq extends Message<SalesOrderReq, SalesOrderReq.Builder> {
  public static final ProtoAdapter<SalesOrderReq> ADAPTER = new ProtoAdapter_SalesOrderReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_HOST_ID = 0L;

  public static final Long DEFAULT_TIMESTAMP = 0L;

  public static final Integer DEFAULT_NUMBER = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64",
      label = WireField.Label.REQUIRED
  )
  public final Long host_id;

  /**
   * 1 下单, 2 支付成功, 3 妥投, 4 全部退货, 5 整单退货, 6 结算
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32",
      label = WireField.Label.REPEATED
  )
  public final List<Integer> order_status_list;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long timestamp;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer number;

  public SalesOrderReq(Long host_id, List<Integer> order_status_list, Long timestamp,
      Integer number) {
    this(host_id, order_status_list, timestamp, number, ByteString.EMPTY);
  }

  public SalesOrderReq(Long host_id, List<Integer> order_status_list, Long timestamp,
      Integer number, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.host_id = host_id;
    this.order_status_list = Internal.immutableCopyOf("order_status_list", order_status_list);
    this.timestamp = timestamp;
    this.number = number;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.host_id = host_id;
    builder.order_status_list = Internal.copyOf("order_status_list", order_status_list);
    builder.timestamp = timestamp;
    builder.number = number;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SalesOrderReq)) return false;
    SalesOrderReq o = (SalesOrderReq) other;
    return unknownFields().equals(o.unknownFields())
        && host_id.equals(o.host_id)
        && order_status_list.equals(o.order_status_list)
        && Internal.equals(timestamp, o.timestamp)
        && Internal.equals(number, o.number);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + host_id.hashCode();
      result = result * 37 + order_status_list.hashCode();
      result = result * 37 + (timestamp != null ? timestamp.hashCode() : 0);
      result = result * 37 + (number != null ? number.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", host_id=").append(host_id);
    if (!order_status_list.isEmpty()) builder.append(", order_status_list=").append(order_status_list);
    if (timestamp != null) builder.append(", timestamp=").append(timestamp);
    if (number != null) builder.append(", number=").append(number);
    return builder.replace(0, 2, "SalesOrderReq{").append('}').toString();
  }

  public byte[] toByteArray() {
    return SalesOrderReq.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<SalesOrderReq, Builder> {
    public Long host_id;

    public List<Integer> order_status_list;

    public Long timestamp;

    public Integer number;

    public Builder() {
      order_status_list = Internal.newMutableList();
    }

    public Builder setHostId(Long host_id) {
      this.host_id = host_id;
      return this;
    }

    /**
     * 1 下单, 2 支付成功, 3 妥投, 4 全部退货, 5 整单退货, 6 结算
     */
    public Builder addAllOrderStatusList(List<Integer> order_status_list) {
      Internal.checkElementsNotNull(order_status_list);
      this.order_status_list = order_status_list;
      return this;
    }

    public Builder setTimestamp(Long timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    public Builder setNumber(Integer number) {
      this.number = number;
      return this;
    }

    @Override
    public SalesOrderReq build() {
      if (host_id == null) {
        throw Internal.missingRequiredFields(host_id, "host_id");
      }
      return new SalesOrderReq(host_id, order_status_list, timestamp, number, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SalesOrderReq extends ProtoAdapter<SalesOrderReq> {
    public ProtoAdapter_SalesOrderReq() {
      super(FieldEncoding.LENGTH_DELIMITED, SalesOrderReq.class);
    }

    @Override
    public int encodedSize(SalesOrderReq value) {
      return ProtoAdapter.INT64.encodedSizeWithTag(1, value.host_id)
          + ProtoAdapter.INT32.asRepeated().encodedSizeWithTag(2, value.order_status_list)
          + ProtoAdapter.INT64.encodedSizeWithTag(3, value.timestamp)
          + ProtoAdapter.INT32.encodedSizeWithTag(4, value.number)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SalesOrderReq value) throws IOException {
      ProtoAdapter.INT64.encodeWithTag(writer, 1, value.host_id);
      ProtoAdapter.INT32.asRepeated().encodeWithTag(writer, 2, value.order_status_list);
      ProtoAdapter.INT64.encodeWithTag(writer, 3, value.timestamp);
      ProtoAdapter.INT32.encodeWithTag(writer, 4, value.number);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SalesOrderReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setHostId(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.order_status_list.add(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.setTimestamp(ProtoAdapter.INT64.decode(reader)); break;
          case 4: builder.setNumber(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SalesOrderReq redact(SalesOrderReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
