// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMall.proto
package com.wali.live.proto.LiveMall;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 主播端 zhibo.shopping.all_goods
 */
public final class AllGoodsReq extends Message<AllGoodsReq, AllGoodsReq.Builder> {
  public static final ProtoAdapter<AllGoodsReq> ADAPTER = new ProtoAdapter_AllGoodsReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ROOM_ID = "";

  public static final Long DEFAULT_HOST_ID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String room_id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64",
      label = WireField.Label.REQUIRED
  )
  public final Long host_id;

  public AllGoodsReq(String room_id, Long host_id) {
    this(room_id, host_id, ByteString.EMPTY);
  }

  public AllGoodsReq(String room_id, Long host_id, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.room_id = room_id;
    this.host_id = host_id;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.room_id = room_id;
    builder.host_id = host_id;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AllGoodsReq)) return false;
    AllGoodsReq o = (AllGoodsReq) other;
    return unknownFields().equals(o.unknownFields())
        && room_id.equals(o.room_id)
        && host_id.equals(o.host_id);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + room_id.hashCode();
      result = result * 37 + host_id.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", room_id=").append(room_id);
    builder.append(", host_id=").append(host_id);
    return builder.replace(0, 2, "AllGoodsReq{").append('}').toString();
  }

  public byte[] toByteArray() {
    return AllGoodsReq.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<AllGoodsReq, Builder> {
    public String room_id;

    public Long host_id;

    public Builder() {
    }

    public Builder setRoomId(String room_id) {
      this.room_id = room_id;
      return this;
    }

    public Builder setHostId(Long host_id) {
      this.host_id = host_id;
      return this;
    }

    @Override
    public AllGoodsReq build() {
      if (room_id == null
          || host_id == null) {
        throw Internal.missingRequiredFields(room_id, "room_id",
            host_id, "host_id");
      }
      return new AllGoodsReq(room_id, host_id, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AllGoodsReq extends ProtoAdapter<AllGoodsReq> {
    public ProtoAdapter_AllGoodsReq() {
      super(FieldEncoding.LENGTH_DELIMITED, AllGoodsReq.class);
    }

    @Override
    public int encodedSize(AllGoodsReq value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.room_id)
          + ProtoAdapter.INT64.encodedSizeWithTag(2, value.host_id)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AllGoodsReq value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.room_id);
      ProtoAdapter.INT64.encodeWithTag(writer, 2, value.host_id);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AllGoodsReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRoomId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.setHostId(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AllGoodsReq redact(AllGoodsReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
