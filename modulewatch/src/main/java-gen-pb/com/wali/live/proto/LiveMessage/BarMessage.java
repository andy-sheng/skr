// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class BarMessage extends Message<BarMessage, BarMessage.Builder> {
  public static final ProtoAdapter<BarMessage> ADAPTER = new ProtoAdapter_BarMessage();

  private static final long serialVersionUID = 0L;

  public static final BarMessageType DEFAULT_BMT = BarMessageType.OP;

  public static final String DEFAULT_CONTENT = "";

  public static final String DEFAULT_SCHEMA = "";

  public static final Long DEFAULT_START = 0L;

  public static final Long DEFAULT_END = 0L;

  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.LiveMessage.BarMessageType#ADAPTER"
  )
  public final BarMessageType bmt;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String content;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String schema;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long start;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long end;

  public BarMessage(BarMessageType bmt, String content, String schema, Long start, Long end) {
    this(bmt, content, schema, start, end, ByteString.EMPTY);
  }

  public BarMessage(BarMessageType bmt, String content, String schema, Long start, Long end,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.bmt = bmt;
    this.content = content;
    this.schema = schema;
    this.start = start;
    this.end = end;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.bmt = bmt;
    builder.content = content;
    builder.schema = schema;
    builder.start = start;
    builder.end = end;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BarMessage)) return false;
    BarMessage o = (BarMessage) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(bmt, o.bmt)
        && Internal.equals(content, o.content)
        && Internal.equals(schema, o.schema)
        && Internal.equals(start, o.start)
        && Internal.equals(end, o.end);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (bmt != null ? bmt.hashCode() : 0);
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (schema != null ? schema.hashCode() : 0);
      result = result * 37 + (start != null ? start.hashCode() : 0);
      result = result * 37 + (end != null ? end.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (bmt != null) builder.append(", bmt=").append(bmt);
    if (content != null) builder.append(", content=").append(content);
    if (schema != null) builder.append(", schema=").append(schema);
    if (start != null) builder.append(", start=").append(start);
    if (end != null) builder.append(", end=").append(end);
    return builder.replace(0, 2, "BarMessage{").append('}').toString();
  }

  public byte[] toByteArray() {
    return BarMessage.ADAPTER.encode(this);
  }

  public static final BarMessage parseFrom(byte[] data) throws IOException {
    BarMessage c = null;
       c = BarMessage.ADAPTER.decode(data);
    return c;
  }

  public BarMessageType getBmt() {
    if(bmt==null){
        return new BarMessageType.Builder().build();
    }
    return bmt;
  }

  public String getContent() {
    if(content==null){
        return DEFAULT_CONTENT;
    }
    return content;
  }

  public String getSchema() {
    if(schema==null){
        return DEFAULT_SCHEMA;
    }
    return schema;
  }

  public Long getStart() {
    if(start==null){
        return DEFAULT_START;
    }
    return start;
  }

  public Long getEnd() {
    if(end==null){
        return DEFAULT_END;
    }
    return end;
  }

  public boolean hasBmt() {
    return bmt!=null;
  }

  public boolean hasContent() {
    return content!=null;
  }

  public boolean hasSchema() {
    return schema!=null;
  }

  public boolean hasStart() {
    return start!=null;
  }

  public boolean hasEnd() {
    return end!=null;
  }

  public static final class Builder extends Message.Builder<BarMessage, Builder> {
    public BarMessageType bmt;

    public String content;

    public String schema;

    public Long start;

    public Long end;

    public Builder() {
    }

    public Builder setBmt(BarMessageType bmt) {
      this.bmt = bmt;
      return this;
    }

    public Builder setContent(String content) {
      this.content = content;
      return this;
    }

    public Builder setSchema(String schema) {
      this.schema = schema;
      return this;
    }

    public Builder setStart(Long start) {
      this.start = start;
      return this;
    }

    public Builder setEnd(Long end) {
      this.end = end;
      return this;
    }

    @Override
    public BarMessage build() {
      return new BarMessage(bmt, content, schema, start, end, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_BarMessage extends ProtoAdapter<BarMessage> {
    public ProtoAdapter_BarMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, BarMessage.class);
    }

    @Override
    public int encodedSize(BarMessage value) {
      return BarMessageType.ADAPTER.encodedSizeWithTag(1, value.bmt)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.content)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.schema)
          + ProtoAdapter.UINT64.encodedSizeWithTag(4, value.start)
          + ProtoAdapter.UINT64.encodedSizeWithTag(5, value.end)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, BarMessage value) throws IOException {
      BarMessageType.ADAPTER.encodeWithTag(writer, 1, value.bmt);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.content);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.schema);
      ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.start);
      ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.end);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public BarMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.setBmt(BarMessageType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 2: builder.setContent(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.setSchema(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setStart(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.setEnd(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public BarMessage redact(BarMessage value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
