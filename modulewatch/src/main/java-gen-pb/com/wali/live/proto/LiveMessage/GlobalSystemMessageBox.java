// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GlobalSystemMessageBox extends Message<GlobalSystemMessageBox, GlobalSystemMessageBox.Builder> {
  public static final ProtoAdapter<GlobalSystemMessageBox> ADAPTER = new ProtoAdapter_GlobalSystemMessageBox();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.LiveMessage.GlobalSystemMessage#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<GlobalSystemMessage> global_system_message;

  public GlobalSystemMessageBox(List<GlobalSystemMessage> global_system_message) {
    this(global_system_message, ByteString.EMPTY);
  }

  public GlobalSystemMessageBox(List<GlobalSystemMessage> global_system_message,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.global_system_message = Internal.immutableCopyOf("global_system_message", global_system_message);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.global_system_message = Internal.copyOf("global_system_message", global_system_message);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GlobalSystemMessageBox)) return false;
    GlobalSystemMessageBox o = (GlobalSystemMessageBox) other;
    return unknownFields().equals(o.unknownFields())
        && global_system_message.equals(o.global_system_message);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + global_system_message.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!global_system_message.isEmpty()) builder.append(", global_system_message=").append(global_system_message);
    return builder.replace(0, 2, "GlobalSystemMessageBox{").append('}').toString();
  }

  public byte[] toByteArray() {
    return GlobalSystemMessageBox.ADAPTER.encode(this);
  }

  public static final GlobalSystemMessageBox parseFrom(byte[] data) throws IOException {
    GlobalSystemMessageBox c = null;
       c = GlobalSystemMessageBox.ADAPTER.decode(data);
    return c;
  }

  public List<GlobalSystemMessage> getGlobalSystemMessageList() {
    if(global_system_message==null){
        return new java.util.ArrayList<GlobalSystemMessage>();
    }
    return global_system_message;
  }

  public boolean hasGlobalSystemMessageList() {
    return global_system_message!=null;
  }

  public static final class Builder extends Message.Builder<GlobalSystemMessageBox, Builder> {
    public List<GlobalSystemMessage> global_system_message;

    public Builder() {
      global_system_message = Internal.newMutableList();
    }

    public Builder addAllGlobalSystemMessage(List<GlobalSystemMessage> global_system_message) {
      Internal.checkElementsNotNull(global_system_message);
      this.global_system_message = global_system_message;
      return this;
    }

    @Override
    public GlobalSystemMessageBox build() {
      return new GlobalSystemMessageBox(global_system_message, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GlobalSystemMessageBox extends ProtoAdapter<GlobalSystemMessageBox> {
    public ProtoAdapter_GlobalSystemMessageBox() {
      super(FieldEncoding.LENGTH_DELIMITED, GlobalSystemMessageBox.class);
    }

    @Override
    public int encodedSize(GlobalSystemMessageBox value) {
      return GlobalSystemMessage.ADAPTER.asRepeated().encodedSizeWithTag(1, value.global_system_message)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GlobalSystemMessageBox value) throws IOException {
      GlobalSystemMessage.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.global_system_message);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GlobalSystemMessageBox decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.global_system_message.add(GlobalSystemMessage.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GlobalSystemMessageBox redact(GlobalSystemMessageBox value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.global_system_message, GlobalSystemMessage.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
