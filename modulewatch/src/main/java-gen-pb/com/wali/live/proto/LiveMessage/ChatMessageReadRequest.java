// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ChatMessageReadRequest extends Message<ChatMessageReadRequest, ChatMessageReadRequest.Builder> {
  public static final ProtoAdapter<ChatMessageReadRequest> ADAPTER = new ProtoAdapter_ChatMessageReadRequest();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_FROM_USER = 0L;

  public static final Long DEFAULT_TO_USER = 0L;

  public static final Long DEFAULT_READ_MSG_SEQ = 0L;

  public static final Long DEFAULT_CID = 0L;

  public static final Integer DEFAULT_FOLLOW_TYPE = 0;

  /**
   * 发送者
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long from_user;

  /**
   * 原始消息发送者
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long to_user;

  /**
   * 已读消息的序列号
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long read_msg_seq;

  /**
   * 客户端消息ID
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long cid;

  /**
   * 1:未关注 0:已关注
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer follow_type;

  public ChatMessageReadRequest(Long from_user, Long to_user, Long read_msg_seq, Long cid,
      Integer follow_type) {
    this(from_user, to_user, read_msg_seq, cid, follow_type, ByteString.EMPTY);
  }

  public ChatMessageReadRequest(Long from_user, Long to_user, Long read_msg_seq, Long cid,
      Integer follow_type, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.from_user = from_user;
    this.to_user = to_user;
    this.read_msg_seq = read_msg_seq;
    this.cid = cid;
    this.follow_type = follow_type;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.from_user = from_user;
    builder.to_user = to_user;
    builder.read_msg_seq = read_msg_seq;
    builder.cid = cid;
    builder.follow_type = follow_type;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ChatMessageReadRequest)) return false;
    ChatMessageReadRequest o = (ChatMessageReadRequest) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(from_user, o.from_user)
        && Internal.equals(to_user, o.to_user)
        && Internal.equals(read_msg_seq, o.read_msg_seq)
        && Internal.equals(cid, o.cid)
        && Internal.equals(follow_type, o.follow_type);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (from_user != null ? from_user.hashCode() : 0);
      result = result * 37 + (to_user != null ? to_user.hashCode() : 0);
      result = result * 37 + (read_msg_seq != null ? read_msg_seq.hashCode() : 0);
      result = result * 37 + (cid != null ? cid.hashCode() : 0);
      result = result * 37 + (follow_type != null ? follow_type.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (from_user != null) builder.append(", from_user=").append(from_user);
    if (to_user != null) builder.append(", to_user=").append(to_user);
    if (read_msg_seq != null) builder.append(", read_msg_seq=").append(read_msg_seq);
    if (cid != null) builder.append(", cid=").append(cid);
    if (follow_type != null) builder.append(", follow_type=").append(follow_type);
    return builder.replace(0, 2, "ChatMessageReadRequest{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ChatMessageReadRequest.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<ChatMessageReadRequest, Builder> {
    public Long from_user;

    public Long to_user;

    public Long read_msg_seq;

    public Long cid;

    public Integer follow_type;

    public Builder() {
    }

    /**
     * 发送者
     */
    public Builder setFromUser(Long from_user) {
      this.from_user = from_user;
      return this;
    }

    /**
     * 原始消息发送者
     */
    public Builder setToUser(Long to_user) {
      this.to_user = to_user;
      return this;
    }

    /**
     * 已读消息的序列号
     */
    public Builder setReadMsgSeq(Long read_msg_seq) {
      this.read_msg_seq = read_msg_seq;
      return this;
    }

    /**
     * 客户端消息ID
     */
    public Builder setCid(Long cid) {
      this.cid = cid;
      return this;
    }

    /**
     * 1:未关注 0:已关注
     */
    public Builder setFollowType(Integer follow_type) {
      this.follow_type = follow_type;
      return this;
    }

    @Override
    public ChatMessageReadRequest build() {
      return new ChatMessageReadRequest(from_user, to_user, read_msg_seq, cid, follow_type, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ChatMessageReadRequest extends ProtoAdapter<ChatMessageReadRequest> {
    public ProtoAdapter_ChatMessageReadRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, ChatMessageReadRequest.class);
    }

    @Override
    public int encodedSize(ChatMessageReadRequest value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.from_user)
          + ProtoAdapter.UINT64.encodedSizeWithTag(2, value.to_user)
          + ProtoAdapter.UINT64.encodedSizeWithTag(3, value.read_msg_seq)
          + ProtoAdapter.UINT64.encodedSizeWithTag(4, value.cid)
          + ProtoAdapter.UINT32.encodedSizeWithTag(5, value.follow_type)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ChatMessageReadRequest value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.from_user);
      ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.to_user);
      ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.read_msg_seq);
      ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.cid);
      ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.follow_type);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ChatMessageReadRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setFromUser(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.setToUser(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.setReadMsgSeq(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.setCid(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.setFollowType(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ChatMessageReadRequest redact(ChatMessageReadRequest value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
