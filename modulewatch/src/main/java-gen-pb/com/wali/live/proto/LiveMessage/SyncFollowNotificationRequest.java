// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class SyncFollowNotificationRequest extends Message<SyncFollowNotificationRequest, SyncFollowNotificationRequest.Builder> {
  public static final ProtoAdapter<SyncFollowNotificationRequest> ADAPTER = new ProtoAdapter_SyncFollowNotificationRequest();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_FROM = 0L;

  public static final Integer DEFAULT_LAST_IDX = 0;

  public static final Integer DEFAULT_LIMIT = 0;

  public static final Long DEFAULT_CID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long from;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer last_idx;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer limit;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long cid;

  public SyncFollowNotificationRequest(Long from, Integer last_idx, Integer limit, Long cid) {
    this(from, last_idx, limit, cid, ByteString.EMPTY);
  }

  public SyncFollowNotificationRequest(Long from, Integer last_idx, Integer limit, Long cid,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.from = from;
    this.last_idx = last_idx;
    this.limit = limit;
    this.cid = cid;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.from = from;
    builder.last_idx = last_idx;
    builder.limit = limit;
    builder.cid = cid;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SyncFollowNotificationRequest)) return false;
    SyncFollowNotificationRequest o = (SyncFollowNotificationRequest) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(from, o.from)
        && Internal.equals(last_idx, o.last_idx)
        && Internal.equals(limit, o.limit)
        && Internal.equals(cid, o.cid);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (from != null ? from.hashCode() : 0);
      result = result * 37 + (last_idx != null ? last_idx.hashCode() : 0);
      result = result * 37 + (limit != null ? limit.hashCode() : 0);
      result = result * 37 + (cid != null ? cid.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (from != null) builder.append(", from=").append(from);
    if (last_idx != null) builder.append(", last_idx=").append(last_idx);
    if (limit != null) builder.append(", limit=").append(limit);
    if (cid != null) builder.append(", cid=").append(cid);
    return builder.replace(0, 2, "SyncFollowNotificationRequest{").append('}').toString();
  }

  public byte[] toByteArray() {
    return SyncFollowNotificationRequest.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<SyncFollowNotificationRequest, Builder> {
    public Long from;

    public Integer last_idx;

    public Integer limit;

    public Long cid;

    public Builder() {
    }

    public Builder setFrom(Long from) {
      this.from = from;
      return this;
    }

    public Builder setLastIdx(Integer last_idx) {
      this.last_idx = last_idx;
      return this;
    }

    public Builder setLimit(Integer limit) {
      this.limit = limit;
      return this;
    }

    public Builder setCid(Long cid) {
      this.cid = cid;
      return this;
    }

    @Override
    public SyncFollowNotificationRequest build() {
      return new SyncFollowNotificationRequest(from, last_idx, limit, cid, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SyncFollowNotificationRequest extends ProtoAdapter<SyncFollowNotificationRequest> {
    public ProtoAdapter_SyncFollowNotificationRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, SyncFollowNotificationRequest.class);
    }

    @Override
    public int encodedSize(SyncFollowNotificationRequest value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.from)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.last_idx)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.limit)
          + ProtoAdapter.UINT64.encodedSizeWithTag(4, value.cid)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SyncFollowNotificationRequest value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.from);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.last_idx);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.limit);
      ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.cid);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SyncFollowNotificationRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setFrom(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.setLastIdx(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.setLimit(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.setCid(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SyncFollowNotificationRequest redact(SyncFollowNotificationRequest value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
