// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: BigTurnTable.proto
package com.wali.live.proto.BigTurnTable;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 虚拟礼物卡
 */
public final class VGiftCard extends Message<VGiftCard, VGiftCard.Builder> {
  public static final ProtoAdapter<VGiftCard> ADAPTER = new ProtoAdapter_VGiftCard();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_GIFT_ID = 0;

  public static final Integer DEFAULT_GIFT_CARD_CNT = 0;

  public static final Long DEFAULT_END_TIME = 0L;

  /**
   * 礼品卡可兑换的礼物Id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer gift_id;

  /**
   * 礼品卡数量
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer gift_card_cnt;

  /**
   * 礼品卡有效期结束时间,单位s
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long end_time;

  public VGiftCard(Integer gift_id, Integer gift_card_cnt, Long end_time) {
    this(gift_id, gift_card_cnt, end_time, ByteString.EMPTY);
  }

  public VGiftCard(Integer gift_id, Integer gift_card_cnt, Long end_time,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.gift_id = gift_id;
    this.gift_card_cnt = gift_card_cnt;
    this.end_time = end_time;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.gift_id = gift_id;
    builder.gift_card_cnt = gift_card_cnt;
    builder.end_time = end_time;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof VGiftCard)) return false;
    VGiftCard o = (VGiftCard) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(gift_id, o.gift_id)
        && Internal.equals(gift_card_cnt, o.gift_card_cnt)
        && Internal.equals(end_time, o.end_time);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (gift_id != null ? gift_id.hashCode() : 0);
      result = result * 37 + (gift_card_cnt != null ? gift_card_cnt.hashCode() : 0);
      result = result * 37 + (end_time != null ? end_time.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (gift_id != null) builder.append(", gift_id=").append(gift_id);
    if (gift_card_cnt != null) builder.append(", gift_card_cnt=").append(gift_card_cnt);
    if (end_time != null) builder.append(", end_time=").append(end_time);
    return builder.replace(0, 2, "VGiftCard{").append('}').toString();
  }

  public byte[] toByteArray() {
    return VGiftCard.ADAPTER.encode(this);
  }

  public static final VGiftCard parseFrom(byte[] data) throws IOException {
    VGiftCard c = null;
       c = VGiftCard.ADAPTER.decode(data);
    return c;
  }

  /**
   * 礼品卡可兑换的礼物Id
   */
  public Integer getGiftId() {
    if(gift_id==null){
        return DEFAULT_GIFT_ID;
    }
    return gift_id;
  }

  /**
   * 礼品卡数量
   */
  public Integer getGiftCardCnt() {
    if(gift_card_cnt==null){
        return DEFAULT_GIFT_CARD_CNT;
    }
    return gift_card_cnt;
  }

  /**
   * 礼品卡有效期结束时间,单位s
   */
  public Long getEndTime() {
    if(end_time==null){
        return DEFAULT_END_TIME;
    }
    return end_time;
  }

  /**
   * 礼品卡可兑换的礼物Id
   */
  public boolean hasGiftId() {
    return gift_id!=null;
  }

  /**
   * 礼品卡数量
   */
  public boolean hasGiftCardCnt() {
    return gift_card_cnt!=null;
  }

  /**
   * 礼品卡有效期结束时间,单位s
   */
  public boolean hasEndTime() {
    return end_time!=null;
  }

  public static final class Builder extends Message.Builder<VGiftCard, Builder> {
    public Integer gift_id;

    public Integer gift_card_cnt;

    public Long end_time;

    public Builder() {
    }

    /**
     * 礼品卡可兑换的礼物Id
     */
    public Builder setGiftId(Integer gift_id) {
      this.gift_id = gift_id;
      return this;
    }

    /**
     * 礼品卡数量
     */
    public Builder setGiftCardCnt(Integer gift_card_cnt) {
      this.gift_card_cnt = gift_card_cnt;
      return this;
    }

    /**
     * 礼品卡有效期结束时间,单位s
     */
    public Builder setEndTime(Long end_time) {
      this.end_time = end_time;
      return this;
    }

    @Override
    public VGiftCard build() {
      return new VGiftCard(gift_id, gift_card_cnt, end_time, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_VGiftCard extends ProtoAdapter<VGiftCard> {
    public ProtoAdapter_VGiftCard() {
      super(FieldEncoding.LENGTH_DELIMITED, VGiftCard.class);
    }

    @Override
    public int encodedSize(VGiftCard value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.gift_id)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.gift_card_cnt)
          + ProtoAdapter.UINT64.encodedSizeWithTag(3, value.end_time)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, VGiftCard value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.gift_id);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.gift_card_cnt);
      ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.end_time);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public VGiftCard decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setGiftId(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setGiftCardCnt(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.setEndTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public VGiftCard redact(VGiftCard value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
