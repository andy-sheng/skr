// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class NobleMsg extends Message<NobleMsg, NobleMsg.Builder> {
  public static final ProtoAdapter<NobleMsg> ADAPTER = new ProtoAdapter_NobleMsg();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_MSG_TYPE = 0;

  public static final String DEFAULT_MSG_CONTENT = "";

  /**
   * 0 当前的贵族消息
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer msg_type;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String msg_content;

  @WireField(
      tag = 3,
      adapter = "com.wali.live.proto.LiveMessage.NobleUserInfo#ADAPTER"
  )
  public final NobleUserInfo noble_user_info;

  public NobleMsg(Integer msg_type, String msg_content, NobleUserInfo noble_user_info) {
    this(msg_type, msg_content, noble_user_info, ByteString.EMPTY);
  }

  public NobleMsg(Integer msg_type, String msg_content, NobleUserInfo noble_user_info,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.msg_type = msg_type;
    this.msg_content = msg_content;
    this.noble_user_info = noble_user_info;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.msg_type = msg_type;
    builder.msg_content = msg_content;
    builder.noble_user_info = noble_user_info;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NobleMsg)) return false;
    NobleMsg o = (NobleMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(msg_type, o.msg_type)
        && Internal.equals(msg_content, o.msg_content)
        && Internal.equals(noble_user_info, o.noble_user_info);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (msg_type != null ? msg_type.hashCode() : 0);
      result = result * 37 + (msg_content != null ? msg_content.hashCode() : 0);
      result = result * 37 + (noble_user_info != null ? noble_user_info.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (msg_type != null) builder.append(", msg_type=").append(msg_type);
    if (msg_content != null) builder.append(", msg_content=").append(msg_content);
    if (noble_user_info != null) builder.append(", noble_user_info=").append(noble_user_info);
    return builder.replace(0, 2, "NobleMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return NobleMsg.ADAPTER.encode(this);
  }

  public static final NobleMsg parseFrom(byte[] data) throws IOException {
    NobleMsg c = null;
       c = NobleMsg.ADAPTER.decode(data);
    return c;
  }

  /**
   * 0 当前的贵族消息
   */
  public Integer getMsgType() {
    if(msg_type==null){
        return DEFAULT_MSG_TYPE;
    }
    return msg_type;
  }

  public String getMsgContent() {
    if(msg_content==null){
        return DEFAULT_MSG_CONTENT;
    }
    return msg_content;
  }

  public NobleUserInfo getNobleUserInfo() {
    if(noble_user_info==null){
        return new NobleUserInfo.Builder().build();
    }
    return noble_user_info;
  }

  /**
   * 0 当前的贵族消息
   */
  public boolean hasMsgType() {
    return msg_type!=null;
  }

  public boolean hasMsgContent() {
    return msg_content!=null;
  }

  public boolean hasNobleUserInfo() {
    return noble_user_info!=null;
  }

  public static final class Builder extends Message.Builder<NobleMsg, Builder> {
    public Integer msg_type;

    public String msg_content;

    public NobleUserInfo noble_user_info;

    public Builder() {
    }

    /**
     * 0 当前的贵族消息
     */
    public Builder setMsgType(Integer msg_type) {
      this.msg_type = msg_type;
      return this;
    }

    public Builder setMsgContent(String msg_content) {
      this.msg_content = msg_content;
      return this;
    }

    public Builder setNobleUserInfo(NobleUserInfo noble_user_info) {
      this.noble_user_info = noble_user_info;
      return this;
    }

    @Override
    public NobleMsg build() {
      return new NobleMsg(msg_type, msg_content, noble_user_info, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_NobleMsg extends ProtoAdapter<NobleMsg> {
    public ProtoAdapter_NobleMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, NobleMsg.class);
    }

    @Override
    public int encodedSize(NobleMsg value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.msg_type)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.msg_content)
          + NobleUserInfo.ADAPTER.encodedSizeWithTag(3, value.noble_user_info)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, NobleMsg value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.msg_type);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.msg_content);
      NobleUserInfo.ADAPTER.encodeWithTag(writer, 3, value.noble_user_info);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public NobleMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setMsgType(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setMsgContent(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.setNobleUserInfo(NobleUserInfo.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public NobleMsg redact(NobleMsg value) {
      Builder builder = value.newBuilder();
      if (builder.noble_user_info != null) builder.noble_user_info = NobleUserInfo.ADAPTER.redact(builder.noble_user_info);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
