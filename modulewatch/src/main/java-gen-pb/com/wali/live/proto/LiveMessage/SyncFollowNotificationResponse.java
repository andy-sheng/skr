// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class SyncFollowNotificationResponse extends Message<SyncFollowNotificationResponse, SyncFollowNotificationResponse.Builder> {
  public static final ProtoAdapter<SyncFollowNotificationResponse> ADAPTER = new ProtoAdapter_SyncFollowNotificationResponse();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RET = 0;

  public static final String DEFAULT_ERR_MSG = "";

  public static final Long DEFAULT_CID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer ret;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String err_msg;

  @WireField(
      tag = 3,
      adapter = "com.wali.live.proto.LiveMessage.FollowNotification#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<FollowNotification> follow_notification;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long cid;

  public SyncFollowNotificationResponse(Integer ret, String err_msg,
      List<FollowNotification> follow_notification, Long cid) {
    this(ret, err_msg, follow_notification, cid, ByteString.EMPTY);
  }

  public SyncFollowNotificationResponse(Integer ret, String err_msg,
      List<FollowNotification> follow_notification, Long cid, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.ret = ret;
    this.err_msg = err_msg;
    this.follow_notification = Internal.immutableCopyOf("follow_notification", follow_notification);
    this.cid = cid;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.ret = ret;
    builder.err_msg = err_msg;
    builder.follow_notification = Internal.copyOf("follow_notification", follow_notification);
    builder.cid = cid;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SyncFollowNotificationResponse)) return false;
    SyncFollowNotificationResponse o = (SyncFollowNotificationResponse) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(ret, o.ret)
        && Internal.equals(err_msg, o.err_msg)
        && follow_notification.equals(o.follow_notification)
        && Internal.equals(cid, o.cid);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (ret != null ? ret.hashCode() : 0);
      result = result * 37 + (err_msg != null ? err_msg.hashCode() : 0);
      result = result * 37 + follow_notification.hashCode();
      result = result * 37 + (cid != null ? cid.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (ret != null) builder.append(", ret=").append(ret);
    if (err_msg != null) builder.append(", err_msg=").append(err_msg);
    if (!follow_notification.isEmpty()) builder.append(", follow_notification=").append(follow_notification);
    if (cid != null) builder.append(", cid=").append(cid);
    return builder.replace(0, 2, "SyncFollowNotificationResponse{").append('}').toString();
  }

  public static final SyncFollowNotificationResponse parseFrom(byte[] data) throws IOException {
    SyncFollowNotificationResponse c = null;
       c = SyncFollowNotificationResponse.ADAPTER.decode(data);
    return c;
  }

  public Integer getRet() {
    if(ret==null){
        return DEFAULT_RET;
    }
    return ret;
  }

  public String getErrMsg() {
    if(err_msg==null){
        return DEFAULT_ERR_MSG;
    }
    return err_msg;
  }

  public List<FollowNotification> getFollowNotificationList() {
    if(follow_notification==null){
        return new java.util.ArrayList<FollowNotification>();
    }
    return follow_notification;
  }

  public Long getCid() {
    if(cid==null){
        return DEFAULT_CID;
    }
    return cid;
  }

  public boolean hasRet() {
    return ret!=null;
  }

  public boolean hasErrMsg() {
    return err_msg!=null;
  }

  public boolean hasFollowNotificationList() {
    return follow_notification!=null;
  }

  public boolean hasCid() {
    return cid!=null;
  }

  public static final class Builder extends Message.Builder<SyncFollowNotificationResponse, Builder> {
    public Integer ret;

    public String err_msg;

    public List<FollowNotification> follow_notification;

    public Long cid;

    public Builder() {
      follow_notification = Internal.newMutableList();
    }

    public Builder setRet(Integer ret) {
      this.ret = ret;
      return this;
    }

    public Builder setErrMsg(String err_msg) {
      this.err_msg = err_msg;
      return this;
    }

    public Builder addAllFollowNotification(List<FollowNotification> follow_notification) {
      Internal.checkElementsNotNull(follow_notification);
      this.follow_notification = follow_notification;
      return this;
    }

    public Builder setCid(Long cid) {
      this.cid = cid;
      return this;
    }

    @Override
    public SyncFollowNotificationResponse build() {
      return new SyncFollowNotificationResponse(ret, err_msg, follow_notification, cid, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SyncFollowNotificationResponse extends ProtoAdapter<SyncFollowNotificationResponse> {
    public ProtoAdapter_SyncFollowNotificationResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, SyncFollowNotificationResponse.class);
    }

    @Override
    public int encodedSize(SyncFollowNotificationResponse value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.ret)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.err_msg)
          + FollowNotification.ADAPTER.asRepeated().encodedSizeWithTag(3, value.follow_notification)
          + ProtoAdapter.UINT64.encodedSizeWithTag(4, value.cid)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SyncFollowNotificationResponse value) throws
        IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.ret);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.err_msg);
      FollowNotification.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.follow_notification);
      ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.cid);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SyncFollowNotificationResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRet(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setErrMsg(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.follow_notification.add(FollowNotification.ADAPTER.decode(reader)); break;
          case 4: builder.setCid(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SyncFollowNotificationResponse redact(SyncFollowNotificationResponse value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.follow_notification, FollowNotification.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
