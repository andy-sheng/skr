// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ShoppingInfo extends Message<ShoppingInfo, ShoppingInfo.Builder> {
  public static final ProtoAdapter<ShoppingInfo> ADAPTER = new ProtoAdapter_ShoppingInfo();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final Double DEFAULT_PRICE = 0.0d;

  public static final Long DEFAULT_PRODUCT_ID = 0L;

  public static final String DEFAULT_IMG_URL = "";

  /**
   * 商品名字
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String name;

  /**
   * 商品价格
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE",
      label = WireField.Label.REQUIRED
  )
  public final Double price;

  /**
   * 商品id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64",
      label = WireField.Label.REQUIRED
  )
  public final Long product_id;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String img_url;

  public ShoppingInfo(String name, Double price, Long product_id, String img_url) {
    this(name, price, product_id, img_url, ByteString.EMPTY);
  }

  public ShoppingInfo(String name, Double price, Long product_id, String img_url,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.name = name;
    this.price = price;
    this.product_id = product_id;
    this.img_url = img_url;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.name = name;
    builder.price = price;
    builder.product_id = product_id;
    builder.img_url = img_url;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ShoppingInfo)) return false;
    ShoppingInfo o = (ShoppingInfo) other;
    return unknownFields().equals(o.unknownFields())
        && name.equals(o.name)
        && price.equals(o.price)
        && product_id.equals(o.product_id)
        && Internal.equals(img_url, o.img_url);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + name.hashCode();
      result = result * 37 + price.hashCode();
      result = result * 37 + product_id.hashCode();
      result = result * 37 + (img_url != null ? img_url.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", name=").append(name);
    builder.append(", price=").append(price);
    builder.append(", product_id=").append(product_id);
    if (img_url != null) builder.append(", img_url=").append(img_url);
    return builder.replace(0, 2, "ShoppingInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ShoppingInfo.ADAPTER.encode(this);
  }

  public static final ShoppingInfo parseFrom(byte[] data) throws IOException {
    ShoppingInfo c = null;
       c = ShoppingInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 商品名字
   */
  public String getName() {
    if(name==null){
        return DEFAULT_NAME;
    }
    return name;
  }

  /**
   * 商品价格
   */
  public Double getPrice() {
    if(price==null){
        return DEFAULT_PRICE;
    }
    return price;
  }

  /**
   * 商品id
   */
  public Long getProductId() {
    if(product_id==null){
        return DEFAULT_PRODUCT_ID;
    }
    return product_id;
  }

  public String getImgUrl() {
    if(img_url==null){
        return DEFAULT_IMG_URL;
    }
    return img_url;
  }

  /**
   * 商品名字
   */
  public boolean hasName() {
    return name!=null;
  }

  /**
   * 商品价格
   */
  public boolean hasPrice() {
    return price!=null;
  }

  /**
   * 商品id
   */
  public boolean hasProductId() {
    return product_id!=null;
  }

  public boolean hasImgUrl() {
    return img_url!=null;
  }

  public static final class Builder extends Message.Builder<ShoppingInfo, Builder> {
    public String name;

    public Double price;

    public Long product_id;

    public String img_url;

    public Builder() {
    }

    /**
     * 商品名字
     */
    public Builder setName(String name) {
      this.name = name;
      return this;
    }

    /**
     * 商品价格
     */
    public Builder setPrice(Double price) {
      this.price = price;
      return this;
    }

    /**
     * 商品id
     */
    public Builder setProductId(Long product_id) {
      this.product_id = product_id;
      return this;
    }

    public Builder setImgUrl(String img_url) {
      this.img_url = img_url;
      return this;
    }

    @Override
    public ShoppingInfo build() {
      return new ShoppingInfo(name, price, product_id, img_url, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ShoppingInfo extends ProtoAdapter<ShoppingInfo> {
    public ProtoAdapter_ShoppingInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, ShoppingInfo.class);
    }

    @Override
    public int encodedSize(ShoppingInfo value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.name)
          + ProtoAdapter.DOUBLE.encodedSizeWithTag(2, value.price)
          + ProtoAdapter.INT64.encodedSizeWithTag(3, value.product_id)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.img_url)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ShoppingInfo value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name);
      ProtoAdapter.DOUBLE.encodeWithTag(writer, 2, value.price);
      ProtoAdapter.INT64.encodeWithTag(writer, 3, value.product_id);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.img_url);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ShoppingInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setName(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.setPrice(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 3: builder.setProductId(ProtoAdapter.INT64.decode(reader)); break;
          case 4: builder.setImgUrl(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ShoppingInfo redact(ShoppingInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
