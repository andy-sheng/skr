// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import com.wali.live.proto.LiveCommon.PKInfo;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * pk开始消息
 */
public final class PKBeginMessage extends Message<PKBeginMessage, PKBeginMessage.Builder> {
  public static final ProtoAdapter<PKBeginMessage> ADAPTER = new ProtoAdapter_PKBeginMessage();

  private static final long serialVersionUID = 0L;

  /**
   * 所在用户房间信息
   */
  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.LiveCommon.PKInfo#ADAPTER"
  )
  public final PKInfo thisPKInfo;

  /**
   * 对应pk的房间信息
   */
  @WireField(
      tag = 2,
      adapter = "com.wali.live.proto.LiveCommon.PKInfo#ADAPTER"
  )
  public final PKInfo otherPKInfo;

  public PKBeginMessage(PKInfo thisPKInfo, PKInfo otherPKInfo) {
    this(thisPKInfo, otherPKInfo, ByteString.EMPTY);
  }

  public PKBeginMessage(PKInfo thisPKInfo, PKInfo otherPKInfo, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.thisPKInfo = thisPKInfo;
    this.otherPKInfo = otherPKInfo;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.thisPKInfo = thisPKInfo;
    builder.otherPKInfo = otherPKInfo;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PKBeginMessage)) return false;
    PKBeginMessage o = (PKBeginMessage) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(thisPKInfo, o.thisPKInfo)
        && Internal.equals(otherPKInfo, o.otherPKInfo);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (thisPKInfo != null ? thisPKInfo.hashCode() : 0);
      result = result * 37 + (otherPKInfo != null ? otherPKInfo.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (thisPKInfo != null) builder.append(", thisPKInfo=").append(thisPKInfo);
    if (otherPKInfo != null) builder.append(", otherPKInfo=").append(otherPKInfo);
    return builder.replace(0, 2, "PKBeginMessage{").append('}').toString();
  }

  public byte[] toByteArray() {
    return PKBeginMessage.ADAPTER.encode(this);
  }

  public static final PKBeginMessage parseFrom(byte[] data) throws IOException {
    PKBeginMessage c = null;
       c = PKBeginMessage.ADAPTER.decode(data);
    return c;
  }

  /**
   * 所在用户房间信息
   */
  public PKInfo getThisPKInfo() {
    if(thisPKInfo==null){
        return new PKInfo.Builder().build();
    }
    return thisPKInfo;
  }

  /**
   * 对应pk的房间信息
   */
  public PKInfo getOtherPKInfo() {
    if(otherPKInfo==null){
        return new PKInfo.Builder().build();
    }
    return otherPKInfo;
  }

  /**
   * 所在用户房间信息
   */
  public boolean hasThisPKInfo() {
    return thisPKInfo!=null;
  }

  /**
   * 对应pk的房间信息
   */
  public boolean hasOtherPKInfo() {
    return otherPKInfo!=null;
  }

  public static final class Builder extends Message.Builder<PKBeginMessage, Builder> {
    public PKInfo thisPKInfo;

    public PKInfo otherPKInfo;

    public Builder() {
    }

    /**
     * 所在用户房间信息
     */
    public Builder setThisPKInfo(PKInfo thisPKInfo) {
      this.thisPKInfo = thisPKInfo;
      return this;
    }

    /**
     * 对应pk的房间信息
     */
    public Builder setOtherPKInfo(PKInfo otherPKInfo) {
      this.otherPKInfo = otherPKInfo;
      return this;
    }

    @Override
    public PKBeginMessage build() {
      return new PKBeginMessage(thisPKInfo, otherPKInfo, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PKBeginMessage extends ProtoAdapter<PKBeginMessage> {
    public ProtoAdapter_PKBeginMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, PKBeginMessage.class);
    }

    @Override
    public int encodedSize(PKBeginMessage value) {
      return PKInfo.ADAPTER.encodedSizeWithTag(1, value.thisPKInfo)
          + PKInfo.ADAPTER.encodedSizeWithTag(2, value.otherPKInfo)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PKBeginMessage value) throws IOException {
      PKInfo.ADAPTER.encodeWithTag(writer, 1, value.thisPKInfo);
      PKInfo.ADAPTER.encodeWithTag(writer, 2, value.otherPKInfo);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PKBeginMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setThisPKInfo(PKInfo.ADAPTER.decode(reader)); break;
          case 2: builder.setOtherPKInfo(PKInfo.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PKBeginMessage redact(PKBeginMessage value) {
      Builder builder = value.newBuilder();
      if (builder.thisPKInfo != null) builder.thisPKInfo = PKInfo.ADAPTER.redact(builder.thisPKInfo);
      if (builder.otherPKInfo != null) builder.otherPKInfo = PKInfo.ADAPTER.redact(builder.otherPKInfo);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
