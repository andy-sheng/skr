// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: RadioSignal.proto
package com.wali.live.proto.RadioSignal;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class DiantaiUpdateRsp extends Message<DiantaiUpdateRsp, DiantaiUpdateRsp.Builder> {
  public static final ProtoAdapter<DiantaiUpdateRsp> ADAPTER = new ProtoAdapter_DiantaiUpdateRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RET = 0;

  /**
   * 错误码
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer ret;

  /**
   * 电台成员信息，包含自己
   */
  @WireField(
      tag = 2,
      adapter = "com.wali.live.proto.RadioSignal.DiantaiUser#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<DiantaiUser> members;

  public DiantaiUpdateRsp(Integer ret, List<DiantaiUser> members) {
    this(ret, members, ByteString.EMPTY);
  }

  public DiantaiUpdateRsp(Integer ret, List<DiantaiUser> members, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.ret = ret;
    this.members = Internal.immutableCopyOf("members", members);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.ret = ret;
    builder.members = Internal.copyOf("members", members);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof DiantaiUpdateRsp)) return false;
    DiantaiUpdateRsp o = (DiantaiUpdateRsp) other;
    return unknownFields().equals(o.unknownFields())
        && ret.equals(o.ret)
        && members.equals(o.members);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + ret.hashCode();
      result = result * 37 + members.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", ret=").append(ret);
    if (!members.isEmpty()) builder.append(", members=").append(members);
    return builder.replace(0, 2, "DiantaiUpdateRsp{").append('}').toString();
  }

  public static final DiantaiUpdateRsp parseFrom(byte[] data) throws IOException {
    DiantaiUpdateRsp c = null;
       c = DiantaiUpdateRsp.ADAPTER.decode(data);
    return c;
  }

  /**
   * 错误码
   */
  public Integer getRet() {
    if(ret==null){
        return DEFAULT_RET;
    }
    return ret;
  }

  /**
   * 电台成员信息，包含自己
   */
  public List<DiantaiUser> getMembersList() {
    if(members==null){
        return new java.util.ArrayList<DiantaiUser>();
    }
    return members;
  }

  /**
   * 错误码
   */
  public boolean hasRet() {
    return ret!=null;
  }

  /**
   * 电台成员信息，包含自己
   */
  public boolean hasMembersList() {
    return members!=null;
  }

  public static final class Builder extends Message.Builder<DiantaiUpdateRsp, Builder> {
    public Integer ret;

    public List<DiantaiUser> members;

    public Builder() {
      members = Internal.newMutableList();
    }

    /**
     * 错误码
     */
    public Builder setRet(Integer ret) {
      this.ret = ret;
      return this;
    }

    /**
     * 电台成员信息，包含自己
     */
    public Builder addAllMembers(List<DiantaiUser> members) {
      Internal.checkElementsNotNull(members);
      this.members = members;
      return this;
    }

    @Override
    public DiantaiUpdateRsp build() {
      return new DiantaiUpdateRsp(ret, members, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_DiantaiUpdateRsp extends ProtoAdapter<DiantaiUpdateRsp> {
    public ProtoAdapter_DiantaiUpdateRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, DiantaiUpdateRsp.class);
    }

    @Override
    public int encodedSize(DiantaiUpdateRsp value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.ret)
          + DiantaiUser.ADAPTER.asRepeated().encodedSizeWithTag(2, value.members)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, DiantaiUpdateRsp value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.ret);
      DiantaiUser.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.members);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public DiantaiUpdateRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRet(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.members.add(DiantaiUser.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public DiantaiUpdateRsp redact(DiantaiUpdateRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.members, DiantaiUser.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
