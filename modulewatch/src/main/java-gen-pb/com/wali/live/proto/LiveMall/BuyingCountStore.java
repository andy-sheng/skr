// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMall.proto
package com.wali.live.proto.LiveMall;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class BuyingCountStore extends Message<BuyingCountStore, BuyingCountStore.Builder> {
  public static final ProtoAdapter<BuyingCountStore> ADAPTER = new ProtoAdapter_BuyingCountStore();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ROOM_ID = "";

  public static final Long DEFAULT_HOST_ID = 0L;

  public static final Long DEFAULT_BUYING_COUNT = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String room_id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64",
      label = WireField.Label.REQUIRED
  )
  public final Long host_id;

  /**
   * 返回目前观看人数
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64",
      label = WireField.Label.REQUIRED
  )
  public final Long buying_count;

  public BuyingCountStore(String room_id, Long host_id, Long buying_count) {
    this(room_id, host_id, buying_count, ByteString.EMPTY);
  }

  public BuyingCountStore(String room_id, Long host_id, Long buying_count,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.room_id = room_id;
    this.host_id = host_id;
    this.buying_count = buying_count;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.room_id = room_id;
    builder.host_id = host_id;
    builder.buying_count = buying_count;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BuyingCountStore)) return false;
    BuyingCountStore o = (BuyingCountStore) other;
    return unknownFields().equals(o.unknownFields())
        && room_id.equals(o.room_id)
        && host_id.equals(o.host_id)
        && buying_count.equals(o.buying_count);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + room_id.hashCode();
      result = result * 37 + host_id.hashCode();
      result = result * 37 + buying_count.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", room_id=").append(room_id);
    builder.append(", host_id=").append(host_id);
    builder.append(", buying_count=").append(buying_count);
    return builder.replace(0, 2, "BuyingCountStore{").append('}').toString();
  }

  public byte[] toByteArray() {
    return BuyingCountStore.ADAPTER.encode(this);
  }

  public static final BuyingCountStore parseFrom(byte[] data) throws IOException {
    BuyingCountStore c = null;
       c = BuyingCountStore.ADAPTER.decode(data);
    return c;
  }

  public String getRoomId() {
    if(room_id==null){
        return DEFAULT_ROOM_ID;
    }
    return room_id;
  }

  public Long getHostId() {
    if(host_id==null){
        return DEFAULT_HOST_ID;
    }
    return host_id;
  }

  /**
   * 返回目前观看人数
   */
  public Long getBuyingCount() {
    if(buying_count==null){
        return DEFAULT_BUYING_COUNT;
    }
    return buying_count;
  }

  public boolean hasRoomId() {
    return room_id!=null;
  }

  public boolean hasHostId() {
    return host_id!=null;
  }

  /**
   * 返回目前观看人数
   */
  public boolean hasBuyingCount() {
    return buying_count!=null;
  }

  public static final class Builder extends Message.Builder<BuyingCountStore, Builder> {
    public String room_id;

    public Long host_id;

    public Long buying_count;

    public Builder() {
    }

    public Builder setRoomId(String room_id) {
      this.room_id = room_id;
      return this;
    }

    public Builder setHostId(Long host_id) {
      this.host_id = host_id;
      return this;
    }

    /**
     * 返回目前观看人数
     */
    public Builder setBuyingCount(Long buying_count) {
      this.buying_count = buying_count;
      return this;
    }

    @Override
    public BuyingCountStore build() {
      return new BuyingCountStore(room_id, host_id, buying_count, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_BuyingCountStore extends ProtoAdapter<BuyingCountStore> {
    public ProtoAdapter_BuyingCountStore() {
      super(FieldEncoding.LENGTH_DELIMITED, BuyingCountStore.class);
    }

    @Override
    public int encodedSize(BuyingCountStore value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.room_id)
          + ProtoAdapter.INT64.encodedSizeWithTag(2, value.host_id)
          + ProtoAdapter.INT64.encodedSizeWithTag(3, value.buying_count)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, BuyingCountStore value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.room_id);
      ProtoAdapter.INT64.encodeWithTag(writer, 2, value.host_id);
      ProtoAdapter.INT64.encodeWithTag(writer, 3, value.buying_count);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public BuyingCountStore decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRoomId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.setHostId(ProtoAdapter.INT64.decode(reader)); break;
          case 3: builder.setBuyingCount(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public BuyingCountStore redact(BuyingCountStore value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
