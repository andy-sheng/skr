// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: RedEnvelope.proto
package com.wali.live.proto.RedEnvelope;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 红包Push
 */
public final class NotifyRedEnvelop extends Message<NotifyRedEnvelop, NotifyRedEnvelop.Builder> {
  public static final ProtoAdapter<NotifyRedEnvelop> ADAPTER = new ProtoAdapter_NotifyRedEnvelop();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_ROOMID = "";

  public static final String DEFAULT_REDENVELOPID = "";

  public static final String DEFAULT_MSG = "";

  public static final String DEFAULT_NICKNAME = "";

  public static final Integer DEFAULT_LEVEL = 0;

  public static final Long DEFAULT_AVATAR = 0L;

  public static final String DEFAULT_CLIENT_ID = "";

  public static final Integer DEFAULT_GEM_CNT = 0;

  public static final Integer DEFAULT_ENVELOP_LEVEL = 0;

  /**
   * 用户id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long userId;

  /**
   * 房间id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String roomId;

  /**
   * 红包id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String redEnvelopId;

  /**
   * 红包宣言
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String msg;

  /**
   * 用户昵称
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nickname;

  /**
   * 用户等级
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer level;

  /**
   * 头像
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long avatar;

  /**
   * 透传cid
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String client_id;

  /**
   * 红包总金额
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer gem_cnt;

  /**
   * 1-小型红包，2-中型红包，3-大型红包
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer envelop_level;

  public NotifyRedEnvelop(Long userId, String roomId, String redEnvelopId, String msg,
      String nickname, Integer level, Long avatar, String client_id, Integer gem_cnt,
      Integer envelop_level) {
    this(userId, roomId, redEnvelopId, msg, nickname, level, avatar, client_id, gem_cnt, envelop_level, ByteString.EMPTY);
  }

  public NotifyRedEnvelop(Long userId, String roomId, String redEnvelopId, String msg,
      String nickname, Integer level, Long avatar, String client_id, Integer gem_cnt,
      Integer envelop_level, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.userId = userId;
    this.roomId = roomId;
    this.redEnvelopId = redEnvelopId;
    this.msg = msg;
    this.nickname = nickname;
    this.level = level;
    this.avatar = avatar;
    this.client_id = client_id;
    this.gem_cnt = gem_cnt;
    this.envelop_level = envelop_level;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.userId = userId;
    builder.roomId = roomId;
    builder.redEnvelopId = redEnvelopId;
    builder.msg = msg;
    builder.nickname = nickname;
    builder.level = level;
    builder.avatar = avatar;
    builder.client_id = client_id;
    builder.gem_cnt = gem_cnt;
    builder.envelop_level = envelop_level;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NotifyRedEnvelop)) return false;
    NotifyRedEnvelop o = (NotifyRedEnvelop) other;
    return unknownFields().equals(o.unknownFields())
        && userId.equals(o.userId)
        && roomId.equals(o.roomId)
        && redEnvelopId.equals(o.redEnvelopId)
        && Internal.equals(msg, o.msg)
        && Internal.equals(nickname, o.nickname)
        && Internal.equals(level, o.level)
        && Internal.equals(avatar, o.avatar)
        && Internal.equals(client_id, o.client_id)
        && Internal.equals(gem_cnt, o.gem_cnt)
        && Internal.equals(envelop_level, o.envelop_level);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + userId.hashCode();
      result = result * 37 + roomId.hashCode();
      result = result * 37 + redEnvelopId.hashCode();
      result = result * 37 + (msg != null ? msg.hashCode() : 0);
      result = result * 37 + (nickname != null ? nickname.hashCode() : 0);
      result = result * 37 + (level != null ? level.hashCode() : 0);
      result = result * 37 + (avatar != null ? avatar.hashCode() : 0);
      result = result * 37 + (client_id != null ? client_id.hashCode() : 0);
      result = result * 37 + (gem_cnt != null ? gem_cnt.hashCode() : 0);
      result = result * 37 + (envelop_level != null ? envelop_level.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", userId=").append(userId);
    builder.append(", roomId=").append(roomId);
    builder.append(", redEnvelopId=").append(redEnvelopId);
    if (msg != null) builder.append(", msg=").append(msg);
    if (nickname != null) builder.append(", nickname=").append(nickname);
    if (level != null) builder.append(", level=").append(level);
    if (avatar != null) builder.append(", avatar=").append(avatar);
    if (client_id != null) builder.append(", client_id=").append(client_id);
    if (gem_cnt != null) builder.append(", gem_cnt=").append(gem_cnt);
    if (envelop_level != null) builder.append(", envelop_level=").append(envelop_level);
    return builder.replace(0, 2, "NotifyRedEnvelop{").append('}').toString();
  }

  public byte[] toByteArray() {
    return NotifyRedEnvelop.ADAPTER.encode(this);
  }

  public static final NotifyRedEnvelop parseFrom(byte[] data) throws IOException {
    NotifyRedEnvelop c = null;
       c = NotifyRedEnvelop.ADAPTER.decode(data);
    return c;
  }

  /**
   * 用户id
   */
  public Long getUserId() {
    if(userId==null){
        return DEFAULT_USERID;
    }
    return userId;
  }

  /**
   * 房间id
   */
  public String getRoomId() {
    if(roomId==null){
        return DEFAULT_ROOMID;
    }
    return roomId;
  }

  /**
   * 红包id
   */
  public String getRedEnvelopId() {
    if(redEnvelopId==null){
        return DEFAULT_REDENVELOPID;
    }
    return redEnvelopId;
  }

  /**
   * 红包宣言
   */
  public String getMsg() {
    if(msg==null){
        return DEFAULT_MSG;
    }
    return msg;
  }

  /**
   * 用户昵称
   */
  public String getNickname() {
    if(nickname==null){
        return DEFAULT_NICKNAME;
    }
    return nickname;
  }

  /**
   * 用户等级
   */
  public Integer getLevel() {
    if(level==null){
        return DEFAULT_LEVEL;
    }
    return level;
  }

  /**
   * 头像
   */
  public Long getAvatar() {
    if(avatar==null){
        return DEFAULT_AVATAR;
    }
    return avatar;
  }

  /**
   * 透传cid
   */
  public String getClientId() {
    if(client_id==null){
        return DEFAULT_CLIENT_ID;
    }
    return client_id;
  }

  /**
   * 红包总金额
   */
  public Integer getGemCnt() {
    if(gem_cnt==null){
        return DEFAULT_GEM_CNT;
    }
    return gem_cnt;
  }

  /**
   * 1-小型红包，2-中型红包，3-大型红包
   */
  public Integer getEnvelopLevel() {
    if(envelop_level==null){
        return DEFAULT_ENVELOP_LEVEL;
    }
    return envelop_level;
  }

  /**
   * 用户id
   */
  public boolean hasUserId() {
    return userId!=null;
  }

  /**
   * 房间id
   */
  public boolean hasRoomId() {
    return roomId!=null;
  }

  /**
   * 红包id
   */
  public boolean hasRedEnvelopId() {
    return redEnvelopId!=null;
  }

  /**
   * 红包宣言
   */
  public boolean hasMsg() {
    return msg!=null;
  }

  /**
   * 用户昵称
   */
  public boolean hasNickname() {
    return nickname!=null;
  }

  /**
   * 用户等级
   */
  public boolean hasLevel() {
    return level!=null;
  }

  /**
   * 头像
   */
  public boolean hasAvatar() {
    return avatar!=null;
  }

  /**
   * 透传cid
   */
  public boolean hasClientId() {
    return client_id!=null;
  }

  /**
   * 红包总金额
   */
  public boolean hasGemCnt() {
    return gem_cnt!=null;
  }

  /**
   * 1-小型红包，2-中型红包，3-大型红包
   */
  public boolean hasEnvelopLevel() {
    return envelop_level!=null;
  }

  public static final class Builder extends Message.Builder<NotifyRedEnvelop, Builder> {
    public Long userId;

    public String roomId;

    public String redEnvelopId;

    public String msg;

    public String nickname;

    public Integer level;

    public Long avatar;

    public String client_id;

    public Integer gem_cnt;

    public Integer envelop_level;

    public Builder() {
    }

    /**
     * 用户id
     */
    public Builder setUserId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 房间id
     */
    public Builder setRoomId(String roomId) {
      this.roomId = roomId;
      return this;
    }

    /**
     * 红包id
     */
    public Builder setRedEnvelopId(String redEnvelopId) {
      this.redEnvelopId = redEnvelopId;
      return this;
    }

    /**
     * 红包宣言
     */
    public Builder setMsg(String msg) {
      this.msg = msg;
      return this;
    }

    /**
     * 用户昵称
     */
    public Builder setNickname(String nickname) {
      this.nickname = nickname;
      return this;
    }

    /**
     * 用户等级
     */
    public Builder setLevel(Integer level) {
      this.level = level;
      return this;
    }

    /**
     * 头像
     */
    public Builder setAvatar(Long avatar) {
      this.avatar = avatar;
      return this;
    }

    /**
     * 透传cid
     */
    public Builder setClientId(String client_id) {
      this.client_id = client_id;
      return this;
    }

    /**
     * 红包总金额
     */
    public Builder setGemCnt(Integer gem_cnt) {
      this.gem_cnt = gem_cnt;
      return this;
    }

    /**
     * 1-小型红包，2-中型红包，3-大型红包
     */
    public Builder setEnvelopLevel(Integer envelop_level) {
      this.envelop_level = envelop_level;
      return this;
    }

    @Override
    public NotifyRedEnvelop build() {
      return new NotifyRedEnvelop(userId, roomId, redEnvelopId, msg, nickname, level, avatar, client_id, gem_cnt, envelop_level, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_NotifyRedEnvelop extends ProtoAdapter<NotifyRedEnvelop> {
    public ProtoAdapter_NotifyRedEnvelop() {
      super(FieldEncoding.LENGTH_DELIMITED, NotifyRedEnvelop.class);
    }

    @Override
    public int encodedSize(NotifyRedEnvelop value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.userId)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.roomId)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.redEnvelopId)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.msg)
          + ProtoAdapter.STRING.encodedSizeWithTag(5, value.nickname)
          + ProtoAdapter.UINT32.encodedSizeWithTag(6, value.level)
          + ProtoAdapter.UINT64.encodedSizeWithTag(7, value.avatar)
          + ProtoAdapter.STRING.encodedSizeWithTag(8, value.client_id)
          + ProtoAdapter.UINT32.encodedSizeWithTag(9, value.gem_cnt)
          + ProtoAdapter.UINT32.encodedSizeWithTag(10, value.envelop_level)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, NotifyRedEnvelop value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.userId);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.roomId);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.redEnvelopId);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.msg);
      ProtoAdapter.STRING.encodeWithTag(writer, 5, value.nickname);
      ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.level);
      ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.avatar);
      ProtoAdapter.STRING.encodeWithTag(writer, 8, value.client_id);
      ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.gem_cnt);
      ProtoAdapter.UINT32.encodeWithTag(writer, 10, value.envelop_level);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public NotifyRedEnvelop decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUserId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.setRoomId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.setRedEnvelopId(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setMsg(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.setNickname(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.setLevel(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.setAvatar(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.setClientId(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.setGemCnt(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.setEnvelopLevel(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public NotifyRedEnvelop redact(NotifyRedEnvelop value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
