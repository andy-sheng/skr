// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * zhibo.huya.sendmsg
 * 发送弹幕
 */
public final class HuyaSendMessageReq extends Message<HuyaSendMessageReq, HuyaSendMessageReq.Builder> {
  public static final ProtoAdapter<HuyaSendMessageReq> ADAPTER = new ProtoAdapter_HuyaSendMessageReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_FROMUID = 0L;

  public static final Long DEFAULT_ANCHORHUYAUID = 0L;

  public static final Integer DEFAULT_MSGTYPE = 1;

  public static final String DEFAULT_MSGCONTENT = "";

  public static final Long DEFAULT_SENDTIMESTAMP = 0L;

  public static final Long DEFAULT_ZUID = 0L;

  public static final String DEFAULT_ROOMID = "";

  public static final Integer DEFAULT_ROOMTYPE = 0;

  public static final Integer DEFAULT_SOURCE = 0;

  /**
   * 弹幕发送者的直播id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long fromUid;

  /**
   * 主播的虎牙id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long anchorHuyaUid;

  /**
   * 消息类型:1弹幕消息
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer msgType;

  /**
   * 消息内容
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String msgContent;

  /**
   * 弹幕发送时间戳，单位:毫秒
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long sendTimestamp;

  /**
   * 主播的小米直播id
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long zuid;

  /**
   * 房间id
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String roomId;

  /**
   * 9:虎牙
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer roomType;

  /**
   * 第三方来源 0:虎牙
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer source;

  public HuyaSendMessageReq(Long fromUid, Long anchorHuyaUid, Integer msgType, String msgContent,
      Long sendTimestamp, Long zuid, String roomId, Integer roomType, Integer source) {
    this(fromUid, anchorHuyaUid, msgType, msgContent, sendTimestamp, zuid, roomId, roomType, source, ByteString.EMPTY);
  }

  public HuyaSendMessageReq(Long fromUid, Long anchorHuyaUid, Integer msgType, String msgContent,
      Long sendTimestamp, Long zuid, String roomId, Integer roomType, Integer source,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.fromUid = fromUid;
    this.anchorHuyaUid = anchorHuyaUid;
    this.msgType = msgType;
    this.msgContent = msgContent;
    this.sendTimestamp = sendTimestamp;
    this.zuid = zuid;
    this.roomId = roomId;
    this.roomType = roomType;
    this.source = source;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.fromUid = fromUid;
    builder.anchorHuyaUid = anchorHuyaUid;
    builder.msgType = msgType;
    builder.msgContent = msgContent;
    builder.sendTimestamp = sendTimestamp;
    builder.zuid = zuid;
    builder.roomId = roomId;
    builder.roomType = roomType;
    builder.source = source;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof HuyaSendMessageReq)) return false;
    HuyaSendMessageReq o = (HuyaSendMessageReq) other;
    return unknownFields().equals(o.unknownFields())
        && fromUid.equals(o.fromUid)
        && Internal.equals(anchorHuyaUid, o.anchorHuyaUid)
        && Internal.equals(msgType, o.msgType)
        && Internal.equals(msgContent, o.msgContent)
        && Internal.equals(sendTimestamp, o.sendTimestamp)
        && Internal.equals(zuid, o.zuid)
        && Internal.equals(roomId, o.roomId)
        && Internal.equals(roomType, o.roomType)
        && Internal.equals(source, o.source);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + fromUid.hashCode();
      result = result * 37 + (anchorHuyaUid != null ? anchorHuyaUid.hashCode() : 0);
      result = result * 37 + (msgType != null ? msgType.hashCode() : 0);
      result = result * 37 + (msgContent != null ? msgContent.hashCode() : 0);
      result = result * 37 + (sendTimestamp != null ? sendTimestamp.hashCode() : 0);
      result = result * 37 + (zuid != null ? zuid.hashCode() : 0);
      result = result * 37 + (roomId != null ? roomId.hashCode() : 0);
      result = result * 37 + (roomType != null ? roomType.hashCode() : 0);
      result = result * 37 + (source != null ? source.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", fromUid=").append(fromUid);
    if (anchorHuyaUid != null) builder.append(", anchorHuyaUid=").append(anchorHuyaUid);
    if (msgType != null) builder.append(", msgType=").append(msgType);
    if (msgContent != null) builder.append(", msgContent=").append(msgContent);
    if (sendTimestamp != null) builder.append(", sendTimestamp=").append(sendTimestamp);
    if (zuid != null) builder.append(", zuid=").append(zuid);
    if (roomId != null) builder.append(", roomId=").append(roomId);
    if (roomType != null) builder.append(", roomType=").append(roomType);
    if (source != null) builder.append(", source=").append(source);
    return builder.replace(0, 2, "HuyaSendMessageReq{").append('}').toString();
  }

  public byte[] toByteArray() {
    return HuyaSendMessageReq.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<HuyaSendMessageReq, Builder> {
    public Long fromUid;

    public Long anchorHuyaUid;

    public Integer msgType;

    public String msgContent;

    public Long sendTimestamp;

    public Long zuid;

    public String roomId;

    public Integer roomType;

    public Integer source;

    public Builder() {
    }

    /**
     * 弹幕发送者的直播id
     */
    public Builder setFromUid(Long fromUid) {
      this.fromUid = fromUid;
      return this;
    }

    /**
     * 主播的虎牙id
     */
    public Builder setAnchorHuyaUid(Long anchorHuyaUid) {
      this.anchorHuyaUid = anchorHuyaUid;
      return this;
    }

    /**
     * 消息类型:1弹幕消息
     */
    public Builder setMsgType(Integer msgType) {
      this.msgType = msgType;
      return this;
    }

    /**
     * 消息内容
     */
    public Builder setMsgContent(String msgContent) {
      this.msgContent = msgContent;
      return this;
    }

    /**
     * 弹幕发送时间戳，单位:毫秒
     */
    public Builder setSendTimestamp(Long sendTimestamp) {
      this.sendTimestamp = sendTimestamp;
      return this;
    }

    /**
     * 主播的小米直播id
     */
    public Builder setZuid(Long zuid) {
      this.zuid = zuid;
      return this;
    }

    /**
     * 房间id
     */
    public Builder setRoomId(String roomId) {
      this.roomId = roomId;
      return this;
    }

    /**
     * 9:虎牙
     */
    public Builder setRoomType(Integer roomType) {
      this.roomType = roomType;
      return this;
    }

    /**
     * 第三方来源 0:虎牙
     */
    public Builder setSource(Integer source) {
      this.source = source;
      return this;
    }

    @Override
    public HuyaSendMessageReq build() {
      if (fromUid == null) {
        throw Internal.missingRequiredFields(fromUid, "fromUid");
      }
      return new HuyaSendMessageReq(fromUid, anchorHuyaUid, msgType, msgContent, sendTimestamp, zuid, roomId, roomType, source, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_HuyaSendMessageReq extends ProtoAdapter<HuyaSendMessageReq> {
    public ProtoAdapter_HuyaSendMessageReq() {
      super(FieldEncoding.LENGTH_DELIMITED, HuyaSendMessageReq.class);
    }

    @Override
    public int encodedSize(HuyaSendMessageReq value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.fromUid)
          + ProtoAdapter.UINT64.encodedSizeWithTag(2, value.anchorHuyaUid)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.msgType)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.msgContent)
          + ProtoAdapter.UINT64.encodedSizeWithTag(5, value.sendTimestamp)
          + ProtoAdapter.UINT64.encodedSizeWithTag(6, value.zuid)
          + ProtoAdapter.STRING.encodedSizeWithTag(7, value.roomId)
          + ProtoAdapter.UINT32.encodedSizeWithTag(8, value.roomType)
          + ProtoAdapter.UINT32.encodedSizeWithTag(9, value.source)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, HuyaSendMessageReq value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.fromUid);
      ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.anchorHuyaUid);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.msgType);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.msgContent);
      ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.sendTimestamp);
      ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.zuid);
      ProtoAdapter.STRING.encodeWithTag(writer, 7, value.roomId);
      ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.roomType);
      ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.source);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public HuyaSendMessageReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setFromUid(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.setAnchorHuyaUid(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.setMsgType(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.setMsgContent(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.setSendTimestamp(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.setZuid(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.setRoomId(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.setRoomType(ProtoAdapter.UINT32.decode(reader)); break;
          case 9: builder.setSource(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public HuyaSendMessageReq redact(HuyaSendMessageReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
