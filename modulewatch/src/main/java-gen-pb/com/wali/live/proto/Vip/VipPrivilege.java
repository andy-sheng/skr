// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Vip.proto
package com.wali.live.proto.Vip;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class VipPrivilege extends Message<VipPrivilege, VipPrivilege.Builder> {
  public static final ProtoAdapter<VipPrivilege> ADAPTER = new ProtoAdapter_VipPrivilege();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final Integer DEFAULT_TYPE = 0;

  public static final Integer DEFAULT_OPEN_LEVEL = 0;

  public static final Boolean DEFAULT_GAINED = false;

  /**
   * 名称
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * 用数字唯一标识的特权类型. 1:徽章, 2:飘屏, 3:闪耀进场, 4:至尊进场, 5:终极进场, 6: 隐身, 7: 专享充值
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer type;

  /**
   * 当前特权开启级别
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer open_level;

  /**
   * 当前用户是否得到该特权
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL",
      label = WireField.Label.REQUIRED
  )
  public final Boolean gained;

  public VipPrivilege(String name, Integer type, Integer open_level, Boolean gained) {
    this(name, type, open_level, gained, ByteString.EMPTY);
  }

  public VipPrivilege(String name, Integer type, Integer open_level, Boolean gained,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.name = name;
    this.type = type;
    this.open_level = open_level;
    this.gained = gained;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.name = name;
    builder.type = type;
    builder.open_level = open_level;
    builder.gained = gained;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof VipPrivilege)) return false;
    VipPrivilege o = (VipPrivilege) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(name, o.name)
        && Internal.equals(type, o.type)
        && Internal.equals(open_level, o.open_level)
        && gained.equals(o.gained);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (open_level != null ? open_level.hashCode() : 0);
      result = result * 37 + gained.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (name != null) builder.append(", name=").append(name);
    if (type != null) builder.append(", type=").append(type);
    if (open_level != null) builder.append(", open_level=").append(open_level);
    builder.append(", gained=").append(gained);
    return builder.replace(0, 2, "VipPrivilege{").append('}').toString();
  }

  public byte[] toByteArray() {
    return VipPrivilege.ADAPTER.encode(this);
  }

  public static final VipPrivilege parseFrom(byte[] data) throws IOException {
    VipPrivilege c = null;
       c = VipPrivilege.ADAPTER.decode(data);
    return c;
  }

  /**
   * 名称
   */
  public String getName() {
    if(name==null){
        return DEFAULT_NAME;
    }
    return name;
  }

  /**
   * 用数字唯一标识的特权类型. 1:徽章, 2:飘屏, 3:闪耀进场, 4:至尊进场, 5:终极进场, 6: 隐身, 7: 专享充值
   */
  public Integer getType() {
    if(type==null){
        return DEFAULT_TYPE;
    }
    return type;
  }

  /**
   * 当前特权开启级别
   */
  public Integer getOpenLevel() {
    if(open_level==null){
        return DEFAULT_OPEN_LEVEL;
    }
    return open_level;
  }

  /**
   * 当前用户是否得到该特权
   */
  public Boolean getGained() {
    if(gained==null){
        return DEFAULT_GAINED;
    }
    return gained;
  }

  /**
   * 名称
   */
  public boolean hasName() {
    return name!=null;
  }

  /**
   * 用数字唯一标识的特权类型. 1:徽章, 2:飘屏, 3:闪耀进场, 4:至尊进场, 5:终极进场, 6: 隐身, 7: 专享充值
   */
  public boolean hasType() {
    return type!=null;
  }

  /**
   * 当前特权开启级别
   */
  public boolean hasOpenLevel() {
    return open_level!=null;
  }

  /**
   * 当前用户是否得到该特权
   */
  public boolean hasGained() {
    return gained!=null;
  }

  public static final class Builder extends Message.Builder<VipPrivilege, Builder> {
    public String name;

    public Integer type;

    public Integer open_level;

    public Boolean gained;

    public Builder() {
    }

    /**
     * 名称
     */
    public Builder setName(String name) {
      this.name = name;
      return this;
    }

    /**
     * 用数字唯一标识的特权类型. 1:徽章, 2:飘屏, 3:闪耀进场, 4:至尊进场, 5:终极进场, 6: 隐身, 7: 专享充值
     */
    public Builder setType(Integer type) {
      this.type = type;
      return this;
    }

    /**
     * 当前特权开启级别
     */
    public Builder setOpenLevel(Integer open_level) {
      this.open_level = open_level;
      return this;
    }

    /**
     * 当前用户是否得到该特权
     */
    public Builder setGained(Boolean gained) {
      this.gained = gained;
      return this;
    }

    @Override
    public VipPrivilege build() {
      return new VipPrivilege(name, type, open_level, gained, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_VipPrivilege extends ProtoAdapter<VipPrivilege> {
    public ProtoAdapter_VipPrivilege() {
      super(FieldEncoding.LENGTH_DELIMITED, VipPrivilege.class);
    }

    @Override
    public int encodedSize(VipPrivilege value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.name)
          + ProtoAdapter.INT32.encodedSizeWithTag(2, value.type)
          + ProtoAdapter.INT32.encodedSizeWithTag(3, value.open_level)
          + ProtoAdapter.BOOL.encodedSizeWithTag(4, value.gained)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, VipPrivilege value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name);
      ProtoAdapter.INT32.encodeWithTag(writer, 2, value.type);
      ProtoAdapter.INT32.encodeWithTag(writer, 3, value.open_level);
      ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.gained);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public VipPrivilege decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setName(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.setType(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.setOpenLevel(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.setGained(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public VipPrivilege redact(VipPrivilege value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
