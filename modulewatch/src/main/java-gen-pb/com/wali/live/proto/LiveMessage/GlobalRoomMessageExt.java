// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GlobalRoomMessageExt extends Message<GlobalRoomMessageExt, GlobalRoomMessageExt.Builder> {
  public static final ProtoAdapter<GlobalRoomMessageExt> ADAPTER = new ProtoAdapter_GlobalRoomMessageExt();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.LiveMessage.InnerGlobalRoomMessageExt#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<InnerGlobalRoomMessageExt> inner_global_room_msg_ext;

  public GlobalRoomMessageExt(List<InnerGlobalRoomMessageExt> inner_global_room_msg_ext) {
    this(inner_global_room_msg_ext, ByteString.EMPTY);
  }

  public GlobalRoomMessageExt(List<InnerGlobalRoomMessageExt> inner_global_room_msg_ext,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.inner_global_room_msg_ext = Internal.immutableCopyOf("inner_global_room_msg_ext", inner_global_room_msg_ext);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.inner_global_room_msg_ext = Internal.copyOf("inner_global_room_msg_ext", inner_global_room_msg_ext);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GlobalRoomMessageExt)) return false;
    GlobalRoomMessageExt o = (GlobalRoomMessageExt) other;
    return unknownFields().equals(o.unknownFields())
        && inner_global_room_msg_ext.equals(o.inner_global_room_msg_ext);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + inner_global_room_msg_ext.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!inner_global_room_msg_ext.isEmpty()) builder.append(", inner_global_room_msg_ext=").append(inner_global_room_msg_ext);
    return builder.replace(0, 2, "GlobalRoomMessageExt{").append('}').toString();
  }

  public byte[] toByteArray() {
    return GlobalRoomMessageExt.ADAPTER.encode(this);
  }

  public static final GlobalRoomMessageExt parseFrom(byte[] data) throws IOException {
    GlobalRoomMessageExt c = null;
       c = GlobalRoomMessageExt.ADAPTER.decode(data);
    return c;
  }

  public List<InnerGlobalRoomMessageExt> getInnerGlobalRoomMsgExtList() {
    if(inner_global_room_msg_ext==null){
        return new java.util.ArrayList<InnerGlobalRoomMessageExt>();
    }
    return inner_global_room_msg_ext;
  }

  public boolean hasInnerGlobalRoomMsgExtList() {
    return inner_global_room_msg_ext!=null;
  }

  public static final class Builder extends Message.Builder<GlobalRoomMessageExt, Builder> {
    public List<InnerGlobalRoomMessageExt> inner_global_room_msg_ext;

    public Builder() {
      inner_global_room_msg_ext = Internal.newMutableList();
    }

    public Builder addAllInnerGlobalRoomMsgExt(
        List<InnerGlobalRoomMessageExt> inner_global_room_msg_ext) {
      Internal.checkElementsNotNull(inner_global_room_msg_ext);
      this.inner_global_room_msg_ext = inner_global_room_msg_ext;
      return this;
    }

    @Override
    public GlobalRoomMessageExt build() {
      return new GlobalRoomMessageExt(inner_global_room_msg_ext, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GlobalRoomMessageExt extends ProtoAdapter<GlobalRoomMessageExt> {
    public ProtoAdapter_GlobalRoomMessageExt() {
      super(FieldEncoding.LENGTH_DELIMITED, GlobalRoomMessageExt.class);
    }

    @Override
    public int encodedSize(GlobalRoomMessageExt value) {
      return InnerGlobalRoomMessageExt.ADAPTER.asRepeated().encodedSizeWithTag(1, value.inner_global_room_msg_ext)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GlobalRoomMessageExt value) throws IOException {
      InnerGlobalRoomMessageExt.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.inner_global_room_msg_ext);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GlobalRoomMessageExt decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.inner_global_room_msg_ext.add(InnerGlobalRoomMessageExt.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GlobalRoomMessageExt redact(GlobalRoomMessageExt value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.inner_global_room_msg_ext, InnerGlobalRoomMessageExt.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
