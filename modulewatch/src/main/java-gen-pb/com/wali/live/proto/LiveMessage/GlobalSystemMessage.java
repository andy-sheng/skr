// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 全局系统消息 key: "global_sys_msg"
 */
public final class GlobalSystemMessage extends Message<GlobalSystemMessage, GlobalSystemMessage.Builder> {
  public static final ProtoAdapter<GlobalSystemMessage> ADAPTER = new ProtoAdapter_GlobalSystemMessage();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_CHANNEL = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channel;

  @WireField(
      tag = 2,
      adapter = "com.wali.live.proto.LiveMessage.SystemMessage#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<SystemMessage> system_message;

  public GlobalSystemMessage(String channel, List<SystemMessage> system_message) {
    this(channel, system_message, ByteString.EMPTY);
  }

  public GlobalSystemMessage(String channel, List<SystemMessage> system_message,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.channel = channel;
    this.system_message = Internal.immutableCopyOf("system_message", system_message);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.channel = channel;
    builder.system_message = Internal.copyOf("system_message", system_message);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GlobalSystemMessage)) return false;
    GlobalSystemMessage o = (GlobalSystemMessage) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(channel, o.channel)
        && system_message.equals(o.system_message);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (channel != null ? channel.hashCode() : 0);
      result = result * 37 + system_message.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (channel != null) builder.append(", channel=").append(channel);
    if (!system_message.isEmpty()) builder.append(", system_message=").append(system_message);
    return builder.replace(0, 2, "GlobalSystemMessage{").append('}').toString();
  }

  public byte[] toByteArray() {
    return GlobalSystemMessage.ADAPTER.encode(this);
  }

  public static final GlobalSystemMessage parseFrom(byte[] data) throws IOException {
    GlobalSystemMessage c = null;
       c = GlobalSystemMessage.ADAPTER.decode(data);
    return c;
  }

  public String getChannel() {
    if(channel==null){
        return DEFAULT_CHANNEL;
    }
    return channel;
  }

  public List<SystemMessage> getSystemMessageList() {
    if(system_message==null){
        return new java.util.ArrayList<SystemMessage>();
    }
    return system_message;
  }

  public boolean hasChannel() {
    return channel!=null;
  }

  public boolean hasSystemMessageList() {
    return system_message!=null;
  }

  public static final class Builder extends Message.Builder<GlobalSystemMessage, Builder> {
    public String channel;

    public List<SystemMessage> system_message;

    public Builder() {
      system_message = Internal.newMutableList();
    }

    public Builder setChannel(String channel) {
      this.channel = channel;
      return this;
    }

    public Builder addAllSystemMessage(List<SystemMessage> system_message) {
      Internal.checkElementsNotNull(system_message);
      this.system_message = system_message;
      return this;
    }

    @Override
    public GlobalSystemMessage build() {
      return new GlobalSystemMessage(channel, system_message, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GlobalSystemMessage extends ProtoAdapter<GlobalSystemMessage> {
    public ProtoAdapter_GlobalSystemMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, GlobalSystemMessage.class);
    }

    @Override
    public int encodedSize(GlobalSystemMessage value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.channel)
          + SystemMessage.ADAPTER.asRepeated().encodedSizeWithTag(2, value.system_message)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GlobalSystemMessage value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.channel);
      SystemMessage.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.system_message);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GlobalSystemMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setChannel(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.system_message.add(SystemMessage.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GlobalSystemMessage redact(GlobalSystemMessage value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.system_message, SystemMessage.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
