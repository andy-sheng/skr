// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: RadioSignal.proto
package com.wali.live.proto.RadioSignal;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class DiantaiApplyListRsp extends Message<DiantaiApplyListRsp, DiantaiApplyListRsp.Builder> {
  public static final ProtoAdapter<DiantaiApplyListRsp> ADAPTER = new ProtoAdapter_DiantaiApplyListRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RET = 0;

  /**
   * 错误码
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer ret;

  @WireField(
      tag = 2,
      adapter = "com.wali.live.proto.RadioSignal.DiantaiUser#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<DiantaiUser> apply_users;

  public DiantaiApplyListRsp(Integer ret, List<DiantaiUser> apply_users) {
    this(ret, apply_users, ByteString.EMPTY);
  }

  public DiantaiApplyListRsp(Integer ret, List<DiantaiUser> apply_users, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.ret = ret;
    this.apply_users = Internal.immutableCopyOf("apply_users", apply_users);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.ret = ret;
    builder.apply_users = Internal.copyOf("apply_users", apply_users);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof DiantaiApplyListRsp)) return false;
    DiantaiApplyListRsp o = (DiantaiApplyListRsp) other;
    return unknownFields().equals(o.unknownFields())
        && ret.equals(o.ret)
        && apply_users.equals(o.apply_users);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + ret.hashCode();
      result = result * 37 + apply_users.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", ret=").append(ret);
    if (!apply_users.isEmpty()) builder.append(", apply_users=").append(apply_users);
    return builder.replace(0, 2, "DiantaiApplyListRsp{").append('}').toString();
  }

  public static final DiantaiApplyListRsp parseFrom(byte[] data) throws IOException {
    DiantaiApplyListRsp c = null;
       c = DiantaiApplyListRsp.ADAPTER.decode(data);
    return c;
  }

  /**
   * 错误码
   */
  public Integer getRet() {
    if(ret==null){
        return DEFAULT_RET;
    }
    return ret;
  }

  public List<DiantaiUser> getApplyUsersList() {
    if(apply_users==null){
        return new java.util.ArrayList<DiantaiUser>();
    }
    return apply_users;
  }

  /**
   * 错误码
   */
  public boolean hasRet() {
    return ret!=null;
  }

  public boolean hasApplyUsersList() {
    return apply_users!=null;
  }

  public static final class Builder extends Message.Builder<DiantaiApplyListRsp, Builder> {
    public Integer ret;

    public List<DiantaiUser> apply_users;

    public Builder() {
      apply_users = Internal.newMutableList();
    }

    /**
     * 错误码
     */
    public Builder setRet(Integer ret) {
      this.ret = ret;
      return this;
    }

    public Builder addAllApplyUsers(List<DiantaiUser> apply_users) {
      Internal.checkElementsNotNull(apply_users);
      this.apply_users = apply_users;
      return this;
    }

    @Override
    public DiantaiApplyListRsp build() {
      return new DiantaiApplyListRsp(ret, apply_users, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_DiantaiApplyListRsp extends ProtoAdapter<DiantaiApplyListRsp> {
    public ProtoAdapter_DiantaiApplyListRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, DiantaiApplyListRsp.class);
    }

    @Override
    public int encodedSize(DiantaiApplyListRsp value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.ret)
          + DiantaiUser.ADAPTER.asRepeated().encodedSizeWithTag(2, value.apply_users)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, DiantaiApplyListRsp value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.ret);
      DiantaiUser.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.apply_users);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public DiantaiApplyListRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRet(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.apply_users.add(DiantaiUser.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public DiantaiApplyListRsp redact(DiantaiApplyListRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.apply_users, DiantaiUser.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
