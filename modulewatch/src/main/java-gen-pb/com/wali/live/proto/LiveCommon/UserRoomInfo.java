// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveCommon.proto
package com.wali.live.proto.LiveCommon;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class UserRoomInfo extends Message<UserRoomInfo, UserRoomInfo.Builder> {
  public static final ProtoAdapter<UserRoomInfo> ADAPTER = new ProtoAdapter_UserRoomInfo();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_TYPE = 0;

  public static final Integer DEFAULT_APPTYPE = 0;

  public static final String DEFAULT_TVROOMID = "";

  /**
   * 类型，0公开，1私密,2加密房间
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer type;

  /**
   * 0:小米直播app，1:无人机 2:导播台 3:录屏 4:一直播
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer appType;

  /**
   * 台roomid。为解决iOS老版本入口展示问题，roomid不在外层下发，而在UserRoomInfo中下发
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String tvRoomid;

  public UserRoomInfo(Integer type, Integer appType, String tvRoomid) {
    this(type, appType, tvRoomid, ByteString.EMPTY);
  }

  public UserRoomInfo(Integer type, Integer appType, String tvRoomid, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.type = type;
    this.appType = appType;
    this.tvRoomid = tvRoomid;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.type = type;
    builder.appType = appType;
    builder.tvRoomid = tvRoomid;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserRoomInfo)) return false;
    UserRoomInfo o = (UserRoomInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(type, o.type)
        && Internal.equals(appType, o.appType)
        && Internal.equals(tvRoomid, o.tvRoomid);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (appType != null ? appType.hashCode() : 0);
      result = result * 37 + (tvRoomid != null ? tvRoomid.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (type != null) builder.append(", type=").append(type);
    if (appType != null) builder.append(", appType=").append(appType);
    if (tvRoomid != null) builder.append(", tvRoomid=").append(tvRoomid);
    return builder.replace(0, 2, "UserRoomInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return UserRoomInfo.ADAPTER.encode(this);
  }

  public static final UserRoomInfo parseFrom(byte[] data) throws IOException {
    UserRoomInfo c = null;
       c = UserRoomInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 类型，0公开，1私密,2加密房间
   */
  public Integer getType() {
    if(type==null){
        return DEFAULT_TYPE;
    }
    return type;
  }

  /**
   * 0:小米直播app，1:无人机 2:导播台 3:录屏 4:一直播
   */
  public Integer getAppType() {
    if(appType==null){
        return DEFAULT_APPTYPE;
    }
    return appType;
  }

  /**
   * 台roomid。为解决iOS老版本入口展示问题，roomid不在外层下发，而在UserRoomInfo中下发
   */
  public String getTvRoomid() {
    if(tvRoomid==null){
        return DEFAULT_TVROOMID;
    }
    return tvRoomid;
  }

  /**
   * 类型，0公开，1私密,2加密房间
   */
  public boolean hasType() {
    return type!=null;
  }

  /**
   * 0:小米直播app，1:无人机 2:导播台 3:录屏 4:一直播
   */
  public boolean hasAppType() {
    return appType!=null;
  }

  /**
   * 台roomid。为解决iOS老版本入口展示问题，roomid不在外层下发，而在UserRoomInfo中下发
   */
  public boolean hasTvRoomid() {
    return tvRoomid!=null;
  }

  public static final class Builder extends Message.Builder<UserRoomInfo, Builder> {
    public Integer type;

    public Integer appType;

    public String tvRoomid;

    public Builder() {
    }

    /**
     * 类型，0公开，1私密,2加密房间
     */
    public Builder setType(Integer type) {
      this.type = type;
      return this;
    }

    /**
     * 0:小米直播app，1:无人机 2:导播台 3:录屏 4:一直播
     */
    public Builder setAppType(Integer appType) {
      this.appType = appType;
      return this;
    }

    /**
     * 台roomid。为解决iOS老版本入口展示问题，roomid不在外层下发，而在UserRoomInfo中下发
     */
    public Builder setTvRoomid(String tvRoomid) {
      this.tvRoomid = tvRoomid;
      return this;
    }

    @Override
    public UserRoomInfo build() {
      return new UserRoomInfo(type, appType, tvRoomid, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserRoomInfo extends ProtoAdapter<UserRoomInfo> {
    public ProtoAdapter_UserRoomInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, UserRoomInfo.class);
    }

    @Override
    public int encodedSize(UserRoomInfo value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.type)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.appType)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.tvRoomid)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserRoomInfo value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.type);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.appType);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.tvRoomid);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserRoomInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setType(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setAppType(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.setTvRoomid(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserRoomInfo redact(UserRoomInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
