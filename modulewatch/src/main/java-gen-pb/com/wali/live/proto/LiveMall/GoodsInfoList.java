// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMall.proto
package com.wali.live.proto.LiveMall;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GoodsInfoList extends Message<GoodsInfoList, GoodsInfoList.Builder> {
  public static final ProtoAdapter<GoodsInfoList> ADAPTER = new ProtoAdapter_GoodsInfoList();

  private static final long serialVersionUID = 0L;

  /**
   * 商品信息
   */
  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.LiveMall.GoodsInfo#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<GoodsInfo> goods_info;

  public GoodsInfoList(List<GoodsInfo> goods_info) {
    this(goods_info, ByteString.EMPTY);
  }

  public GoodsInfoList(List<GoodsInfo> goods_info, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.goods_info = Internal.immutableCopyOf("goods_info", goods_info);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.goods_info = Internal.copyOf("goods_info", goods_info);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GoodsInfoList)) return false;
    GoodsInfoList o = (GoodsInfoList) other;
    return unknownFields().equals(o.unknownFields())
        && goods_info.equals(o.goods_info);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + goods_info.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!goods_info.isEmpty()) builder.append(", goods_info=").append(goods_info);
    return builder.replace(0, 2, "GoodsInfoList{").append('}').toString();
  }

  public byte[] toByteArray() {
    return GoodsInfoList.ADAPTER.encode(this);
  }

  public static final GoodsInfoList parseFrom(byte[] data) throws IOException {
    GoodsInfoList c = null;
       c = GoodsInfoList.ADAPTER.decode(data);
    return c;
  }

  /**
   * 商品信息
   */
  public List<GoodsInfo> getGoodsInfoList() {
    if(goods_info==null){
        return new java.util.ArrayList<GoodsInfo>();
    }
    return goods_info;
  }

  /**
   * 商品信息
   */
  public boolean hasGoodsInfoList() {
    return goods_info!=null;
  }

  public static final class Builder extends Message.Builder<GoodsInfoList, Builder> {
    public List<GoodsInfo> goods_info;

    public Builder() {
      goods_info = Internal.newMutableList();
    }

    /**
     * 商品信息
     */
    public Builder addAllGoodsInfo(List<GoodsInfo> goods_info) {
      Internal.checkElementsNotNull(goods_info);
      this.goods_info = goods_info;
      return this;
    }

    @Override
    public GoodsInfoList build() {
      return new GoodsInfoList(goods_info, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GoodsInfoList extends ProtoAdapter<GoodsInfoList> {
    public ProtoAdapter_GoodsInfoList() {
      super(FieldEncoding.LENGTH_DELIMITED, GoodsInfoList.class);
    }

    @Override
    public int encodedSize(GoodsInfoList value) {
      return GoodsInfo.ADAPTER.asRepeated().encodedSizeWithTag(1, value.goods_info)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GoodsInfoList value) throws IOException {
      GoodsInfo.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.goods_info);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GoodsInfoList decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.goods_info.add(GoodsInfo.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GoodsInfoList redact(GoodsInfoList value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.goods_info, GoodsInfo.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
