// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * push消息结构
 */
public final class PushMessage extends com.squareup.wire.Message<PushMessage, PushMessage.Builder> {
  public static final ProtoAdapter<PushMessage> ADAPTER = new ProtoAdapter_PushMessage();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.LiveMessage.Message#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Message> message;

  public PushMessage(List<Message> message) {
    this(message, ByteString.EMPTY);
  }

  public PushMessage(List<Message> message, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.message = Internal.immutableCopyOf("message", message);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.message = Internal.copyOf("message", message);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PushMessage)) return false;
    PushMessage o = (PushMessage) other;
    return unknownFields().equals(o.unknownFields())
        && message.equals(o.message);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + message.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!message.isEmpty()) builder.append(", message=").append(message);
    return builder.replace(0, 2, "PushMessage{").append('}').toString();
  }

  public byte[] toByteArray() {
    return PushMessage.ADAPTER.encode(this);
  }

  public static final PushMessage parseFrom(byte[] data) throws IOException {
    PushMessage c = null;
       c = PushMessage.ADAPTER.decode(data);
    return c;
  }

  public List<Message> getMessageList() {
    if(message==null){
        return new java.util.ArrayList<Message>();
    }
    return message;
  }

  public boolean hasMessageList() {
    return message!=null;
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<PushMessage, Builder> {
    public List<Message> message;

    public Builder() {
      message = Internal.newMutableList();
    }

    public Builder addAllMessage(List<Message> message) {
      Internal.checkElementsNotNull(message);
      this.message = message;
      return this;
    }

    @Override
    public PushMessage build() {
      return new PushMessage(message, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PushMessage extends ProtoAdapter<PushMessage> {
    public ProtoAdapter_PushMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, PushMessage.class);
    }

    @Override
    public int encodedSize(PushMessage value) {
      return Message.ADAPTER.asRepeated().encodedSizeWithTag(1, value.message)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PushMessage value) throws IOException {
      Message.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.message);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PushMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.message.add(Message.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PushMessage redact(PushMessage value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.message, Message.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
