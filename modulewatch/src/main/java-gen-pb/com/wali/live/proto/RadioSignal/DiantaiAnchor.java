// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: RadioSignal.proto
package com.wali.live.proto.RadioSignal;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class DiantaiAnchor extends Message<DiantaiAnchor, DiantaiAnchor.Builder> {
  public static final ProtoAdapter<DiantaiAnchor> ADAPTER = new ProtoAdapter_DiantaiAnchor();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ZUID = 0L;

  public static final Integer DEFAULT_STATUS = 0;

  public static final Integer DEFAULT_ONLINESTATUS = 0;

  public static final Integer DEFAULT_SPEAK_STATUS = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long zuid;

  /**
   * 1: 正常  2:静音
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  /**
   * 0:在线 1:离线
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer onlineStatus;

  /**
   * 用户发言状态： 0:没有发言 1:发言中
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer speak_status;

  public DiantaiAnchor(Long zuid, Integer status, Integer onlineStatus, Integer speak_status) {
    this(zuid, status, onlineStatus, speak_status, ByteString.EMPTY);
  }

  public DiantaiAnchor(Long zuid, Integer status, Integer onlineStatus, Integer speak_status,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.zuid = zuid;
    this.status = status;
    this.onlineStatus = onlineStatus;
    this.speak_status = speak_status;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.zuid = zuid;
    builder.status = status;
    builder.onlineStatus = onlineStatus;
    builder.speak_status = speak_status;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof DiantaiAnchor)) return false;
    DiantaiAnchor o = (DiantaiAnchor) other;
    return unknownFields().equals(o.unknownFields())
        && zuid.equals(o.zuid)
        && Internal.equals(status, o.status)
        && Internal.equals(onlineStatus, o.onlineStatus)
        && Internal.equals(speak_status, o.speak_status);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + zuid.hashCode();
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (onlineStatus != null ? onlineStatus.hashCode() : 0);
      result = result * 37 + (speak_status != null ? speak_status.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", zuid=").append(zuid);
    if (status != null) builder.append(", status=").append(status);
    if (onlineStatus != null) builder.append(", onlineStatus=").append(onlineStatus);
    if (speak_status != null) builder.append(", speak_status=").append(speak_status);
    return builder.replace(0, 2, "DiantaiAnchor{").append('}').toString();
  }

  public byte[] toByteArray() {
    return DiantaiAnchor.ADAPTER.encode(this);
  }

  public static final DiantaiAnchor parseFrom(byte[] data) throws IOException {
    DiantaiAnchor c = null;
       c = DiantaiAnchor.ADAPTER.decode(data);
    return c;
  }

  public Long getZuid() {
    if(zuid==null){
        return DEFAULT_ZUID;
    }
    return zuid;
  }

  /**
   * 1: 正常  2:静音
   */
  public Integer getStatus() {
    if(status==null){
        return DEFAULT_STATUS;
    }
    return status;
  }

  /**
   * 0:在线 1:离线
   */
  public Integer getOnlineStatus() {
    if(onlineStatus==null){
        return DEFAULT_ONLINESTATUS;
    }
    return onlineStatus;
  }

  /**
   * 用户发言状态： 0:没有发言 1:发言中
   */
  public Integer getSpeakStatus() {
    if(speak_status==null){
        return DEFAULT_SPEAK_STATUS;
    }
    return speak_status;
  }

  public boolean hasZuid() {
    return zuid!=null;
  }

  /**
   * 1: 正常  2:静音
   */
  public boolean hasStatus() {
    return status!=null;
  }

  /**
   * 0:在线 1:离线
   */
  public boolean hasOnlineStatus() {
    return onlineStatus!=null;
  }

  /**
   * 用户发言状态： 0:没有发言 1:发言中
   */
  public boolean hasSpeakStatus() {
    return speak_status!=null;
  }

  public static final class Builder extends Message.Builder<DiantaiAnchor, Builder> {
    public Long zuid;

    public Integer status;

    public Integer onlineStatus;

    public Integer speak_status;

    public Builder() {
    }

    public Builder setZuid(Long zuid) {
      this.zuid = zuid;
      return this;
    }

    /**
     * 1: 正常  2:静音
     */
    public Builder setStatus(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 0:在线 1:离线
     */
    public Builder setOnlineStatus(Integer onlineStatus) {
      this.onlineStatus = onlineStatus;
      return this;
    }

    /**
     * 用户发言状态： 0:没有发言 1:发言中
     */
    public Builder setSpeakStatus(Integer speak_status) {
      this.speak_status = speak_status;
      return this;
    }

    @Override
    public DiantaiAnchor build() {
      return new DiantaiAnchor(zuid, status, onlineStatus, speak_status, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_DiantaiAnchor extends ProtoAdapter<DiantaiAnchor> {
    public ProtoAdapter_DiantaiAnchor() {
      super(FieldEncoding.LENGTH_DELIMITED, DiantaiAnchor.class);
    }

    @Override
    public int encodedSize(DiantaiAnchor value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.zuid)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.status)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.onlineStatus)
          + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.speak_status)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, DiantaiAnchor value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.zuid);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.status);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.onlineStatus);
      ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.speak_status);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public DiantaiAnchor decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setZuid(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.setStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.setOnlineStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.setSpeakStatus(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public DiantaiAnchor redact(DiantaiAnchor value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
