// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 未读消息存储结构
 */
public final class Unread extends com.squareup.wire.Message<Unread, Unread.Builder> {
  public static final ProtoAdapter<Unread> ADAPTER = new ProtoAdapter_Unread();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_UNREAD_COUNT = 0;

  public static final Integer DEFAULT_MAX_UNREAD_SEQ = 0;

  public static final Long DEFAULT_USER = 0L;

  /**
   * 未读消息总条数
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer unread_count;

  /**
   * 当前未读消息中最的seq
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer max_unread_seq;

  /**
   * 未读消息内容,server需要排序
   */
  @WireField(
      tag = 3,
      adapter = "com.wali.live.proto.LiveMessage.Message#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Message> msg;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long user;

  public Unread(Integer unread_count, Integer max_unread_seq, List<Message> msg, Long user) {
    this(unread_count, max_unread_seq, msg, user, ByteString.EMPTY);
  }

  public Unread(Integer unread_count, Integer max_unread_seq, List<Message> msg, Long user,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.unread_count = unread_count;
    this.max_unread_seq = max_unread_seq;
    this.msg = Internal.immutableCopyOf("msg", msg);
    this.user = user;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.unread_count = unread_count;
    builder.max_unread_seq = max_unread_seq;
    builder.msg = Internal.copyOf("msg", msg);
    builder.user = user;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Unread)) return false;
    Unread o = (Unread) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(unread_count, o.unread_count)
        && Internal.equals(max_unread_seq, o.max_unread_seq)
        && msg.equals(o.msg)
        && Internal.equals(user, o.user);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (unread_count != null ? unread_count.hashCode() : 0);
      result = result * 37 + (max_unread_seq != null ? max_unread_seq.hashCode() : 0);
      result = result * 37 + msg.hashCode();
      result = result * 37 + (user != null ? user.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (unread_count != null) builder.append(", unread_count=").append(unread_count);
    if (max_unread_seq != null) builder.append(", max_unread_seq=").append(max_unread_seq);
    if (!msg.isEmpty()) builder.append(", msg=").append(msg);
    if (user != null) builder.append(", user=").append(user);
    return builder.replace(0, 2, "Unread{").append('}').toString();
  }

  public byte[] toByteArray() {
    return Unread.ADAPTER.encode(this);
  }

  public static final Unread parseFrom(byte[] data) throws IOException {
    Unread c = null;
       c = Unread.ADAPTER.decode(data);
    return c;
  }

  /**
   * 未读消息总条数
   */
  public Integer getUnreadCount() {
    if(unread_count==null){
        return DEFAULT_UNREAD_COUNT;
    }
    return unread_count;
  }

  /**
   * 当前未读消息中最的seq
   */
  public Integer getMaxUnreadSeq() {
    if(max_unread_seq==null){
        return DEFAULT_MAX_UNREAD_SEQ;
    }
    return max_unread_seq;
  }

  /**
   * 未读消息内容,server需要排序
   */
  public List<Message> getMsgList() {
    if(msg==null){
        return new java.util.ArrayList<Message>();
    }
    return msg;
  }

  public Long getUser() {
    if(user==null){
        return DEFAULT_USER;
    }
    return user;
  }

  /**
   * 未读消息总条数
   */
  public boolean hasUnreadCount() {
    return unread_count!=null;
  }

  /**
   * 当前未读消息中最的seq
   */
  public boolean hasMaxUnreadSeq() {
    return max_unread_seq!=null;
  }

  /**
   * 未读消息内容,server需要排序
   */
  public boolean hasMsgList() {
    return msg!=null;
  }

  public boolean hasUser() {
    return user!=null;
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<Unread, Builder> {
    public Integer unread_count;

    public Integer max_unread_seq;

    public List<Message> msg;

    public Long user;

    public Builder() {
      msg = Internal.newMutableList();
    }

    /**
     * 未读消息总条数
     */
    public Builder setUnreadCount(Integer unread_count) {
      this.unread_count = unread_count;
      return this;
    }

    /**
     * 当前未读消息中最的seq
     */
    public Builder setMaxUnreadSeq(Integer max_unread_seq) {
      this.max_unread_seq = max_unread_seq;
      return this;
    }

    /**
     * 未读消息内容,server需要排序
     */
    public Builder addAllMsg(List<Message> msg) {
      Internal.checkElementsNotNull(msg);
      this.msg = msg;
      return this;
    }

    public Builder setUser(Long user) {
      this.user = user;
      return this;
    }

    @Override
    public Unread build() {
      return new Unread(unread_count, max_unread_seq, msg, user, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Unread extends ProtoAdapter<Unread> {
    public ProtoAdapter_Unread() {
      super(FieldEncoding.LENGTH_DELIMITED, Unread.class);
    }

    @Override
    public int encodedSize(Unread value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.unread_count)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.max_unread_seq)
          + Message.ADAPTER.asRepeated().encodedSizeWithTag(3, value.msg)
          + ProtoAdapter.UINT64.encodedSizeWithTag(4, value.user)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Unread value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.unread_count);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.max_unread_seq);
      Message.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.msg);
      ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.user);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Unread decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUnreadCount(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setMaxUnreadSeq(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.msg.add(Message.ADAPTER.decode(reader)); break;
          case 4: builder.setUser(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Unread redact(Unread value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.msg, Message.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
