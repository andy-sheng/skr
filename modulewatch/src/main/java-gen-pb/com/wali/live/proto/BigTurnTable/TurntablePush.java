// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: BigTurnTable.proto
package com.wali.live.proto.BigTurnTable;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 大转盘直播间push
 * msg_type: 802  大转盘消息
 */
public final class TurntablePush extends Message<TurntablePush, TurntablePush.Builder> {
  public static final ProtoAdapter<TurntablePush> ADAPTER = new ProtoAdapter_TurntablePush();

  private static final long serialVersionUID = 0L;

  /**
   * 直播间大转盘内容
   */
  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.BigTurnTable.TurntableConfig#ADAPTER"
  )
  public final TurntableConfig turntableConfig;

  public TurntablePush(TurntableConfig turntableConfig) {
    this(turntableConfig, ByteString.EMPTY);
  }

  public TurntablePush(TurntableConfig turntableConfig, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.turntableConfig = turntableConfig;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.turntableConfig = turntableConfig;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TurntablePush)) return false;
    TurntablePush o = (TurntablePush) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(turntableConfig, o.turntableConfig);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (turntableConfig != null ? turntableConfig.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (turntableConfig != null) builder.append(", turntableConfig=").append(turntableConfig);
    return builder.replace(0, 2, "TurntablePush{").append('}').toString();
  }

  public byte[] toByteArray() {
    return TurntablePush.ADAPTER.encode(this);
  }

  public static final TurntablePush parseFrom(byte[] data) throws IOException {
    TurntablePush c = null;
       c = TurntablePush.ADAPTER.decode(data);
    return c;
  }

  /**
   * 直播间大转盘内容
   */
  public TurntableConfig getTurntableConfig() {
    if(turntableConfig==null){
        return new TurntableConfig.Builder().build();
    }
    return turntableConfig;
  }

  /**
   * 直播间大转盘内容
   */
  public boolean hasTurntableConfig() {
    return turntableConfig!=null;
  }

  public static final class Builder extends Message.Builder<TurntablePush, Builder> {
    public TurntableConfig turntableConfig;

    public Builder() {
    }

    /**
     * 直播间大转盘内容
     */
    public Builder setTurntableConfig(TurntableConfig turntableConfig) {
      this.turntableConfig = turntableConfig;
      return this;
    }

    @Override
    public TurntablePush build() {
      return new TurntablePush(turntableConfig, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_TurntablePush extends ProtoAdapter<TurntablePush> {
    public ProtoAdapter_TurntablePush() {
      super(FieldEncoding.LENGTH_DELIMITED, TurntablePush.class);
    }

    @Override
    public int encodedSize(TurntablePush value) {
      return TurntableConfig.ADAPTER.encodedSizeWithTag(1, value.turntableConfig)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, TurntablePush value) throws IOException {
      TurntableConfig.ADAPTER.encodeWithTag(writer, 1, value.turntableConfig);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public TurntablePush decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setTurntableConfig(TurntableConfig.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public TurntablePush redact(TurntablePush value) {
      Builder builder = value.newBuilder();
      if (builder.turntableConfig != null) builder.turntableConfig = TurntableConfig.ADAPTER.redact(builder.turntableConfig);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
