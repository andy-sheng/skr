// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class SyncRoomMessageResponse extends com.squareup.wire.Message<SyncRoomMessageResponse, SyncRoomMessageResponse.Builder> {
  public static final ProtoAdapter<SyncRoomMessageResponse> ADAPTER = new ProtoAdapter_SyncRoomMessageResponse();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RET = 0;

  public static final String DEFAULT_ERROR_MSG = "";

  public static final Long DEFAULT_CURRENT_SYNC_IMPORTANT_TS = 0L;

  public static final Long DEFAULT_CURRENT_SYNC_NORMAL_TS = 0L;

  public static final Integer DEFAULT_SYNC_INTERVAL = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer ret;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String error_msg;

  /**
   * 消息
   */
  @WireField(
      tag = 3,
      adapter = "com.wali.live.proto.LiveMessage.Message#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Message> important_room_msg;

  /**
   * 消息
   */
  @WireField(
      tag = 4,
      adapter = "com.wali.live.proto.LiveMessage.Message#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Message> normal_room_msg;

  /**
   * 下一次带上这个时间戳
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long current_sync_important_ts;

  /**
   * 下一次带上这个时间戳
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long current_sync_normal_ts;

  /**
   * 下一次拉取的间隔（秒）
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sync_interval;

  public SyncRoomMessageResponse(Integer ret, String error_msg, List<Message> important_room_msg,
      List<Message> normal_room_msg, Long current_sync_important_ts, Long current_sync_normal_ts,
      Integer sync_interval) {
    this(ret, error_msg, important_room_msg, normal_room_msg, current_sync_important_ts, current_sync_normal_ts, sync_interval, ByteString.EMPTY);
  }

  public SyncRoomMessageResponse(Integer ret, String error_msg, List<Message> important_room_msg,
      List<Message> normal_room_msg, Long current_sync_important_ts, Long current_sync_normal_ts,
      Integer sync_interval, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.ret = ret;
    this.error_msg = error_msg;
    this.important_room_msg = Internal.immutableCopyOf("important_room_msg", important_room_msg);
    this.normal_room_msg = Internal.immutableCopyOf("normal_room_msg", normal_room_msg);
    this.current_sync_important_ts = current_sync_important_ts;
    this.current_sync_normal_ts = current_sync_normal_ts;
    this.sync_interval = sync_interval;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.ret = ret;
    builder.error_msg = error_msg;
    builder.important_room_msg = Internal.copyOf("important_room_msg", important_room_msg);
    builder.normal_room_msg = Internal.copyOf("normal_room_msg", normal_room_msg);
    builder.current_sync_important_ts = current_sync_important_ts;
    builder.current_sync_normal_ts = current_sync_normal_ts;
    builder.sync_interval = sync_interval;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SyncRoomMessageResponse)) return false;
    SyncRoomMessageResponse o = (SyncRoomMessageResponse) other;
    return unknownFields().equals(o.unknownFields())
        && ret.equals(o.ret)
        && Internal.equals(error_msg, o.error_msg)
        && important_room_msg.equals(o.important_room_msg)
        && normal_room_msg.equals(o.normal_room_msg)
        && Internal.equals(current_sync_important_ts, o.current_sync_important_ts)
        && Internal.equals(current_sync_normal_ts, o.current_sync_normal_ts)
        && Internal.equals(sync_interval, o.sync_interval);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + ret.hashCode();
      result = result * 37 + (error_msg != null ? error_msg.hashCode() : 0);
      result = result * 37 + important_room_msg.hashCode();
      result = result * 37 + normal_room_msg.hashCode();
      result = result * 37 + (current_sync_important_ts != null ? current_sync_important_ts.hashCode() : 0);
      result = result * 37 + (current_sync_normal_ts != null ? current_sync_normal_ts.hashCode() : 0);
      result = result * 37 + (sync_interval != null ? sync_interval.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", ret=").append(ret);
    if (error_msg != null) builder.append(", error_msg=").append(error_msg);
    if (!important_room_msg.isEmpty()) builder.append(", important_room_msg=").append(important_room_msg);
    if (!normal_room_msg.isEmpty()) builder.append(", normal_room_msg=").append(normal_room_msg);
    if (current_sync_important_ts != null) builder.append(", current_sync_important_ts=").append(current_sync_important_ts);
    if (current_sync_normal_ts != null) builder.append(", current_sync_normal_ts=").append(current_sync_normal_ts);
    if (sync_interval != null) builder.append(", sync_interval=").append(sync_interval);
    return builder.replace(0, 2, "SyncRoomMessageResponse{").append('}').toString();
  }

  public static final SyncRoomMessageResponse parseFrom(byte[] data) throws IOException {
    SyncRoomMessageResponse c = null;
       c = SyncRoomMessageResponse.ADAPTER.decode(data);
    return c;
  }

  public Integer getRet() {
    if(ret==null){
        return DEFAULT_RET;
    }
    return ret;
  }

  public String getErrorMsg() {
    if(error_msg==null){
        return DEFAULT_ERROR_MSG;
    }
    return error_msg;
  }

  /**
   * 消息
   */
  public List<Message> getImportantRoomMsgList() {
    if(important_room_msg==null){
        return new java.util.ArrayList<Message>();
    }
    return important_room_msg;
  }

  /**
   * 消息
   */
  public List<Message> getNormalRoomMsgList() {
    if(normal_room_msg==null){
        return new java.util.ArrayList<Message>();
    }
    return normal_room_msg;
  }

  /**
   * 下一次带上这个时间戳
   */
  public Long getCurrentSyncImportantTs() {
    if(current_sync_important_ts==null){
        return DEFAULT_CURRENT_SYNC_IMPORTANT_TS;
    }
    return current_sync_important_ts;
  }

  /**
   * 下一次带上这个时间戳
   */
  public Long getCurrentSyncNormalTs() {
    if(current_sync_normal_ts==null){
        return DEFAULT_CURRENT_SYNC_NORMAL_TS;
    }
    return current_sync_normal_ts;
  }

  /**
   * 下一次拉取的间隔（秒）
   */
  public Integer getSyncInterval() {
    if(sync_interval==null){
        return DEFAULT_SYNC_INTERVAL;
    }
    return sync_interval;
  }

  public boolean hasRet() {
    return ret!=null;
  }

  public boolean hasErrorMsg() {
    return error_msg!=null;
  }

  /**
   * 消息
   */
  public boolean hasImportantRoomMsgList() {
    return important_room_msg!=null;
  }

  /**
   * 消息
   */
  public boolean hasNormalRoomMsgList() {
    return normal_room_msg!=null;
  }

  /**
   * 下一次带上这个时间戳
   */
  public boolean hasCurrentSyncImportantTs() {
    return current_sync_important_ts!=null;
  }

  /**
   * 下一次带上这个时间戳
   */
  public boolean hasCurrentSyncNormalTs() {
    return current_sync_normal_ts!=null;
  }

  /**
   * 下一次拉取的间隔（秒）
   */
  public boolean hasSyncInterval() {
    return sync_interval!=null;
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<SyncRoomMessageResponse, Builder> {
    public Integer ret;

    public String error_msg;

    public List<Message> important_room_msg;

    public List<Message> normal_room_msg;

    public Long current_sync_important_ts;

    public Long current_sync_normal_ts;

    public Integer sync_interval;

    public Builder() {
      important_room_msg = Internal.newMutableList();
      normal_room_msg = Internal.newMutableList();
    }

    public Builder setRet(Integer ret) {
      this.ret = ret;
      return this;
    }

    public Builder setErrorMsg(String error_msg) {
      this.error_msg = error_msg;
      return this;
    }

    /**
     * 消息
     */
    public Builder addAllImportantRoomMsg(List<Message> important_room_msg) {
      Internal.checkElementsNotNull(important_room_msg);
      this.important_room_msg = important_room_msg;
      return this;
    }

    /**
     * 消息
     */
    public Builder addAllNormalRoomMsg(List<Message> normal_room_msg) {
      Internal.checkElementsNotNull(normal_room_msg);
      this.normal_room_msg = normal_room_msg;
      return this;
    }

    /**
     * 下一次带上这个时间戳
     */
    public Builder setCurrentSyncImportantTs(Long current_sync_important_ts) {
      this.current_sync_important_ts = current_sync_important_ts;
      return this;
    }

    /**
     * 下一次带上这个时间戳
     */
    public Builder setCurrentSyncNormalTs(Long current_sync_normal_ts) {
      this.current_sync_normal_ts = current_sync_normal_ts;
      return this;
    }

    /**
     * 下一次拉取的间隔（秒）
     */
    public Builder setSyncInterval(Integer sync_interval) {
      this.sync_interval = sync_interval;
      return this;
    }

    @Override
    public SyncRoomMessageResponse build() {
      return new SyncRoomMessageResponse(ret, error_msg, important_room_msg, normal_room_msg, current_sync_important_ts, current_sync_normal_ts, sync_interval, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SyncRoomMessageResponse extends ProtoAdapter<SyncRoomMessageResponse> {
    public ProtoAdapter_SyncRoomMessageResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, SyncRoomMessageResponse.class);
    }

    @Override
    public int encodedSize(SyncRoomMessageResponse value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.ret)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.error_msg)
          + Message.ADAPTER.asRepeated().encodedSizeWithTag(3, value.important_room_msg)
          + Message.ADAPTER.asRepeated().encodedSizeWithTag(4, value.normal_room_msg)
          + ProtoAdapter.UINT64.encodedSizeWithTag(5, value.current_sync_important_ts)
          + ProtoAdapter.UINT64.encodedSizeWithTag(6, value.current_sync_normal_ts)
          + ProtoAdapter.UINT32.encodedSizeWithTag(7, value.sync_interval)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SyncRoomMessageResponse value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.ret);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.error_msg);
      Message.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.important_room_msg);
      Message.ADAPTER.asRepeated().encodeWithTag(writer, 4, value.normal_room_msg);
      ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.current_sync_important_ts);
      ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.current_sync_normal_ts);
      ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.sync_interval);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SyncRoomMessageResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRet(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setErrorMsg(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.important_room_msg.add(Message.ADAPTER.decode(reader)); break;
          case 4: builder.normal_room_msg.add(Message.ADAPTER.decode(reader)); break;
          case 5: builder.setCurrentSyncImportantTs(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.setCurrentSyncNormalTs(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.setSyncInterval(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SyncRoomMessageResponse redact(SyncRoomMessageResponse value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.important_room_msg, Message.ADAPTER);
      Internal.redactElements(builder.normal_room_msg, Message.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
