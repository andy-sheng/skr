// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 未关注人消息接收设置
 * cmd: zhibo.get.chatMsgSetting
 */
public final class SetChatMsgSettingRequest extends Message<SetChatMsgSettingRequest, SetChatMsgSettingRequest.Builder> {
  public static final ProtoAdapter<SetChatMsgSettingRequest> ADAPTER = new ProtoAdapter_SetChatMsgSettingRequest();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_UUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long uuid;

  @WireField(
      tag = 2,
      adapter = "com.wali.live.proto.LiveMessage.ChatMsgSetting#ADAPTER"
  )
  public final ChatMsgSetting setting;

  public SetChatMsgSettingRequest(Long uuid, ChatMsgSetting setting) {
    this(uuid, setting, ByteString.EMPTY);
  }

  public SetChatMsgSettingRequest(Long uuid, ChatMsgSetting setting, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.uuid = uuid;
    this.setting = setting;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.uuid = uuid;
    builder.setting = setting;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SetChatMsgSettingRequest)) return false;
    SetChatMsgSettingRequest o = (SetChatMsgSettingRequest) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(uuid, o.uuid)
        && Internal.equals(setting, o.setting);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (uuid != null ? uuid.hashCode() : 0);
      result = result * 37 + (setting != null ? setting.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (uuid != null) builder.append(", uuid=").append(uuid);
    if (setting != null) builder.append(", setting=").append(setting);
    return builder.replace(0, 2, "SetChatMsgSettingRequest{").append('}').toString();
  }

  public byte[] toByteArray() {
    return SetChatMsgSettingRequest.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<SetChatMsgSettingRequest, Builder> {
    public Long uuid;

    public ChatMsgSetting setting;

    public Builder() {
    }

    public Builder setUuid(Long uuid) {
      this.uuid = uuid;
      return this;
    }

    public Builder setSetting(ChatMsgSetting setting) {
      this.setting = setting;
      return this;
    }

    @Override
    public SetChatMsgSettingRequest build() {
      return new SetChatMsgSettingRequest(uuid, setting, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SetChatMsgSettingRequest extends ProtoAdapter<SetChatMsgSettingRequest> {
    public ProtoAdapter_SetChatMsgSettingRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, SetChatMsgSettingRequest.class);
    }

    @Override
    public int encodedSize(SetChatMsgSettingRequest value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.uuid)
          + ChatMsgSetting.ADAPTER.encodedSizeWithTag(2, value.setting)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SetChatMsgSettingRequest value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.uuid);
      ChatMsgSetting.ADAPTER.encodeWithTag(writer, 2, value.setting);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SetChatMsgSettingRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUuid(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.setSetting(ChatMsgSetting.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SetChatMsgSettingRequest redact(SetChatMsgSettingRequest value) {
      Builder builder = value.newBuilder();
      if (builder.setting != null) builder.setting = ChatMsgSetting.ADAPTER.redact(builder.setting);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
