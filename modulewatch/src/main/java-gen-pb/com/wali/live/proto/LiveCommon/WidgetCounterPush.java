// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveCommon.proto
package com.wali.live.proto.LiveCommon;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class WidgetCounterPush extends Message<WidgetCounterPush, WidgetCounterPush.Builder> {
  public static final ProtoAdapter<WidgetCounterPush> ADAPTER = new ProtoAdapter_WidgetCounterPush();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_WIDGETID = 0;

  public static final Long DEFAULT_COUNTERVALUE = 0L;

  /**
   * 运营位ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer widgetID;

  /**
   * 当前计数数值
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long counterValue;

  public WidgetCounterPush(Integer widgetID, Long counterValue) {
    this(widgetID, counterValue, ByteString.EMPTY);
  }

  public WidgetCounterPush(Integer widgetID, Long counterValue, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.widgetID = widgetID;
    this.counterValue = counterValue;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.widgetID = widgetID;
    builder.counterValue = counterValue;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof WidgetCounterPush)) return false;
    WidgetCounterPush o = (WidgetCounterPush) other;
    return unknownFields().equals(o.unknownFields())
        && widgetID.equals(o.widgetID)
        && Internal.equals(counterValue, o.counterValue);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + widgetID.hashCode();
      result = result * 37 + (counterValue != null ? counterValue.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", widgetID=").append(widgetID);
    if (counterValue != null) builder.append(", counterValue=").append(counterValue);
    return builder.replace(0, 2, "WidgetCounterPush{").append('}').toString();
  }

  public byte[] toByteArray() {
    return WidgetCounterPush.ADAPTER.encode(this);
  }

  public static final WidgetCounterPush parseFrom(byte[] data) throws IOException {
    WidgetCounterPush c = null;
       c = WidgetCounterPush.ADAPTER.decode(data);
    return c;
  }

  /**
   * 运营位ID
   */
  public Integer getWidgetID() {
    if(widgetID==null){
        return DEFAULT_WIDGETID;
    }
    return widgetID;
  }

  /**
   * 当前计数数值
   */
  public Long getCounterValue() {
    if(counterValue==null){
        return DEFAULT_COUNTERVALUE;
    }
    return counterValue;
  }

  /**
   * 运营位ID
   */
  public boolean hasWidgetID() {
    return widgetID!=null;
  }

  /**
   * 当前计数数值
   */
  public boolean hasCounterValue() {
    return counterValue!=null;
  }

  public static final class Builder extends Message.Builder<WidgetCounterPush, Builder> {
    public Integer widgetID;

    public Long counterValue;

    public Builder() {
    }

    /**
     * 运营位ID
     */
    public Builder setWidgetID(Integer widgetID) {
      this.widgetID = widgetID;
      return this;
    }

    /**
     * 当前计数数值
     */
    public Builder setCounterValue(Long counterValue) {
      this.counterValue = counterValue;
      return this;
    }

    @Override
    public WidgetCounterPush build() {
      return new WidgetCounterPush(widgetID, counterValue, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_WidgetCounterPush extends ProtoAdapter<WidgetCounterPush> {
    public ProtoAdapter_WidgetCounterPush() {
      super(FieldEncoding.LENGTH_DELIMITED, WidgetCounterPush.class);
    }

    @Override
    public int encodedSize(WidgetCounterPush value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.widgetID)
          + ProtoAdapter.INT64.encodedSizeWithTag(2, value.counterValue)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, WidgetCounterPush value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.widgetID);
      ProtoAdapter.INT64.encodeWithTag(writer, 2, value.counterValue);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public WidgetCounterPush decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setWidgetID(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setCounterValue(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public WidgetCounterPush redact(WidgetCounterPush value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
