// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveMessage.proto
package com.wali.live.proto.LiveMessage;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class TxtSchemeMessage extends Message<TxtSchemeMessage, TxtSchemeMessage.Builder> {
  public static final ProtoAdapter<TxtSchemeMessage> ADAPTER = new ProtoAdapter_TxtSchemeMessage();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_SCHEME_URL = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String scheme_url;

  public TxtSchemeMessage(String scheme_url) {
    this(scheme_url, ByteString.EMPTY);
  }

  public TxtSchemeMessage(String scheme_url, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.scheme_url = scheme_url;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.scheme_url = scheme_url;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TxtSchemeMessage)) return false;
    TxtSchemeMessage o = (TxtSchemeMessage) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(scheme_url, o.scheme_url);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (scheme_url != null ? scheme_url.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (scheme_url != null) builder.append(", scheme_url=").append(scheme_url);
    return builder.replace(0, 2, "TxtSchemeMessage{").append('}').toString();
  }

  public byte[] toByteArray() {
    return TxtSchemeMessage.ADAPTER.encode(this);
  }

  public static final TxtSchemeMessage parseFrom(byte[] data) throws IOException {
    TxtSchemeMessage c = null;
       c = TxtSchemeMessage.ADAPTER.decode(data);
    return c;
  }

  public String getSchemeUrl() {
    if(scheme_url==null){
        return DEFAULT_SCHEME_URL;
    }
    return scheme_url;
  }

  public boolean hasSchemeUrl() {
    return scheme_url!=null;
  }

  public static final class Builder extends Message.Builder<TxtSchemeMessage, Builder> {
    public String scheme_url;

    public Builder() {
    }

    public Builder setSchemeUrl(String scheme_url) {
      this.scheme_url = scheme_url;
      return this;
    }

    @Override
    public TxtSchemeMessage build() {
      return new TxtSchemeMessage(scheme_url, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_TxtSchemeMessage extends ProtoAdapter<TxtSchemeMessage> {
    public ProtoAdapter_TxtSchemeMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, TxtSchemeMessage.class);
    }

    @Override
    public int encodedSize(TxtSchemeMessage value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.scheme_url)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, TxtSchemeMessage value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.scheme_url);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public TxtSchemeMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setSchemeUrl(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public TxtSchemeMessage redact(TxtSchemeMessage value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
