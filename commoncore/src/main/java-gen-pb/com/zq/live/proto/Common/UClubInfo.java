// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Common.proto
package com.zq.live.proto.Common;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class UClubInfo extends Message<UClubInfo, UClubInfo.Builder> {
  public static final ProtoAdapter<UClubInfo> ADAPTER = new ProtoAdapter_UClubInfo();

  private static final long serialVersionUID = 0L;

  public static final EClubMemberRoleType DEFAULT_ROLETYPE = EClubMemberRoleType.ECMRT_Invalid;

  public static final Integer DEFAULT_CLUBID = 0;

  /**
   * 家族角色信息
   */
  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.Common.EClubMemberRoleType#ADAPTER"
  )
  private final EClubMemberRoleType roleType;

  /**
   * 自己的clubID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer clubID;

  public UClubInfo(EClubMemberRoleType roleType, Integer clubID) {
    this(roleType, clubID, ByteString.EMPTY);
  }

  public UClubInfo(EClubMemberRoleType roleType, Integer clubID, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.roleType = roleType;
    this.clubID = clubID;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.roleType = roleType;
    builder.clubID = clubID;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UClubInfo)) return false;
    UClubInfo o = (UClubInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(roleType, o.roleType)
        && Internal.equals(clubID, o.clubID);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (roleType != null ? roleType.hashCode() : 0);
      result = result * 37 + (clubID != null ? clubID.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (roleType != null) builder.append(", roleType=").append(roleType);
    if (clubID != null) builder.append(", clubID=").append(clubID);
    return builder.replace(0, 2, "UClubInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return UClubInfo.ADAPTER.encode(this);
  }

  public static final UClubInfo parseFrom(byte[] data) throws IOException {
    UClubInfo c = null;
       c = UClubInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 家族角色信息
   */
  public EClubMemberRoleType getRoleType() {
    if(roleType==null){
        return new EClubMemberRoleType.Builder().build();
    }
    return roleType;
  }

  /**
   * 自己的clubID
   */
  public Integer getClubID() {
    if(clubID==null){
        return DEFAULT_CLUBID;
    }
    return clubID;
  }

  /**
   * 家族角色信息
   */
  public boolean hasRoleType() {
    return roleType!=null;
  }

  /**
   * 自己的clubID
   */
  public boolean hasClubID() {
    return clubID!=null;
  }

  public static final class Builder extends Message.Builder<UClubInfo, Builder> {
    private EClubMemberRoleType roleType;

    private Integer clubID;

    public Builder() {
    }

    /**
     * 家族角色信息
     */
    public Builder setRoleType(EClubMemberRoleType roleType) {
      this.roleType = roleType;
      return this;
    }

    /**
     * 自己的clubID
     */
    public Builder setClubID(Integer clubID) {
      this.clubID = clubID;
      return this;
    }

    @Override
    public UClubInfo build() {
      return new UClubInfo(roleType, clubID, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UClubInfo extends ProtoAdapter<UClubInfo> {
    public ProtoAdapter_UClubInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, UClubInfo.class);
    }

    @Override
    public int encodedSize(UClubInfo value) {
      return EClubMemberRoleType.ADAPTER.encodedSizeWithTag(1, value.roleType)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.clubID)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UClubInfo value) throws IOException {
      EClubMemberRoleType.ADAPTER.encodeWithTag(writer, 1, value.roleType);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.clubID);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UClubInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.setRoleType(EClubMemberRoleType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 2: builder.setClubID(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UClubInfo redact(UClubInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
