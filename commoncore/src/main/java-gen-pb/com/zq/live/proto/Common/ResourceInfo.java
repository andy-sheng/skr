// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: common.proto
package com.zq.live.proto.Common;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ResourceInfo extends Message<ResourceInfo, ResourceInfo.Builder> {
  public static final ProtoAdapter<ResourceInfo> ADAPTER = new ProtoAdapter_ResourceInfo();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RESOURCEID = 0;

  public static final Integer DEFAULT_ITEMID = 0;

  public static final String DEFAULT_AUDIOURL = "";

  public static final String DEFAULT_MIDIURL = "";

  public static final Integer DEFAULT_SYSSCORE = 0;

  /**
   * 资源id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer resourceID;

  /**
   * 音乐条目id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer itemID;

  /**
   * 声音资源URL
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String audioURL;

  /**
   * 打分资源URL
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String midiURL;

  /**
   * 系统打分分值
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#SINT32"
  )
  private final Integer sysScore;

  public ResourceInfo(Integer resourceID, Integer itemID, String audioURL, String midiURL,
      Integer sysScore) {
    this(resourceID, itemID, audioURL, midiURL, sysScore, ByteString.EMPTY);
  }

  public ResourceInfo(Integer resourceID, Integer itemID, String audioURL, String midiURL,
      Integer sysScore, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.resourceID = resourceID;
    this.itemID = itemID;
    this.audioURL = audioURL;
    this.midiURL = midiURL;
    this.sysScore = sysScore;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.resourceID = resourceID;
    builder.itemID = itemID;
    builder.audioURL = audioURL;
    builder.midiURL = midiURL;
    builder.sysScore = sysScore;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ResourceInfo)) return false;
    ResourceInfo o = (ResourceInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(resourceID, o.resourceID)
        && Internal.equals(itemID, o.itemID)
        && Internal.equals(audioURL, o.audioURL)
        && Internal.equals(midiURL, o.midiURL)
        && Internal.equals(sysScore, o.sysScore);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (resourceID != null ? resourceID.hashCode() : 0);
      result = result * 37 + (itemID != null ? itemID.hashCode() : 0);
      result = result * 37 + (audioURL != null ? audioURL.hashCode() : 0);
      result = result * 37 + (midiURL != null ? midiURL.hashCode() : 0);
      result = result * 37 + (sysScore != null ? sysScore.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (resourceID != null) builder.append(", resourceID=").append(resourceID);
    if (itemID != null) builder.append(", itemID=").append(itemID);
    if (audioURL != null) builder.append(", audioURL=").append(audioURL);
    if (midiURL != null) builder.append(", midiURL=").append(midiURL);
    if (sysScore != null) builder.append(", sysScore=").append(sysScore);
    return builder.replace(0, 2, "ResourceInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ResourceInfo.ADAPTER.encode(this);
  }

  public static final ResourceInfo parseFrom(byte[] data) throws IOException {
    ResourceInfo c = null;
       c = ResourceInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 资源id
   */
  public Integer getResourceID() {
    if(resourceID==null){
        return DEFAULT_RESOURCEID;
    }
    return resourceID;
  }

  /**
   * 音乐条目id
   */
  public Integer getItemID() {
    if(itemID==null){
        return DEFAULT_ITEMID;
    }
    return itemID;
  }

  /**
   * 声音资源URL
   */
  public String getAudioURL() {
    if(audioURL==null){
        return DEFAULT_AUDIOURL;
    }
    return audioURL;
  }

  /**
   * 打分资源URL
   */
  public String getMidiURL() {
    if(midiURL==null){
        return DEFAULT_MIDIURL;
    }
    return midiURL;
  }

  /**
   * 系统打分分值
   */
  public Integer getSysScore() {
    if(sysScore==null){
        return DEFAULT_SYSSCORE;
    }
    return sysScore;
  }

  /**
   * 资源id
   */
  public boolean hasResourceID() {
    return resourceID!=null;
  }

  /**
   * 音乐条目id
   */
  public boolean hasItemID() {
    return itemID!=null;
  }

  /**
   * 声音资源URL
   */
  public boolean hasAudioURL() {
    return audioURL!=null;
  }

  /**
   * 打分资源URL
   */
  public boolean hasMidiURL() {
    return midiURL!=null;
  }

  /**
   * 系统打分分值
   */
  public boolean hasSysScore() {
    return sysScore!=null;
  }

  public static final class Builder extends Message.Builder<ResourceInfo, Builder> {
    private Integer resourceID;

    private Integer itemID;

    private String audioURL;

    private String midiURL;

    private Integer sysScore;

    public Builder() {
    }

    /**
     * 资源id
     */
    public Builder setResourceID(Integer resourceID) {
      this.resourceID = resourceID;
      return this;
    }

    /**
     * 音乐条目id
     */
    public Builder setItemID(Integer itemID) {
      this.itemID = itemID;
      return this;
    }

    /**
     * 声音资源URL
     */
    public Builder setAudioURL(String audioURL) {
      this.audioURL = audioURL;
      return this;
    }

    /**
     * 打分资源URL
     */
    public Builder setMidiURL(String midiURL) {
      this.midiURL = midiURL;
      return this;
    }

    /**
     * 系统打分分值
     */
    public Builder setSysScore(Integer sysScore) {
      this.sysScore = sysScore;
      return this;
    }

    @Override
    public ResourceInfo build() {
      return new ResourceInfo(resourceID, itemID, audioURL, midiURL, sysScore, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ResourceInfo extends ProtoAdapter<ResourceInfo> {
    public ProtoAdapter_ResourceInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, ResourceInfo.class);
    }

    @Override
    public int encodedSize(ResourceInfo value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.resourceID)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.itemID)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.audioURL)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.midiURL)
          + ProtoAdapter.SINT32.encodedSizeWithTag(5, value.sysScore)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ResourceInfo value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.resourceID);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.itemID);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.audioURL);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.midiURL);
      ProtoAdapter.SINT32.encodeWithTag(writer, 5, value.sysScore);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ResourceInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setResourceID(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setItemID(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.setAudioURL(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setMidiURL(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.setSysScore(ProtoAdapter.SINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ResourceInfo redact(ResourceInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
