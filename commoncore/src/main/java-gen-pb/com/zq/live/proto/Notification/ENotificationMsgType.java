// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Notification.proto
package com.zq.live.proto.Notification;

import com.squareup.wire.EnumAdapter;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

/**
 * ENotificationMsgType 房间消息类型
 */
public enum ENotificationMsgType implements WireEnum {
  /**
   * 未知消息
   */
  NM_UNKNOWN(0),

  /**
   * 关注类型
   */
  NM_FOLLOW(1),

  /**
   * 一唱到底邀请
   */
  NM_INVITE_STAND(2),

  /**
   * 系统警告
   */
  NM_SYS_WARNING_MSG(3),

  /**
   * 双人房邀请信令
   */
  NM_CR_INVITE(4),

  /**
   * 双人房进房信令
   */
  NM_CR_ENTER(5),

  /**
   * 双人房拒绝邀请信令
   */
  NM_CR_REFUSE(6);

  public static final ProtoAdapter<ENotificationMsgType> ADAPTER = new ProtoAdapter_ENotificationMsgType();

  private final int value;

  ENotificationMsgType(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static ENotificationMsgType fromValue(int value) {
    switch (value) {
      case 0: return NM_UNKNOWN;
      case 1: return NM_FOLLOW;
      case 2: return NM_INVITE_STAND;
      case 3: return NM_SYS_WARNING_MSG;
      case 4: return NM_CR_INVITE;
      case 5: return NM_CR_ENTER;
      case 6: return NM_CR_REFUSE;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }

  public static final class Builder {
    public ENotificationMsgType build() {
      return NM_UNKNOWN;
    }
  }

  private static final class ProtoAdapter_ENotificationMsgType extends EnumAdapter<ENotificationMsgType> {
    ProtoAdapter_ENotificationMsgType() {
      super(ENotificationMsgType.class);
    }

    @Override
    protected ENotificationMsgType fromValue(int value) {
      return ENotificationMsgType.fromValue(value);
    }
  }
}
