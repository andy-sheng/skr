// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: common.proto
package com.zq.live.proto.Common;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class GameMode extends Message<GameMode, GameMode.Builder> {
  public static final ProtoAdapter<GameMode> ADAPTER = new ProtoAdapter_GameMode();

  private static final long serialVersionUID = 0L;

  public static final EGameMode DEFAULT_MODE = EGameMode.ERM_UNKNOWN;

  public static final String DEFAULT_NAME = "";

  /**
   * 模式类别
   */
  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.Common.EGameMode#ADAPTER"
  )
  private final EGameMode mode;

  /**
   * 模式名字
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String name;

  public GameMode(EGameMode mode, String name) {
    this(mode, name, ByteString.EMPTY);
  }

  public GameMode(EGameMode mode, String name, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.mode = mode;
    this.name = name;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.mode = mode;
    builder.name = name;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GameMode)) return false;
    GameMode o = (GameMode) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(mode, o.mode)
        && Internal.equals(name, o.name);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (mode != null ? mode.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (mode != null) builder.append(", mode=").append(mode);
    if (name != null) builder.append(", name=").append(name);
    return builder.replace(0, 2, "GameMode{").append('}').toString();
  }

  public byte[] toByteArray() {
    return GameMode.ADAPTER.encode(this);
  }

  public static final GameMode parseFrom(byte[] data) throws IOException {
    GameMode c = null;
       c = GameMode.ADAPTER.decode(data);
    return c;
  }

  /**
   * 模式类别
   */
  public EGameMode getMode() {
    if(mode==null){
        return new EGameMode.Builder().build();
    }
    return mode;
  }

  /**
   * 模式名字
   */
  public String getName() {
    if(name==null){
        return DEFAULT_NAME;
    }
    return name;
  }

  /**
   * 模式类别
   */
  public boolean hasMode() {
    return mode!=null;
  }

  /**
   * 模式名字
   */
  public boolean hasName() {
    return name!=null;
  }

  public static final class Builder extends Message.Builder<GameMode, Builder> {
    private EGameMode mode;

    private String name;

    public Builder() {
    }

    /**
     * 模式类别
     */
    public Builder setMode(EGameMode mode) {
      this.mode = mode;
      return this;
    }

    /**
     * 模式名字
     */
    public Builder setName(String name) {
      this.name = name;
      return this;
    }

    @Override
    public GameMode build() {
      return new GameMode(mode, name, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GameMode extends ProtoAdapter<GameMode> {
    public ProtoAdapter_GameMode() {
      super(FieldEncoding.LENGTH_DELIMITED, GameMode.class);
    }

    @Override
    public int encodedSize(GameMode value) {
      return EGameMode.ADAPTER.encodedSizeWithTag(1, value.mode)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.name)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GameMode value) throws IOException {
      EGameMode.ADAPTER.encodeWithTag(writer, 1, value.mode);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GameMode decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.setMode(EGameMode.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 2: builder.setName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GameMode redact(GameMode value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
