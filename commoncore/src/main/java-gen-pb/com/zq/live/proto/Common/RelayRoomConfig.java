// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Common.proto
package com.zq.live.proto.Common;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class RelayRoomConfig extends Message<RelayRoomConfig, RelayRoomConfig.Builder> {
  public static final ProtoAdapter<RelayRoomConfig> ADAPTER = new ProtoAdapter_RelayRoomConfig();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_DURATIONTIMEMS = 0;

  public static final Integer DEFAULT_UNLOCKWAITTIMEMS = 0;

  /**
   * 房间持续时间
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#SINT32"
  )
  private final Integer durationTimeMs;

  /**
   * 可以解锁需要等待时间
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#SINT32"
  )
  private final Integer unLockWaitTimeMs;

  public RelayRoomConfig(Integer durationTimeMs, Integer unLockWaitTimeMs) {
    this(durationTimeMs, unLockWaitTimeMs, ByteString.EMPTY);
  }

  public RelayRoomConfig(Integer durationTimeMs, Integer unLockWaitTimeMs,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.durationTimeMs = durationTimeMs;
    this.unLockWaitTimeMs = unLockWaitTimeMs;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.durationTimeMs = durationTimeMs;
    builder.unLockWaitTimeMs = unLockWaitTimeMs;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RelayRoomConfig)) return false;
    RelayRoomConfig o = (RelayRoomConfig) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(durationTimeMs, o.durationTimeMs)
        && Internal.equals(unLockWaitTimeMs, o.unLockWaitTimeMs);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (durationTimeMs != null ? durationTimeMs.hashCode() : 0);
      result = result * 37 + (unLockWaitTimeMs != null ? unLockWaitTimeMs.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (durationTimeMs != null) builder.append(", durationTimeMs=").append(durationTimeMs);
    if (unLockWaitTimeMs != null) builder.append(", unLockWaitTimeMs=").append(unLockWaitTimeMs);
    return builder.replace(0, 2, "RelayRoomConfig{").append('}').toString();
  }

  public byte[] toByteArray() {
    return RelayRoomConfig.ADAPTER.encode(this);
  }

  public static final RelayRoomConfig parseFrom(byte[] data) throws IOException {
    RelayRoomConfig c = null;
       c = RelayRoomConfig.ADAPTER.decode(data);
    return c;
  }

  /**
   * 房间持续时间
   */
  public Integer getDurationTimeMs() {
    if(durationTimeMs==null){
        return DEFAULT_DURATIONTIMEMS;
    }
    return durationTimeMs;
  }

  /**
   * 可以解锁需要等待时间
   */
  public Integer getUnLockWaitTimeMs() {
    if(unLockWaitTimeMs==null){
        return DEFAULT_UNLOCKWAITTIMEMS;
    }
    return unLockWaitTimeMs;
  }

  /**
   * 房间持续时间
   */
  public boolean hasDurationTimeMs() {
    return durationTimeMs!=null;
  }

  /**
   * 可以解锁需要等待时间
   */
  public boolean hasUnLockWaitTimeMs() {
    return unLockWaitTimeMs!=null;
  }

  public static final class Builder extends Message.Builder<RelayRoomConfig, Builder> {
    private Integer durationTimeMs;

    private Integer unLockWaitTimeMs;

    public Builder() {
    }

    /**
     * 房间持续时间
     */
    public Builder setDurationTimeMs(Integer durationTimeMs) {
      this.durationTimeMs = durationTimeMs;
      return this;
    }

    /**
     * 可以解锁需要等待时间
     */
    public Builder setUnLockWaitTimeMs(Integer unLockWaitTimeMs) {
      this.unLockWaitTimeMs = unLockWaitTimeMs;
      return this;
    }

    @Override
    public RelayRoomConfig build() {
      return new RelayRoomConfig(durationTimeMs, unLockWaitTimeMs, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_RelayRoomConfig extends ProtoAdapter<RelayRoomConfig> {
    public ProtoAdapter_RelayRoomConfig() {
      super(FieldEncoding.LENGTH_DELIMITED, RelayRoomConfig.class);
    }

    @Override
    public int encodedSize(RelayRoomConfig value) {
      return ProtoAdapter.SINT32.encodedSizeWithTag(1, value.durationTimeMs)
          + ProtoAdapter.SINT32.encodedSizeWithTag(2, value.unLockWaitTimeMs)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, RelayRoomConfig value) throws IOException {
      ProtoAdapter.SINT32.encodeWithTag(writer, 1, value.durationTimeMs);
      ProtoAdapter.SINT32.encodeWithTag(writer, 2, value.unLockWaitTimeMs);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public RelayRoomConfig decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setDurationTimeMs(ProtoAdapter.SINT32.decode(reader)); break;
          case 2: builder.setUnLockWaitTimeMs(ProtoAdapter.SINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public RelayRoomConfig redact(RelayRoomConfig value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
