// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Notification.proto
package com.zq.live.proto.Notification;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class GiftReceivesMsg extends Message<GiftReceivesMsg, GiftReceivesMsg.Builder> {
  public static final ProtoAdapter<GiftReceivesMsg> ADAPTER = new ProtoAdapter_GiftReceivesMsg();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_SENDER = 0;

  public static final Integer DEFAULT_RECEIVER = 0;

  public static final Integer DEFAULT_PLATFORM = 0;

  public static final Integer DEFAULT_GIFTID = 0;

  public static final Integer DEFAULT_AMOUNT = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer sender;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer receiver;

  /**
   * 收礼者平台
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer platform;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer giftID;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer amount;

  public GiftReceivesMsg(Integer sender, Integer receiver, Integer platform, Integer giftID,
      Integer amount) {
    this(sender, receiver, platform, giftID, amount, ByteString.EMPTY);
  }

  public GiftReceivesMsg(Integer sender, Integer receiver, Integer platform, Integer giftID,
      Integer amount, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.sender = sender;
    this.receiver = receiver;
    this.platform = platform;
    this.giftID = giftID;
    this.amount = amount;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.sender = sender;
    builder.receiver = receiver;
    builder.platform = platform;
    builder.giftID = giftID;
    builder.amount = amount;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GiftReceivesMsg)) return false;
    GiftReceivesMsg o = (GiftReceivesMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(sender, o.sender)
        && Internal.equals(receiver, o.receiver)
        && Internal.equals(platform, o.platform)
        && Internal.equals(giftID, o.giftID)
        && Internal.equals(amount, o.amount);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (sender != null ? sender.hashCode() : 0);
      result = result * 37 + (receiver != null ? receiver.hashCode() : 0);
      result = result * 37 + (platform != null ? platform.hashCode() : 0);
      result = result * 37 + (giftID != null ? giftID.hashCode() : 0);
      result = result * 37 + (amount != null ? amount.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (sender != null) builder.append(", sender=").append(sender);
    if (receiver != null) builder.append(", receiver=").append(receiver);
    if (platform != null) builder.append(", platform=").append(platform);
    if (giftID != null) builder.append(", giftID=").append(giftID);
    if (amount != null) builder.append(", amount=").append(amount);
    return builder.replace(0, 2, "GiftReceivesMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return GiftReceivesMsg.ADAPTER.encode(this);
  }

  public static final GiftReceivesMsg parseFrom(byte[] data) throws IOException {
    GiftReceivesMsg c = null;
       c = GiftReceivesMsg.ADAPTER.decode(data);
    return c;
  }

  public Integer getSender() {
    if(sender==null){
        return DEFAULT_SENDER;
    }
    return sender;
  }

  public Integer getReceiver() {
    if(receiver==null){
        return DEFAULT_RECEIVER;
    }
    return receiver;
  }

  /**
   * 收礼者平台
   */
  public Integer getPlatform() {
    if(platform==null){
        return DEFAULT_PLATFORM;
    }
    return platform;
  }

  public Integer getGiftID() {
    if(giftID==null){
        return DEFAULT_GIFTID;
    }
    return giftID;
  }

  public Integer getAmount() {
    if(amount==null){
        return DEFAULT_AMOUNT;
    }
    return amount;
  }

  public boolean hasSender() {
    return sender!=null;
  }

  public boolean hasReceiver() {
    return receiver!=null;
  }

  /**
   * 收礼者平台
   */
  public boolean hasPlatform() {
    return platform!=null;
  }

  public boolean hasGiftID() {
    return giftID!=null;
  }

  public boolean hasAmount() {
    return amount!=null;
  }

  public static final class Builder extends Message.Builder<GiftReceivesMsg, Builder> {
    private Integer sender;

    private Integer receiver;

    private Integer platform;

    private Integer giftID;

    private Integer amount;

    public Builder() {
    }

    public Builder setSender(Integer sender) {
      this.sender = sender;
      return this;
    }

    public Builder setReceiver(Integer receiver) {
      this.receiver = receiver;
      return this;
    }

    /**
     * 收礼者平台
     */
    public Builder setPlatform(Integer platform) {
      this.platform = platform;
      return this;
    }

    public Builder setGiftID(Integer giftID) {
      this.giftID = giftID;
      return this;
    }

    public Builder setAmount(Integer amount) {
      this.amount = amount;
      return this;
    }

    @Override
    public GiftReceivesMsg build() {
      return new GiftReceivesMsg(sender, receiver, platform, giftID, amount, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GiftReceivesMsg extends ProtoAdapter<GiftReceivesMsg> {
    public ProtoAdapter_GiftReceivesMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, GiftReceivesMsg.class);
    }

    @Override
    public int encodedSize(GiftReceivesMsg value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.sender)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.receiver)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.platform)
          + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.giftID)
          + ProtoAdapter.UINT32.encodedSizeWithTag(5, value.amount)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GiftReceivesMsg value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.sender);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.receiver);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.platform);
      ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.giftID);
      ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.amount);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GiftReceivesMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setSender(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setReceiver(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.setPlatform(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.setGiftID(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.setAmount(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GiftReceivesMsg redact(GiftReceivesMsg value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
