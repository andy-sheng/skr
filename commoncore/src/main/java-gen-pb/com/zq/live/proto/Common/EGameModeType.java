// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: common.proto
package com.zq.live.proto.Common;

import com.squareup.wire.EnumAdapter;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

/**
 * 游戏模式
 */
public enum EGameModeType implements WireEnum {
  /**
   * 未知模式
   */
  UnknownMode(0),

  /**
   * [废弃]:经典排位模式
   */
  ClassicRankMode(1),

  /**
   * [废弃]:娱乐模式
   */
  FunnyMode(2),

  /**
   * [正常]:一站到底模式
   */
  StandMode(3),

  /**
   * [废弃]:排位v2模式
   */
  ClassicRankV2Mode(4),

  /**
   * [废弃]:一场到底V2模式
   */
  StandV2Mode(5),

  /**
   * [正常]:排位赛模式
   */
  RaceMode(6),

  /**
   * [废弃]:歌单战模式
   */
  StandPlaybookMode(7),

  /**
   * [废弃]:排麦房模式（小K房）
   */
  MicMode(8),

  /**
   * [废弃]:双人畅聊模式
   */
  MagpieMode(9),

  /**
   * [正常]:合唱模式 (接唱房)
   */
  RelayMode(10),

  /**
   * [正常]:派对模式 (派对房)
   */
  PartyMode(11),

  /**
   * [正常]:2v2团战模式
   */
  BattleMode(12);

  public static final ProtoAdapter<EGameModeType> ADAPTER = new ProtoAdapter_EGameModeType();

  private final int value;

  EGameModeType(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static EGameModeType fromValue(int value) {
    switch (value) {
      case 0: return UnknownMode;
      case 1: return ClassicRankMode;
      case 2: return FunnyMode;
      case 3: return StandMode;
      case 4: return ClassicRankV2Mode;
      case 5: return StandV2Mode;
      case 6: return RaceMode;
      case 7: return StandPlaybookMode;
      case 8: return MicMode;
      case 9: return MagpieMode;
      case 10: return RelayMode;
      case 11: return PartyMode;
      case 12: return BattleMode;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }

  public static final class Builder {
    public EGameModeType build() {
      return UnknownMode;
    }
  }

  private static final class ProtoAdapter_EGameModeType extends EnumAdapter<EGameModeType> {
    ProtoAdapter_EGameModeType() {
      super(EGameModeType.class);
    }

    @Override
    protected EGameModeType fromValue(int value) {
      return EGameModeType.fromValue(value);
    }
  }
}
