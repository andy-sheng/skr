// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Common.proto
package com.zq.live.proto.Common;

import com.squareup.wire.EnumAdapter;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

/**
 * 一唱到底playType
 */
public enum StandPlayType implements WireEnum {
  /**
   * 无效
   */
  PT_INVALID_TYPE(0),

  /**
   * PK玩法
   */
  PT_SPK_TYPE(1),

  /**
   * 合唱玩法
   */
  PT_CHO_TYPE(2);

  public static final ProtoAdapter<StandPlayType> ADAPTER = new ProtoAdapter_StandPlayType();

  private final int value;

  StandPlayType(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static StandPlayType fromValue(int value) {
    switch (value) {
      case 0: return PT_INVALID_TYPE;
      case 1: return PT_SPK_TYPE;
      case 2: return PT_CHO_TYPE;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }

  public static final class Builder {
    public StandPlayType build() {
      return PT_INVALID_TYPE;
    }
  }

  private static final class ProtoAdapter_StandPlayType extends EnumAdapter<StandPlayType> {
    ProtoAdapter_StandPlayType() {
      super(StandPlayType.class);
    }

    @Override
    protected StandPlayType fromValue(int value) {
      return StandPlayType.fromValue(value);
    }
  }
}
