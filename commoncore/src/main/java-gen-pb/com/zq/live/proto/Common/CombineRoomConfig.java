// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Common.proto
package com.zq.live.proto.Common;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class CombineRoomConfig extends Message<CombineRoomConfig, CombineRoomConfig.Builder> {
  public static final ProtoAdapter<CombineRoomConfig> ADAPTER = new ProtoAdapter_CombineRoomConfig();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_DURATIONTIMEMS = 0;

  public static final String DEFAULT_ROOMSIGNATURE = "";

  public static final String DEFAULT_MASKUSERNICKNAME = "";

  public static final String DEFAULT_MASKUSERAVATAR = "";

  /**
   * 房间持续时间（4000ms）
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  private final Integer durationTimeMs;

  /**
   * 房间描述签名
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String roomSignature;

  /**
   * 隐藏的用户昵称
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String maskUserNickname;

  /**
   * 隐藏的用户头像
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String maskUserAvatar;

  public CombineRoomConfig(Integer durationTimeMs, String roomSignature, String maskUserNickname,
      String maskUserAvatar) {
    this(durationTimeMs, roomSignature, maskUserNickname, maskUserAvatar, ByteString.EMPTY);
  }

  public CombineRoomConfig(Integer durationTimeMs, String roomSignature, String maskUserNickname,
      String maskUserAvatar, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.durationTimeMs = durationTimeMs;
    this.roomSignature = roomSignature;
    this.maskUserNickname = maskUserNickname;
    this.maskUserAvatar = maskUserAvatar;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.durationTimeMs = durationTimeMs;
    builder.roomSignature = roomSignature;
    builder.maskUserNickname = maskUserNickname;
    builder.maskUserAvatar = maskUserAvatar;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CombineRoomConfig)) return false;
    CombineRoomConfig o = (CombineRoomConfig) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(durationTimeMs, o.durationTimeMs)
        && Internal.equals(roomSignature, o.roomSignature)
        && Internal.equals(maskUserNickname, o.maskUserNickname)
        && Internal.equals(maskUserAvatar, o.maskUserAvatar);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (durationTimeMs != null ? durationTimeMs.hashCode() : 0);
      result = result * 37 + (roomSignature != null ? roomSignature.hashCode() : 0);
      result = result * 37 + (maskUserNickname != null ? maskUserNickname.hashCode() : 0);
      result = result * 37 + (maskUserAvatar != null ? maskUserAvatar.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (durationTimeMs != null) builder.append(", durationTimeMs=").append(durationTimeMs);
    if (roomSignature != null) builder.append(", roomSignature=").append(roomSignature);
    if (maskUserNickname != null) builder.append(", maskUserNickname=").append(maskUserNickname);
    if (maskUserAvatar != null) builder.append(", maskUserAvatar=").append(maskUserAvatar);
    return builder.replace(0, 2, "CombineRoomConfig{").append('}').toString();
  }

  public byte[] toByteArray() {
    return CombineRoomConfig.ADAPTER.encode(this);
  }

  public static final CombineRoomConfig parseFrom(byte[] data) throws IOException {
    CombineRoomConfig c = null;
       c = CombineRoomConfig.ADAPTER.decode(data);
    return c;
  }

  /**
   * 房间持续时间（4000ms）
   */
  public Integer getDurationTimeMs() {
    if(durationTimeMs==null){
        return DEFAULT_DURATIONTIMEMS;
    }
    return durationTimeMs;
  }

  /**
   * 房间描述签名
   */
  public String getRoomSignature() {
    if(roomSignature==null){
        return DEFAULT_ROOMSIGNATURE;
    }
    return roomSignature;
  }

  /**
   * 隐藏的用户昵称
   */
  public String getMaskUserNickname() {
    if(maskUserNickname==null){
        return DEFAULT_MASKUSERNICKNAME;
    }
    return maskUserNickname;
  }

  /**
   * 隐藏的用户头像
   */
  public String getMaskUserAvatar() {
    if(maskUserAvatar==null){
        return DEFAULT_MASKUSERAVATAR;
    }
    return maskUserAvatar;
  }

  /**
   * 房间持续时间（4000ms）
   */
  public boolean hasDurationTimeMs() {
    return durationTimeMs!=null;
  }

  /**
   * 房间描述签名
   */
  public boolean hasRoomSignature() {
    return roomSignature!=null;
  }

  /**
   * 隐藏的用户昵称
   */
  public boolean hasMaskUserNickname() {
    return maskUserNickname!=null;
  }

  /**
   * 隐藏的用户头像
   */
  public boolean hasMaskUserAvatar() {
    return maskUserAvatar!=null;
  }

  public static final class Builder extends Message.Builder<CombineRoomConfig, Builder> {
    private Integer durationTimeMs;

    private String roomSignature;

    private String maskUserNickname;

    private String maskUserAvatar;

    public Builder() {
    }

    /**
     * 房间持续时间（4000ms）
     */
    public Builder setDurationTimeMs(Integer durationTimeMs) {
      this.durationTimeMs = durationTimeMs;
      return this;
    }

    /**
     * 房间描述签名
     */
    public Builder setRoomSignature(String roomSignature) {
      this.roomSignature = roomSignature;
      return this;
    }

    /**
     * 隐藏的用户昵称
     */
    public Builder setMaskUserNickname(String maskUserNickname) {
      this.maskUserNickname = maskUserNickname;
      return this;
    }

    /**
     * 隐藏的用户头像
     */
    public Builder setMaskUserAvatar(String maskUserAvatar) {
      this.maskUserAvatar = maskUserAvatar;
      return this;
    }

    @Override
    public CombineRoomConfig build() {
      return new CombineRoomConfig(durationTimeMs, roomSignature, maskUserNickname, maskUserAvatar, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_CombineRoomConfig extends ProtoAdapter<CombineRoomConfig> {
    public ProtoAdapter_CombineRoomConfig() {
      super(FieldEncoding.LENGTH_DELIMITED, CombineRoomConfig.class);
    }

    @Override
    public int encodedSize(CombineRoomConfig value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.durationTimeMs)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.roomSignature)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.maskUserNickname)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.maskUserAvatar)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, CombineRoomConfig value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.durationTimeMs);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.roomSignature);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.maskUserNickname);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.maskUserAvatar);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public CombineRoomConfig decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setDurationTimeMs(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setRoomSignature(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.setMaskUserNickname(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setMaskUserAvatar(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public CombineRoomConfig redact(CombineRoomConfig value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
