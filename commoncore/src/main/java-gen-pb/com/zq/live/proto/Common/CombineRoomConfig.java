// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Common.proto
package com.zq.live.proto.Common;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;

import java.io.IOException;

import okio.ByteString;

public final class CombineRoomConfig extends Message<CombineRoomConfig, CombineRoomConfig.Builder> {
  public static final ProtoAdapter<CombineRoomConfig> ADAPTER = new ProtoAdapter_CombineRoomConfig();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_DURATIONTIMEMS = 0;

  public static final String DEFAULT_MASKMALEAVATAR = "";

  public static final String DEFAULT_MASKFEMALEAVATAR = "";

  public static final String DEFAULT_ROOMSIGNATURE = "";

  /**
   * 房间持续时间（4000ms）
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#SINT32"
  )
  private final Integer durationTimeMs;

  /**
   * 隐藏的男性用户头像
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String maskMaleAvatar;

  /**
   * 隐藏的女性用户头像
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String maskFemaleAvatar;

  /**
   * 房间描述签名
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  private final String roomSignature;

  public CombineRoomConfig(Integer durationTimeMs, String maskMaleAvatar, String maskFemaleAvatar,
      String roomSignature) {
    this(durationTimeMs, maskMaleAvatar, maskFemaleAvatar, roomSignature, ByteString.EMPTY);
  }

  public CombineRoomConfig(Integer durationTimeMs, String maskMaleAvatar, String maskFemaleAvatar,
      String roomSignature, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.durationTimeMs = durationTimeMs;
    this.maskMaleAvatar = maskMaleAvatar;
    this.maskFemaleAvatar = maskFemaleAvatar;
    this.roomSignature = roomSignature;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.durationTimeMs = durationTimeMs;
    builder.maskMaleAvatar = maskMaleAvatar;
    builder.maskFemaleAvatar = maskFemaleAvatar;
    builder.roomSignature = roomSignature;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CombineRoomConfig)) return false;
    CombineRoomConfig o = (CombineRoomConfig) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(durationTimeMs, o.durationTimeMs)
        && Internal.equals(maskMaleAvatar, o.maskMaleAvatar)
        && Internal.equals(maskFemaleAvatar, o.maskFemaleAvatar)
        && Internal.equals(roomSignature, o.roomSignature);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (durationTimeMs != null ? durationTimeMs.hashCode() : 0);
      result = result * 37 + (maskMaleAvatar != null ? maskMaleAvatar.hashCode() : 0);
      result = result * 37 + (maskFemaleAvatar != null ? maskFemaleAvatar.hashCode() : 0);
      result = result * 37 + (roomSignature != null ? roomSignature.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (durationTimeMs != null) builder.append(", durationTimeMs=").append(durationTimeMs);
    if (maskMaleAvatar != null) builder.append(", maskMaleAvatar=").append(maskMaleAvatar);
    if (maskFemaleAvatar != null) builder.append(", maskFemaleAvatar=").append(maskFemaleAvatar);
    if (roomSignature != null) builder.append(", roomSignature=").append(roomSignature);
    return builder.replace(0, 2, "CombineRoomConfig{").append('}').toString();
  }

  public byte[] toByteArray() {
    return CombineRoomConfig.ADAPTER.encode(this);
  }

  public static final CombineRoomConfig parseFrom(byte[] data) throws IOException {
    CombineRoomConfig c = null;
       c = CombineRoomConfig.ADAPTER.decode(data);
    return c;
  }

  /**
   * 房间持续时间（4000ms）
   */
  public Integer getDurationTimeMs() {
    if(durationTimeMs==null){
        return DEFAULT_DURATIONTIMEMS;
    }
    return durationTimeMs;
  }

  /**
   * 隐藏的男性用户头像
   */
  public String getMaskMaleAvatar() {
    if(maskMaleAvatar==null){
        return DEFAULT_MASKMALEAVATAR;
    }
    return maskMaleAvatar;
  }

  /**
   * 隐藏的女性用户头像
   */
  public String getMaskFemaleAvatar() {
    if(maskFemaleAvatar==null){
        return DEFAULT_MASKFEMALEAVATAR;
    }
    return maskFemaleAvatar;
  }

  /**
   * 房间描述签名
   */
  public String getRoomSignature() {
    if(roomSignature==null){
        return DEFAULT_ROOMSIGNATURE;
    }
    return roomSignature;
  }

  /**
   * 房间持续时间（4000ms）
   */
  public boolean hasDurationTimeMs() {
    return durationTimeMs!=null;
  }

  /**
   * 隐藏的男性用户头像
   */
  public boolean hasMaskMaleAvatar() {
    return maskMaleAvatar!=null;
  }

  /**
   * 隐藏的女性用户头像
   */
  public boolean hasMaskFemaleAvatar() {
    return maskFemaleAvatar!=null;
  }

  /**
   * 房间描述签名
   */
  public boolean hasRoomSignature() {
    return roomSignature!=null;
  }

  public static final class Builder extends Message.Builder<CombineRoomConfig, Builder> {
    private Integer durationTimeMs;

    private String maskMaleAvatar;

    private String maskFemaleAvatar;

    private String roomSignature;

    public Builder() {
    }

    /**
     * 房间持续时间（4000ms）
     */
    public Builder setDurationTimeMs(Integer durationTimeMs) {
      this.durationTimeMs = durationTimeMs;
      return this;
    }

    /**
     * 隐藏的男性用户头像
     */
    public Builder setMaskMaleAvatar(String maskMaleAvatar) {
      this.maskMaleAvatar = maskMaleAvatar;
      return this;
    }

    /**
     * 隐藏的女性用户头像
     */
    public Builder setMaskFemaleAvatar(String maskFemaleAvatar) {
      this.maskFemaleAvatar = maskFemaleAvatar;
      return this;
    }

    /**
     * 房间描述签名
     */
    public Builder setRoomSignature(String roomSignature) {
      this.roomSignature = roomSignature;
      return this;
    }

    @Override
    public CombineRoomConfig build() {
      return new CombineRoomConfig(durationTimeMs, maskMaleAvatar, maskFemaleAvatar, roomSignature, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_CombineRoomConfig extends ProtoAdapter<CombineRoomConfig> {
    public ProtoAdapter_CombineRoomConfig() {
      super(FieldEncoding.LENGTH_DELIMITED, CombineRoomConfig.class);
    }

    @Override
    public int encodedSize(CombineRoomConfig value) {
      return ProtoAdapter.SINT32.encodedSizeWithTag(1, value.durationTimeMs)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.maskMaleAvatar)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.maskFemaleAvatar)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.roomSignature)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, CombineRoomConfig value) throws IOException {
      ProtoAdapter.SINT32.encodeWithTag(writer, 1, value.durationTimeMs);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.maskMaleAvatar);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.maskFemaleAvatar);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.roomSignature);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public CombineRoomConfig decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setDurationTimeMs(ProtoAdapter.SINT32.decode(reader)); break;
          case 2: builder.setMaskMaleAvatar(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.setMaskFemaleAvatar(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setRoomSignature(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public CombineRoomConfig redact(CombineRoomConfig value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
