// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Notification.proto
package com.zq.live.proto.Notification;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import com.zq.live.proto.Common.UserClubInfo;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ClubInfoChangeMsg extends Message<ClubInfoChangeMsg, ClubInfoChangeMsg.Builder> {
  public static final ProtoAdapter<ClubInfoChangeMsg> ADAPTER = new ProtoAdapter_ClubInfoChangeMsg();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.Common.UserClubInfo#ADAPTER"
  )
  private final UserClubInfo clubInfo;

  public ClubInfoChangeMsg(UserClubInfo clubInfo) {
    this(clubInfo, ByteString.EMPTY);
  }

  public ClubInfoChangeMsg(UserClubInfo clubInfo, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.clubInfo = clubInfo;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.clubInfo = clubInfo;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ClubInfoChangeMsg)) return false;
    ClubInfoChangeMsg o = (ClubInfoChangeMsg) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(clubInfo, o.clubInfo);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (clubInfo != null ? clubInfo.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (clubInfo != null) builder.append(", clubInfo=").append(clubInfo);
    return builder.replace(0, 2, "ClubInfoChangeMsg{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ClubInfoChangeMsg.ADAPTER.encode(this);
  }

  public static final ClubInfoChangeMsg parseFrom(byte[] data) throws IOException {
    ClubInfoChangeMsg c = null;
       c = ClubInfoChangeMsg.ADAPTER.decode(data);
    return c;
  }

  public UserClubInfo getClubInfo() {
    if(clubInfo==null){
        return new UserClubInfo.Builder().build();
    }
    return clubInfo;
  }

  public boolean hasClubInfo() {
    return clubInfo!=null;
  }

  public static final class Builder extends Message.Builder<ClubInfoChangeMsg, Builder> {
    private UserClubInfo clubInfo;

    public Builder() {
    }

    public Builder setClubInfo(UserClubInfo clubInfo) {
      this.clubInfo = clubInfo;
      return this;
    }

    @Override
    public ClubInfoChangeMsg build() {
      return new ClubInfoChangeMsg(clubInfo, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ClubInfoChangeMsg extends ProtoAdapter<ClubInfoChangeMsg> {
    public ProtoAdapter_ClubInfoChangeMsg() {
      super(FieldEncoding.LENGTH_DELIMITED, ClubInfoChangeMsg.class);
    }

    @Override
    public int encodedSize(ClubInfoChangeMsg value) {
      return UserClubInfo.ADAPTER.encodedSizeWithTag(1, value.clubInfo)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ClubInfoChangeMsg value) throws IOException {
      UserClubInfo.ADAPTER.encodeWithTag(writer, 1, value.clubInfo);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ClubInfoChangeMsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setClubInfo(UserClubInfo.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ClubInfoChangeMsg redact(ClubInfoChangeMsg value) {
      Builder builder = value.newBuilder();
      if (builder.clubInfo != null) builder.clubInfo = UserClubInfo.ADAPTER.redact(builder.clubInfo);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
