// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: common.proto
package com.zq.live.proto.Common;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class HonorInfo extends Message<HonorInfo, HonorInfo.Builder> {
  public static final ProtoAdapter<HonorInfo> ADAPTER = new ProtoAdapter_HonorInfo();

  private static final long serialVersionUID = 0L;

  public static final EHonorType DEFAULT_HONORTYPE = EHonorType.EHT_UNKNOWN;

  /**
   * 会员类型
   */
  @WireField(
      tag = 1,
      adapter = "com.zq.live.proto.Common.EHonorType#ADAPTER"
  )
  private final EHonorType honorType;

  public HonorInfo(EHonorType honorType) {
    this(honorType, ByteString.EMPTY);
  }

  public HonorInfo(EHonorType honorType, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.honorType = honorType;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.honorType = honorType;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof HonorInfo)) return false;
    HonorInfo o = (HonorInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(honorType, o.honorType);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (honorType != null ? honorType.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (honorType != null) builder.append(", honorType=").append(honorType);
    return builder.replace(0, 2, "HonorInfo{").append('}').toString();
  }

  public byte[] toByteArray() {
    return HonorInfo.ADAPTER.encode(this);
  }

  public static final HonorInfo parseFrom(byte[] data) throws IOException {
    HonorInfo c = null;
       c = HonorInfo.ADAPTER.decode(data);
    return c;
  }

  /**
   * 会员类型
   */
  public EHonorType getHonorType() {
    if(honorType==null){
        return new EHonorType.Builder().build();
    }
    return honorType;
  }

  /**
   * 会员类型
   */
  public boolean hasHonorType() {
    return honorType!=null;
  }

  public static final class Builder extends Message.Builder<HonorInfo, Builder> {
    private EHonorType honorType;

    public Builder() {
    }

    /**
     * 会员类型
     */
    public Builder setHonorType(EHonorType honorType) {
      this.honorType = honorType;
      return this;
    }

    @Override
    public HonorInfo build() {
      return new HonorInfo(honorType, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_HonorInfo extends ProtoAdapter<HonorInfo> {
    public ProtoAdapter_HonorInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, HonorInfo.class);
    }

    @Override
    public int encodedSize(HonorInfo value) {
      return EHonorType.ADAPTER.encodedSizeWithTag(1, value.honorType)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, HonorInfo value) throws IOException {
      EHonorType.ADAPTER.encodeWithTag(writer, 1, value.honorType);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public HonorInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.setHonorType(EHonorType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public HonorInfo redact(HonorInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
