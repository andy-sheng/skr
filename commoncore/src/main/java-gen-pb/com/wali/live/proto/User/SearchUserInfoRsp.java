// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: User.proto
package com.wali.live.proto.User;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class SearchUserInfoRsp extends Message<SearchUserInfoRsp, SearchUserInfoRsp.Builder> {
  public static final ProtoAdapter<SearchUserInfoRsp> ADAPTER = new ProtoAdapter_SearchUserInfoRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_ERRORCODE = 0;

  public static final Integer DEFAULT_TOTALNUM = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer errorCode;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer totalNum;

  @WireField(
      tag = 3,
      adapter = "com.wali.live.proto.User.PersonalInfo#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<PersonalInfo> personalInfos;

  public SearchUserInfoRsp(Integer errorCode, Integer totalNum, List<PersonalInfo> personalInfos) {
    this(errorCode, totalNum, personalInfos, ByteString.EMPTY);
  }

  public SearchUserInfoRsp(Integer errorCode, Integer totalNum, List<PersonalInfo> personalInfos,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.errorCode = errorCode;
    this.totalNum = totalNum;
    this.personalInfos = Internal.immutableCopyOf("personalInfos", personalInfos);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.errorCode = errorCode;
    builder.totalNum = totalNum;
    builder.personalInfos = Internal.copyOf("personalInfos", personalInfos);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SearchUserInfoRsp)) return false;
    SearchUserInfoRsp o = (SearchUserInfoRsp) other;
    return unknownFields().equals(o.unknownFields())
        && errorCode.equals(o.errorCode)
        && Internal.equals(totalNum, o.totalNum)
        && personalInfos.equals(o.personalInfos);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + errorCode.hashCode();
      result = result * 37 + (totalNum != null ? totalNum.hashCode() : 0);
      result = result * 37 + personalInfos.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", errorCode=").append(errorCode);
    if (totalNum != null) builder.append(", totalNum=").append(totalNum);
    if (!personalInfos.isEmpty()) builder.append(", personalInfos=").append(personalInfos);
    return builder.replace(0, 2, "SearchUserInfoRsp{").append('}').toString();
  }

  public static final SearchUserInfoRsp parseFrom(byte[] data) throws IOException {
    SearchUserInfoRsp c = null;
       c = SearchUserInfoRsp.ADAPTER.decode(data);
    return c;
  }

  public Integer getErrorCode() {
    if(errorCode==null){
        return DEFAULT_ERRORCODE;
    }
    return errorCode;
  }

  public Integer getTotalNum() {
    if(totalNum==null){
        return DEFAULT_TOTALNUM;
    }
    return totalNum;
  }

  public List<PersonalInfo> getPersonalInfosList() {
    if(personalInfos==null){
        return new java.util.ArrayList<PersonalInfo>();
    }
    return personalInfos;
  }

  public boolean hasErrorCode() {
    return errorCode!=null;
  }

  public boolean hasTotalNum() {
    return totalNum!=null;
  }

  public boolean hasPersonalInfosList() {
    return personalInfos!=null;
  }

  public static final class Builder extends Message.Builder<SearchUserInfoRsp, Builder> {
    public Integer errorCode;

    public Integer totalNum;

    public List<PersonalInfo> personalInfos;

    public Builder() {
      personalInfos = Internal.newMutableList();
    }

    public Builder setErrorCode(Integer errorCode) {
      this.errorCode = errorCode;
      return this;
    }

    public Builder setTotalNum(Integer totalNum) {
      this.totalNum = totalNum;
      return this;
    }

    public Builder addAllPersonalInfos(List<PersonalInfo> personalInfos) {
      Internal.checkElementsNotNull(personalInfos);
      this.personalInfos = personalInfos;
      return this;
    }

    @Override
    public SearchUserInfoRsp build() {
      return new SearchUserInfoRsp(errorCode, totalNum, personalInfos, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SearchUserInfoRsp extends ProtoAdapter<SearchUserInfoRsp> {
    public ProtoAdapter_SearchUserInfoRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, SearchUserInfoRsp.class);
    }

    @Override
    public int encodedSize(SearchUserInfoRsp value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.errorCode)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.totalNum)
          + PersonalInfo.ADAPTER.asRepeated().encodedSizeWithTag(3, value.personalInfos)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SearchUserInfoRsp value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.errorCode);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.totalNum);
      PersonalInfo.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.personalInfos);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SearchUserInfoRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setErrorCode(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setTotalNum(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.personalInfos.add(PersonalInfo.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SearchUserInfoRsp redact(SearchUserInfoRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.personalInfos, PersonalInfo.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
