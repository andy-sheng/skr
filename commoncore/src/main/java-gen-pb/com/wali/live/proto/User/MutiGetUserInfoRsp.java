// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: User.proto
package com.wali.live.proto.User;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class MutiGetUserInfoRsp extends Message<MutiGetUserInfoRsp, MutiGetUserInfoRsp.Builder> {
  public static final ProtoAdapter<MutiGetUserInfoRsp> ADAPTER = new ProtoAdapter_MutiGetUserInfoRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RETCODE = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer retCode;

  @WireField(
      tag = 2,
      adapter = "com.wali.live.proto.User.PersonalInfo#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<PersonalInfo> personalInfo;

  public MutiGetUserInfoRsp(Integer retCode, List<PersonalInfo> personalInfo) {
    this(retCode, personalInfo, ByteString.EMPTY);
  }

  public MutiGetUserInfoRsp(Integer retCode, List<PersonalInfo> personalInfo,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.retCode = retCode;
    this.personalInfo = Internal.immutableCopyOf("personalInfo", personalInfo);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.retCode = retCode;
    builder.personalInfo = Internal.copyOf("personalInfo", personalInfo);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MutiGetUserInfoRsp)) return false;
    MutiGetUserInfoRsp o = (MutiGetUserInfoRsp) other;
    return unknownFields().equals(o.unknownFields())
        && retCode.equals(o.retCode)
        && personalInfo.equals(o.personalInfo);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + retCode.hashCode();
      result = result * 37 + personalInfo.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", retCode=").append(retCode);
    if (!personalInfo.isEmpty()) builder.append(", personalInfo=").append(personalInfo);
    return builder.replace(0, 2, "MutiGetUserInfoRsp{").append('}').toString();
  }

  public static final MutiGetUserInfoRsp parseFrom(byte[] data) throws IOException {
    MutiGetUserInfoRsp c = null;
       c = MutiGetUserInfoRsp.ADAPTER.decode(data);
    return c;
  }

  public Integer getRetCode() {
    if(retCode==null){
        return DEFAULT_RETCODE;
    }
    return retCode;
  }

  public List<PersonalInfo> getPersonalInfoList() {
    if(personalInfo==null){
        return new java.util.ArrayList<PersonalInfo>();
    }
    return personalInfo;
  }

  public boolean hasRetCode() {
    return retCode!=null;
  }

  public boolean hasPersonalInfoList() {
    return personalInfo!=null;
  }

  public static final class Builder extends Message.Builder<MutiGetUserInfoRsp, Builder> {
    public Integer retCode;

    public List<PersonalInfo> personalInfo;

    public Builder() {
      personalInfo = Internal.newMutableList();
    }

    public Builder setRetCode(Integer retCode) {
      this.retCode = retCode;
      return this;
    }

    public Builder addAllPersonalInfo(List<PersonalInfo> personalInfo) {
      Internal.checkElementsNotNull(personalInfo);
      this.personalInfo = personalInfo;
      return this;
    }

    @Override
    public MutiGetUserInfoRsp build() {
      return new MutiGetUserInfoRsp(retCode, personalInfo, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_MutiGetUserInfoRsp extends ProtoAdapter<MutiGetUserInfoRsp> {
    public ProtoAdapter_MutiGetUserInfoRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, MutiGetUserInfoRsp.class);
    }

    @Override
    public int encodedSize(MutiGetUserInfoRsp value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.retCode)
          + PersonalInfo.ADAPTER.asRepeated().encodedSizeWithTag(2, value.personalInfo)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, MutiGetUserInfoRsp value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.retCode);
      PersonalInfo.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.personalInfo);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public MutiGetUserInfoRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRetCode(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.personalInfo.add(PersonalInfo.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public MutiGetUserInfoRsp redact(MutiGetUserInfoRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.personalInfo, PersonalInfo.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
