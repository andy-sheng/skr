// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Config.proto
package com.wali.live.proto.Config;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * cmd:zhibo.get_certificate 证书请求
 */
public final class MilinkCertificateReq extends Message<MilinkCertificateReq, MilinkCertificateReq.Builder> {
  public static final ProtoAdapter<MilinkCertificateReq> ADAPTER = new ProtoAdapter_MilinkCertificateReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_UPDATE_TS = 0L;

  /**
   * 初始时传0, 下次传返回的update_ts, 缓存在本地
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long update_ts;

  public MilinkCertificateReq(Long update_ts) {
    this(update_ts, ByteString.EMPTY);
  }

  public MilinkCertificateReq(Long update_ts, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.update_ts = update_ts;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.update_ts = update_ts;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MilinkCertificateReq)) return false;
    MilinkCertificateReq o = (MilinkCertificateReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(update_ts, o.update_ts);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (update_ts != null ? update_ts.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (update_ts != null) builder.append(", update_ts=").append(update_ts);
    return builder.replace(0, 2, "MilinkCertificateReq{").append('}').toString();
  }

  public byte[] toByteArray() {
    return MilinkCertificateReq.ADAPTER.encode(this);
  }

  public static final class Builder extends Message.Builder<MilinkCertificateReq, Builder> {
    public Long update_ts;

    public Builder() {
    }

    /**
     * 初始时传0, 下次传返回的update_ts, 缓存在本地
     */
    public Builder setUpdateTs(Long update_ts) {
      this.update_ts = update_ts;
      return this;
    }

    @Override
    public MilinkCertificateReq build() {
      return new MilinkCertificateReq(update_ts, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_MilinkCertificateReq extends ProtoAdapter<MilinkCertificateReq> {
    public ProtoAdapter_MilinkCertificateReq() {
      super(FieldEncoding.LENGTH_DELIMITED, MilinkCertificateReq.class);
    }

    @Override
    public int encodedSize(MilinkCertificateReq value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.update_ts)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, MilinkCertificateReq value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.update_ts);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public MilinkCertificateReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUpdateTs(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public MilinkCertificateReq redact(MilinkCertificateReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
