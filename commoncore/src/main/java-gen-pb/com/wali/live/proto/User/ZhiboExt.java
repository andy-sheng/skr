// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: User.proto
package com.wali.live.proto.User;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * /////////////////////这里有历史原因米聊和直播共用pb所以32 到38之间有米聊字段暂时不需要，没加入/////////////
 */
public final class ZhiboExt extends Message<ZhiboExt, ZhiboExt.Builder> {
  public static final ProtoAdapter<ZhiboExt> ADAPTER = new ProtoAdapter_ZhiboExt();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.User.UserNobleInfo#ADAPTER"
  )
  public final UserNobleInfo noble_info;

  public ZhiboExt(UserNobleInfo noble_info) {
    this(noble_info, ByteString.EMPTY);
  }

  public ZhiboExt(UserNobleInfo noble_info, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.noble_info = noble_info;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.noble_info = noble_info;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ZhiboExt)) return false;
    ZhiboExt o = (ZhiboExt) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(noble_info, o.noble_info);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (noble_info != null ? noble_info.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (noble_info != null) builder.append(", noble_info=").append(noble_info);
    return builder.replace(0, 2, "ZhiboExt{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ZhiboExt.ADAPTER.encode(this);
  }

  public static final ZhiboExt parseFrom(byte[] data) throws IOException {
    ZhiboExt c = null;
       c = ZhiboExt.ADAPTER.decode(data);
    return c;
  }

  public UserNobleInfo getNobleInfo() {
    if(noble_info==null){
        return new UserNobleInfo.Builder().build();
    }
    return noble_info;
  }

  public boolean hasNobleInfo() {
    return noble_info!=null;
  }

  public static final class Builder extends Message.Builder<ZhiboExt, Builder> {
    public UserNobleInfo noble_info;

    public Builder() {
    }

    public Builder setNobleInfo(UserNobleInfo noble_info) {
      this.noble_info = noble_info;
      return this;
    }

    @Override
    public ZhiboExt build() {
      return new ZhiboExt(noble_info, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ZhiboExt extends ProtoAdapter<ZhiboExt> {
    public ProtoAdapter_ZhiboExt() {
      super(FieldEncoding.LENGTH_DELIMITED, ZhiboExt.class);
    }

    @Override
    public int encodedSize(ZhiboExt value) {
      return UserNobleInfo.ADAPTER.encodedSizeWithTag(1, value.noble_info)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ZhiboExt value) throws IOException {
      UserNobleInfo.ADAPTER.encodeWithTag(writer, 1, value.noble_info);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ZhiboExt decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setNobleInfo(UserNobleInfo.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ZhiboExt redact(ZhiboExt value) {
      Builder builder = value.newBuilder();
      if (builder.noble_info != null) builder.noble_info = UserNobleInfo.ADAPTER.redact(builder.noble_info);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
