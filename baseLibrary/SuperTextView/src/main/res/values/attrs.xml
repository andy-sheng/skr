<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!--SuperTextView-->
    <declare-styleable name="SuperTextView">

        <!--
        设置圆角。会同时作用于填充和边框(如果边框存在的话)
        如果要设置为圆形，只需要把该值设置为宽或长的1/2即可
        -->
        <attr name="stv_corner" format="dimension" />
        <attr name="stv_left_top_corner" format="boolean" />
        <attr name="stv_right_top_corner" format="boolean" />
        <attr name="stv_left_bottom_corner" format="boolean" />
        <attr name="stv_right_bottom_corner" format="boolean" />

        <!-- 设置填充颜色-->
        <attr name="stv_solid" format="reference|color" />
        <!-- 设置边框宽度-->
        <attr name="stv_stroke_width" format="dimension" />
        <!-- 设置边框颜色-->
        <attr name="stv_stroke_color" format="reference|color" />
        <!-- 放置一个drawable在背景层上。默认居中显示。并且默认大小为SuperTextView的一半。-->
        <attr name="stv_state_drawable" format="reference|color" />
        <!-- drawable的宽度-->
        <attr name="stv_state_drawable_width" format="dimension" />
        <!-- drawable的高度-->
        <attr name="stv_state_drawable_height" format="dimension" />
        <!-- drawble相对于基础位置左边的距离-->
        <attr name="stv_state_drawable_padding_left" format="dimension" />
        <!-- drawble相对于基础位置顶部的距离-->
        <attr name="stv_state_drawable_padding_top" format="dimension" />
        <!-- 修改 drawable 的颜色-->
        <attr name="stv_state_drawable_tint" format="reference|color" />
        <!-- 旋转drawable-->
        <attr name="stv_state_drawable_rotate" format="float" />
        <!--
        boolean类型。是否显示drawable。
        如果你想要设置的drawable显示出来，必须设置为true。
        当不想让它显示时，再设置为false即可
         -->
        <attr name="stv_isShowState" format="boolean" />
        <attr name="stv_drawableAsBackground" format="boolean" />

        <attr name="stv_scaleType" format="enum">
            <enum name="fitXY" value="0" />
            <enum name="fitCenter" value="1" />
            <enum name="center" value="2" />
        </attr>
        <!--设置drawable的显示模式-->
        <attr name="stv_state_drawable_mode" format="enum">
            <enum name="left" value="0" />
            <enum name="top" value="1" />
            <enum name="right" value="2" />
            <enum name="bottom" value="3" />
            <enum name="center" value="4" />
            <enum name="fill" value="5" />
            <enum name="leftTop" value="6" />
            <enum name="rightTop" value="7" />
            <enum name="leftBottom" value="8" />
            <enum name="rightBottom" value="9" />
        </attr>

        <!--支持设置两个 drawable 参数意义和上面一样-->
        <attr name="stv_state_drawable2" format="reference|color" />
        <attr name="stv_state_drawable2_width" format="dimension" />
        <attr name="stv_state_drawable2_height" format="dimension" />
        <attr name="stv_state_drawable2_padding_left" format="dimension" />
        <attr name="stv_state_drawable2_padding_top" format="dimension" />
        <attr name="stv_state_drawable2_tint" format="reference|color" />
        <attr name="stv_state_drawable2_rotate" format="float" />
        <attr name="stv_isShowState2" format="boolean" />
        <attr name="stv_state_drawable2_mode" format="enum">
            <enum name="left" value="0" />
            <enum name="top" value="1" />
            <enum name="right" value="2" />
            <enum name="bottom" value="3" />
            <enum name="center" value="4" />
            <enum name="fill" value="5" />
            <enum name="leftTop" value="6" />
            <enum name="rightTop" value="7" />
            <enum name="leftBottom" value="8" />
            <enum name="rightBottom" value="9" />
        </attr>

        <!--背景渐变 必须设置为true才能启用渐变功能。这意味着你可以灵活的控制这一功能。-->
        <attr name="stv_shaderEnable" format="boolean" />
        <!--起始颜色-->
        <attr name="stv_shaderStartColor" format="reference|color" />
        <!--结尾颜色-->
        <attr name="stv_shaderEndColor" format="reference|color" />
        <!--渐变模式-->
        <attr name="stv_shaderMode" format="enum">
            <enum name="topToBottom" value="0" />
            <enum name="bottomToTop" value="1" />
            <enum name="leftToRight" value="2" />
            <enum name="rightToLeft" value="3" />
        </attr>
        <!--文字渐变,参数意义同上-->
        <attr name="stv_textShaderEnable" format="boolean" />
        <attr name="stv_textShaderStartColor" format="reference|color" />
        <attr name="stv_textShaderEndColor" format="reference|color" />
        <attr name="stv_textShaderMode" format="enum">
            <enum name="topToBottom" value="0" />
            <enum name="bottomToTop" value="1" />
            <enum name="leftToRight" value="2" />
            <enum name="rightToLeft" value="3" />
        </attr>

        <!--按压背景颜色-->
        <attr name="stv_pressBgColor" format="reference|color" />
        <!--按压文字颜色-->
        <attr name="stv_pressTextColor" format="reference|color" />

        <!--
          是否开启文字描边功能。
          注意，启用这个模式之后通过setTextColor()设置的颜色将会被覆盖。
          你需要通过text_fill_color来设置文字的颜色。
        -->
        <attr name="stv_text_stroke" format="boolean" />
        <!-- 描边颜色-->
        <attr name="stv_text_stroke_color" format="reference|color" />
        <!-- 描边宽度-->
        <attr name="stv_text_stroke_width" format="dimension" />
        <!-- 填充颜色-->
        <attr name="stv_text_fill_color" format="reference|color" />
        <!--
        boolean类型。是否启用Adjuster功能。
        具体干什么，需要在Java中为SuperTextView实现一个Adjuster。
        当你启用这个功能而没有实现自己的Adjuster时，
        SuperTextView会启用默认的Adjuster。它会按照一定的规则调整文字大小。
        -->
        <attr name="stv_autoAdjust" format="boolean" />

    </declare-styleable>
</resources>