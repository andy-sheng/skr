apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao' // apply plugin

//kotlin-android用于编译Android代码
apply plugin: 'kotlin-android'
//kotlin-android-extensions用于扩展绑定关系.
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]

        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {

        debug {
            debuggable true

                resValue("string", "PORT_NUMBER", "8089")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    resourcePrefix "public_" //给 Module 内的资源名增加前缀, 避免资源名冲突

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen-db', 'src/main/java-gen-pb']
            // 可以通过开关随时取消依赖 exoplayer
            java.srcDirs += 'src/main/java-exoplayer'
            res.srcDirs = ['src/main/res']
            if (autoLayout.toBoolean()) {
                res.srcDirs += 'src/main/res-adapter'
            }
            // commontitlebar
            res.srcDirs += 'src/main/res-titlebar'

            //xlog
            //java.srcDirs += 'src/main/java-xlog'
            java.srcDirs += 'src/main/java-xlog-wx'
            // 使用多啦A梦的log工具了，这个可以暂时不要了
            //java.srcDirs += 'src/main/java-screenlog'
            // 直接引入支持下拉加载 recyclerView,放弃 paginate，使用SmartRefreshLayout
//            java.srcDirs += 'src/main/java-paginate'
//            res.srcDirs += 'src/main/res-paginate'

            //  相册选取 视频选取
            java.srcDirs += 'src/main/java-respicker'
            res.srcDirs += 'src/main/res-respicker'

            // 提供图片缩放浏览能力，支持渐变式，支持loading页，支持超大图，超大Gif
            java.srcDirs += 'src/main/java-imagebrowse'
            res.srcDirs += 'src/main/res-imagebrowse'

            // 带拼音索引的列表 类似微信联系人
            //java.srcDirs += 'src/main/java-indexrecyclerview'
            //res.srcDirs += 'src/main/res-indexrecyclerview'

            // 扩展的一些view 可以自定义一些属性，方便使用
            java.srcDirs += 'src/main/java-exview'
            res.srcDirs += 'src/main/res-exview'

            // emoji 表情库
            java.srcDirs += 'src/main/java-emoji'
            res.srcDirs += 'src/main/res-emoji'

            // dialog库
            java.srcDirs += 'src/main/java-dialog'
            res.srcDirs += 'src/main/res-dialog'

            // bubbleSeekbar
            //java.srcDirs += 'src/main/java-seekbar'
            //res.srcDirs += 'src/main/res-seekbar'

            // loadsir
            java.srcDirs += 'src/main/java-loadsir'
            res.srcDirs += 'src/main/res-loadsir'

            // okhttp和retrofit封装
            java.srcDirs += 'src/main/java-rxretrofit'

            java.srcDirs += 'src/main/java-oss'

            if (repluginHostEnable.toBoolean()) {
                java.srcDirs += 'src/main/java-replugin-host'
            } else {
                java.srcDirs += 'src/main/java-replugin-plugin'
            }

            // lubban 图片压缩
            java.srcDirs += 'src/main/java-luban'
            java.srcDirs += 'src/main/java-bitmap-pool'

            // webview
            java.srcDirs += 'src/main/java-agentweb'
            res.srcDirs += 'src/main/res-agentweb'

            // 滚轮时间、地址等选择器
            //java.srcDirs += 'src/main/java-picker'
            //res.srcDirs += 'src/main/res-picker'

            // 标签布局
            java.srcDirs += 'src/main/java-flowlayout'
            res.srcDirs += 'src/main/res-flowlayout'

            // switchButton
            java.srcDirs += 'src/main/java-switchbutton'
            res.srcDirs += 'src/main/res-switchbutton'

            java.srcDirs += 'src/main/java-jsbridge'

            // banner
            java.srcDirs += 'src/main/java-banner'
            res.srcDirs += 'src/main/res-banner'

            // 悬浮窗
            java.srcDirs += 'src/main/java-floatwindow'
            res.srcDirs += 'src/main/res-floatwindow'

            // svga
            java.srcDirs += 'src/main/java-svga'
            res.srcDirs += 'src/main/res-svga'

            if(UmengPushEnable.toBoolean()) {
                // umengpush
                java.srcDirs += 'src/main/java-push-umeng'
            }
            if(JPushEnable.toBoolean()) {
                // 极光push
                java.srcDirs += 'src/main/java-push-jiguang'
            }else{
                java.srcDirs += 'src/main/java-push-jiguang-noop'
            }
            if(MatrixEnable.toBoolean()){
                java.srcDirs += 'src/main/java-matrix'
                res.srcDirs += 'src/main/res-matrix'
            }else{
                java.srcDirs += 'src/main/java-matrix-noop'
            }
        }

//        release {
//            java.srcDirs += "src/main/java-stetho-no-op"
//        }
    }


}

dependencies {
    // New api keyword is exactly the same as the old compile keyword.
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // implementation 只会引入依赖的A，不会把A依赖的B也引进来
    api(rootProject.ext.dependencies["support-v4"])
    api(rootProject.ext.dependencies["appcompat-v7"])
    api(rootProject.ext.dependencies["design"])

    debugImplementation(rootProject.ext.dependencies["canary-debug"])
    releaseImplementation(rootProject.ext.dependencies["canary-release"])
    // 检查fragment 泄露的 暂时关掉
    //debugImplementation(rootProject.ext.dependencies["canary-debug-fragment"])

    // 美团walle 多渠道打包，读取渠道信息
    implementation 'com.meituan.android.walle:library:1.1.6'
    // 导入ARouter库
    api(rootProject.ext.dependencies["arouter"])
    // eventbus 事件总线
    api rootProject.ext.dependencies["eventbus"]
    //rx
    api rootProject.ext.dependencies["rxjava2"]
    api(rootProject.ext.dependencies["rxandroid2"])
    api(rootProject.ext.dependencies["rxlifecycle2"])
    api(rootProject.ext.dependencies["rxlifecycle2-android"])

    // http
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["retrofit"]
//    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    // okhtpp logging,源代码方式引入
//    api rootProject.ext.dependencies["logging-interceptor"]
    //fastjson
    api rootProject.ext.dependencies["fastjson-android"]
    api rootProject.ext.dependencies["retrofit-fastjson-android-convert"]

    // 权限检查
    api(rootProject.ext.dependencies["rxpermissions2"])
    // 日志 以源代码方式方式引入
    //implementation(rootProject.ext.dependencies["xlog"])
    // 微信xlog
    implementation 'com.tencent.mars:mars-xlog:1.0.7'

    // fresco图片加载
    api(rootProject.ext.dependencies["fresco"])
    api(rootProject.ext.dependencies["fresco-gif"])
    api(rootProject.ext.dependencies["fresco-webpsupport"])
    api(rootProject.ext.dependencies["fresco-animated-webp"])
    //api(rootProject.ext.dependencies["fresco-okhttp"])
    // 流畅的gif
    //api(rootProject.ext.dependencies["android-gif-drawable"])
    implementation project(":baseLibrary:android-gif-drawable")
    // 超大图加载
    implementation(rootProject.ext.dependencies["scale-image-view"])

    //greendao
    api rootProject.ext.dependencies["greendao"]

    //wire pb
    api rootProject.ext.dependencies["wire"]

    implementation rootProject.ext.dependencies["swipebackhelper"]

    debugApi rootProject.ext.dependencies["debug-db"]

    // exo 播放器
    api rootProject.ext.dependencies["exoplayer-core"]
    api rootProject.ext.dependencies["exoplayer-hls"]

    // 拼音处理
    api rootProject.ext.dependencies["tinypinyin"]

    // 二维码
    api rootProject.ext.dependencies["bga-qrcode-zxing"]

    // 封装了一个可以上拉刷新，下拉加载的recyclerview库。后续把这些库以源码的方式一一引入，
    // 或者以一个单独module的方式演示这些库的使用。
//    implementation rootProject.ext.dependencies["paginate"]
    // 强大上下拉刷新库
    api rootProject.ext.dependencies["SmartRefreshLayout"]
    // loadsir 处理各种异常页面空页面 无法改变现有layout
    //api rootProject.ext.dependencies["loadsir"]

    // 友盟统计
    implementation rootProject.ext.dependencies['umeng-common']
    implementation rootProject.ext.dependencies['umeng-analytics']

    // 腾讯 bugly sdk
    implementation 'com.tencent.bugly:crashreport:2.8.6' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:3.6.0' //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    // 友盟push
    if(UmengPushEnable.toBoolean()){
        implementation rootProject.ext.dependencies['umeng-push']
        implementation rootProject.ext.dependencies['umeng-utdid']
//
//    // 友盟push 集成小米push
        implementation rootProject.ext.dependencies['umeng-xiaomi-push']
        implementation rootProject.ext.dependencies['umeng-xiaomi-umengaccs']
//
//    // 友盟push 集成华为push
        implementation rootProject.ext.dependencies['umeng-huawei-basetb']
        implementation rootProject.ext.dependencies['umeng-huawei-pushtb']
        implementation rootProject.ext.dependencies['umeng-huawei-umengaccs']

        // 友盟push 集成魅族push
        implementation rootProject.ext.dependencies['umeng-meizu-push']
        implementation rootProject.ext.dependencies['umeng-meizu-umengaccs']
    }

    // 极光推送
    if(JPushEnable.toBoolean()){
        implementation 'cn.jiguang.sdk:jpush:3.2.0'  // 此处以JPush 3.2.0 版本为例。
        implementation 'cn.jiguang.sdk:jcore:1.2.7'  // 此处以JCore 1.2.7 版本为例。
        implementation 'cn.jiguang.sdk.plugin:xiaomi:3.2.0'//此版本插件仅支持JPushSDK3.2.0及以上版本
        implementation 'cn.jiguang.sdk.plugin:huawei:3.2.1'//此版本插件仅支持JPushSDK3.2.0及以上版本
        implementation 'cn.jiguang.sdk.plugin:meizu:3.2.0'//此版本插件仅支持JPushSDK3.2.0及以上版本
        implementation 'cn.jiguang.sdk.plugin:oppo:3.2.0'//此版本插件仅支持JPushSDK3.1.8及以上版本
        implementation 'cn.jiguang.sdk.plugin:vivo:3.2.0'//此版本插件仅支持JPushSDK3.2.0及以上版本
    }

//  debugApi rootProject.ext.dependencies["stetho"]

    // 使用矢量图来播动画的库
    //api rootProject.ext.dependencies["lottie"]
    // SVGA YY的动画播放框架
    //api rootProject.ext.dependencies["svga"]

    //api rootProject.ext.dependencies["rxbinding"]
    //api rootProject.ext.dependencies["rxbinding-support-v4"]
    //api rootProject.ext.dependencies["rxbinding-appcompat-v7"]
    //api rootProject.ext.dependencies["cardview-v7"]
//    api rootProject.ext.dependencies["lzyzsd-jsbridge"]
//    api 'com.youth.banner:banner:1.4.10'

    if (virtualApkEnable.toBoolean()) {
        // VirtualApk 组件
        api 'com.didi.virtualapk:core:0.9.8'
    }

    if (droidPluginEnable.toBoolean()) {
        // DroidPlugin 组件
        api project(":baseLibrary:DroidPlugin")
    }

    if (repluginHostEnable.toBoolean()) {
        // replugin 组件
        api project(":baseLibrary:replugin-host-library")
    }

    // 小米统计sdk
    //api files('libs/MiStats_SDK_Client_1_4_0.jar')
    // 蒲公英 用户反馈 与 崩溃收集
    //api files('libs/pgyer_sdk_3.0.2.jar')

    //api files('libs/milinksdk-3.2.0.jar')

    api files('libs/BaiduLBS_Android.jar')

    api files('libs/tbs_sdk_thirdapp_v4.3.0.1072_43646_sharewithdownloadwithfile_withoutGame_obfs_20190429_175122.jar')

    // 阿里支付
//    api files("libs/alipaySdk-20170922.jar")

    // 微信支付
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.3.1'

    // ConstraintLayout布局
    api 'com.android.support.constraint:constraint-layout:1.1.3'

    if(MatrixEnable.toBoolean()){
        implementation group: "com.tencent.matrix", name: "matrix-android-lib", version: MATRIX_VERSION, changing: true
        implementation group: "com.tencent.matrix", name: "matrix-android-commons", version: MATRIX_VERSION, changing: true
        implementation group: "com.tencent.matrix", name: "matrix-trace-canary", version: MATRIX_VERSION, changing: true
        implementation group: "com.tencent.matrix", name: "matrix-resource-canary-android", version: MATRIX_VERSION, changing: true
        implementation group: "com.tencent.matrix", name: "matrix-resource-canary-common", version: MATRIX_VERSION, changing: true
        implementation group: "com.tencent.matrix", name: "matrix-io-canary", version: MATRIX_VERSION, changing: true
        implementation group: "com.tencent.matrix", name: "matrix-sqlite-lint-android-sdk", version: MATRIX_VERSION, changing: true
        //releaseImplementation group: "com.tencent.matrix", name: "matrix-sqlite-lint-android-sdk-no-op", version: MATRIX_VERSION, changing: true
    }

}

//与dependencies平级，主要用于配置数据库相关信息的及自动生成的“DAO”资源的目录
greendao {

    schemaVersion 1//数据库版本号

    daoPackage 'com.common.base.db'//设置DaoMaster、DaoSession、Dao包名

    targetGenDir 'src/main/java-gen-db'//设置DaoMaster、DaoSession、Dao目录

    //targetGenDirTest：设置生成单元测试目录

    //generateTests：设置自动生成单元测试用例

}

// 添加上传到本地 maven 仓库
apply plugin: 'maven'

uploadArchives {
    repositories.mavenDeployer {
        repository(url: local_maven)
        pom.groupId = 'com.common.sdk'
        pom.artifactId = 'common-sdk'
        pom.version = '2.0'
    }
}