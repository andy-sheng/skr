apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            ndkBuild {
                arguments "PREBUILT_PATH:=src/main/jni/prebuilt"
                arguments "NDK_APPLICATION_MK:=src/main/jni/Application.mk"
                abiFilters "armeabi-v7a"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

}

dependencies {
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    if(dependLibraryFromServer.toBoolean()){
        compileOnly "com.common.sdk:commonsdk:1.0"
        api "com.common.sdk:effectsdk:1.0"
        api "com.common.sdk:enginesdk:1.0"
    }else{
        compileOnly project(":baseLibrary:commonsdk")
        api project(":baseLibrary:effectsdk")
        api project(":baseLibrary:enginesdk")
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

// 添加上传到本地 maven 仓库
apply plugin: 'maven'

uploadArchives {
    repositories.mavenDeployer {
        repository(url: rootProject.ext.local_maven)
        pom.groupId = 'com.common.sdk'
        pom.artifactId = 'mediaengine'
        pom.version = '1.0'
    }
}
