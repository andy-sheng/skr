apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        ndk {
            abiFilters 'armeabi-v7a'
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-16', '-DANDROID_TOOLCHAIN=clang',
                        '-DANDROID_ARM_NEON=TRUE', '-DANDROID_STL=gnustl_static',
                        '-DCMAKE_BUILD_TYPE=RelWithDebInfo'
                cFlags '-O3', '-DGL_GLEXT_PROTOTYPES', '-DEGL_EGLEXT_PROTOTYPES', '-fsigned-char', '-Wformat','-mfpu=neon', '-mfloat-abi=softfp -frtti' // full optimization, char data type is signed
                // 编译优化，设置函式是否能被 inline 的伪指令长度
                cppFlags '-O3', '-fexceptions', '-fsigned-char',
                        "-frtti -std=c++11", '-Wformat'

            }
        }
    }

    sourceSets {
        main {
            res.srcDirs += ['src/main/res']

            java.srcDirs += 'src/main/java-cb'
            res.srcDirs += ['src/main/res-cb']

            java.srcDirs += 'src/main/java-agora'
            res.srcDirs += ['src/main/res-agora']
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    compileOnly project(":baseLibrary:commonsdk")
    api files('libs/agora-rtc-sdk.jar')
}

