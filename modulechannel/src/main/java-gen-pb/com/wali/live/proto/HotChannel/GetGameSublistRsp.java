// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: HotChannel.proto
package com.wali.live.proto.HotChannel;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GetGameSublistRsp extends Message<GetGameSublistRsp, GetGameSublistRsp.Builder> {
  public static final ProtoAdapter<GetGameSublistRsp> ADAPTER = new ProtoAdapter_GetGameSublistRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RETCODE = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer retCode;

  @WireField(
      tag = 2,
      adapter = "com.wali.live.proto.HotChannel.TabPage#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<TabPage> pages;

  @WireField(
      tag = 3,
      adapter = "com.wali.live.proto.HotChannel.GameInfo#ADAPTER"
  )
  public final GameInfo game;

  public GetGameSublistRsp(Integer retCode, List<TabPage> pages, GameInfo game) {
    this(retCode, pages, game, ByteString.EMPTY);
  }

  public GetGameSublistRsp(Integer retCode, List<TabPage> pages, GameInfo game,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.retCode = retCode;
    this.pages = Internal.immutableCopyOf("pages", pages);
    this.game = game;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.retCode = retCode;
    builder.pages = Internal.copyOf("pages", pages);
    builder.game = game;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetGameSublistRsp)) return false;
    GetGameSublistRsp o = (GetGameSublistRsp) other;
    return unknownFields().equals(o.unknownFields())
        && retCode.equals(o.retCode)
        && pages.equals(o.pages)
        && Internal.equals(game, o.game);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + retCode.hashCode();
      result = result * 37 + pages.hashCode();
      result = result * 37 + (game != null ? game.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", retCode=").append(retCode);
    if (!pages.isEmpty()) builder.append(", pages=").append(pages);
    if (game != null) builder.append(", game=").append(game);
    return builder.replace(0, 2, "GetGameSublistRsp{").append('}').toString();
  }

  public static final GetGameSublistRsp parseFrom(byte[] data) throws IOException {
    GetGameSublistRsp c = null;
       c = GetGameSublistRsp.ADAPTER.decode(data);
    return c;
  }

  public Integer getRetCode() {
    if(retCode==null){
        return DEFAULT_RETCODE;
    }
    return retCode;
  }

  public List<TabPage> getPagesList() {
    if(pages==null){
        return new java.util.ArrayList<TabPage>();
    }
    return pages;
  }

  public GameInfo getGame() {
    if(game==null){
        return new GameInfo.Builder().build();
    }
    return game;
  }

  public boolean hasRetCode() {
    return retCode!=null;
  }

  public boolean hasPagesList() {
    return pages!=null;
  }

  public boolean hasGame() {
    return game!=null;
  }

  public static final class Builder extends Message.Builder<GetGameSublistRsp, Builder> {
    public Integer retCode;

    public List<TabPage> pages;

    public GameInfo game;

    public Builder() {
      pages = Internal.newMutableList();
    }

    public Builder setRetCode(Integer retCode) {
      this.retCode = retCode;
      return this;
    }

    public Builder addAllPages(List<TabPage> pages) {
      Internal.checkElementsNotNull(pages);
      this.pages = pages;
      return this;
    }

    public Builder setGame(GameInfo game) {
      this.game = game;
      return this;
    }

    @Override
    public GetGameSublistRsp build() {
      return new GetGameSublistRsp(retCode, pages, game, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetGameSublistRsp extends ProtoAdapter<GetGameSublistRsp> {
    public ProtoAdapter_GetGameSublistRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetGameSublistRsp.class);
    }

    @Override
    public int encodedSize(GetGameSublistRsp value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.retCode)
          + TabPage.ADAPTER.asRepeated().encodedSizeWithTag(2, value.pages)
          + GameInfo.ADAPTER.encodedSizeWithTag(3, value.game)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetGameSublistRsp value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.retCode);
      TabPage.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.pages);
      GameInfo.ADAPTER.encodeWithTag(writer, 3, value.game);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetGameSublistRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRetCode(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.pages.add(TabPage.ADAPTER.decode(reader)); break;
          case 3: builder.setGame(GameInfo.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetGameSublistRsp redact(GetGameSublistRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.pages, TabPage.ADAPTER);
      if (builder.game != null) builder.game = GameInfo.ADAPTER.redact(builder.game);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
