// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CommonChannel.proto
package com.wali.live.proto.CommonChannel;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class NoticeData extends Message<NoticeData, NoticeData.Builder> {
  public static final ProtoAdapter<NoticeData> ADAPTER = new ProtoAdapter_NoticeData();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_NOTICEID = "";

  public static final Long DEFAULT_ZUID = 0L;

  public static final Long DEFAULT_BEGINTIME = 0L;

  public static final String DEFAULT_TITLE = "";

  /**
   * 预告ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String noticeId;

  /**
   * 主播ID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long zuid;

  /**
   * 预告开始时间
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long beginTime;

  /**
   * 标题
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String title;

  public NoticeData(String noticeId, Long zuid, Long beginTime, String title) {
    this(noticeId, zuid, beginTime, title, ByteString.EMPTY);
  }

  public NoticeData(String noticeId, Long zuid, Long beginTime, String title,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.noticeId = noticeId;
    this.zuid = zuid;
    this.beginTime = beginTime;
    this.title = title;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.noticeId = noticeId;
    builder.zuid = zuid;
    builder.beginTime = beginTime;
    builder.title = title;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NoticeData)) return false;
    NoticeData o = (NoticeData) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(noticeId, o.noticeId)
        && Internal.equals(zuid, o.zuid)
        && Internal.equals(beginTime, o.beginTime)
        && Internal.equals(title, o.title);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (noticeId != null ? noticeId.hashCode() : 0);
      result = result * 37 + (zuid != null ? zuid.hashCode() : 0);
      result = result * 37 + (beginTime != null ? beginTime.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (noticeId != null) builder.append(", noticeId=").append(noticeId);
    if (zuid != null) builder.append(", zuid=").append(zuid);
    if (beginTime != null) builder.append(", beginTime=").append(beginTime);
    if (title != null) builder.append(", title=").append(title);
    return builder.replace(0, 2, "NoticeData{").append('}').toString();
  }

  public byte[] toByteArray() {
    return NoticeData.ADAPTER.encode(this);
  }

  public static final NoticeData parseFrom(byte[] data) throws IOException {
    NoticeData c = null;
       c = NoticeData.ADAPTER.decode(data);
    return c;
  }

  /**
   * 预告ID
   */
  public String getNoticeId() {
    if(noticeId==null){
        return DEFAULT_NOTICEID;
    }
    return noticeId;
  }

  /**
   * 主播ID
   */
  public Long getZuid() {
    if(zuid==null){
        return DEFAULT_ZUID;
    }
    return zuid;
  }

  /**
   * 预告开始时间
   */
  public Long getBeginTime() {
    if(beginTime==null){
        return DEFAULT_BEGINTIME;
    }
    return beginTime;
  }

  /**
   * 标题
   */
  public String getTitle() {
    if(title==null){
        return DEFAULT_TITLE;
    }
    return title;
  }

  /**
   * 预告ID
   */
  public boolean hasNoticeId() {
    return noticeId!=null;
  }

  /**
   * 主播ID
   */
  public boolean hasZuid() {
    return zuid!=null;
  }

  /**
   * 预告开始时间
   */
  public boolean hasBeginTime() {
    return beginTime!=null;
  }

  /**
   * 标题
   */
  public boolean hasTitle() {
    return title!=null;
  }

  public static final class Builder extends Message.Builder<NoticeData, Builder> {
    public String noticeId;

    public Long zuid;

    public Long beginTime;

    public String title;

    public Builder() {
    }

    /**
     * 预告ID
     */
    public Builder setNoticeId(String noticeId) {
      this.noticeId = noticeId;
      return this;
    }

    /**
     * 主播ID
     */
    public Builder setZuid(Long zuid) {
      this.zuid = zuid;
      return this;
    }

    /**
     * 预告开始时间
     */
    public Builder setBeginTime(Long beginTime) {
      this.beginTime = beginTime;
      return this;
    }

    /**
     * 标题
     */
    public Builder setTitle(String title) {
      this.title = title;
      return this;
    }

    @Override
    public NoticeData build() {
      return new NoticeData(noticeId, zuid, beginTime, title, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_NoticeData extends ProtoAdapter<NoticeData> {
    public ProtoAdapter_NoticeData() {
      super(FieldEncoding.LENGTH_DELIMITED, NoticeData.class);
    }

    @Override
    public int encodedSize(NoticeData value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.noticeId)
          + ProtoAdapter.UINT64.encodedSizeWithTag(2, value.zuid)
          + ProtoAdapter.UINT64.encodedSizeWithTag(3, value.beginTime)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.title)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, NoticeData value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.noticeId);
      ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.zuid);
      ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.beginTime);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.title);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public NoticeData decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setNoticeId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.setZuid(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.setBeginTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.setTitle(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public NoticeData redact(NoticeData value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
