// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: LiveShow.proto
package com.wali.live.proto.LiveShow;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class GetSignInStatusRsp extends Message<GetSignInStatusRsp, GetSignInStatusRsp.Builder> {
  public static final ProtoAdapter<GetSignInStatusRsp> ADAPTER = new ProtoAdapter_GetSignInStatusRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RETCODE = 0;

  public static final Integer DEFAULT_DISPLAYSTATUS = 0;

  public static final Integer DEFAULT_SIGNINSTATUS = 0;

  public static final String DEFAULT_SIGNINURL = "";

  public static final Integer DEFAULT_QUERYINTERVAL = 0;

  /**
   * 0:表示成功
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer retCode;

  /**
   * 显示状态,0:不显示签到,1：显示签到
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer displayStatus;

  /**
   * 签到状态,0:未签到,1:已签到
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer signInStatus;

  /**
   * 签到跳转url
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String signInUrl;

  /**
   * 查询时间间隔,单位:秒
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer queryInterval;

  public GetSignInStatusRsp(Integer retCode, Integer displayStatus, Integer signInStatus,
      String signInUrl, Integer queryInterval) {
    this(retCode, displayStatus, signInStatus, signInUrl, queryInterval, ByteString.EMPTY);
  }

  public GetSignInStatusRsp(Integer retCode, Integer displayStatus, Integer signInStatus,
      String signInUrl, Integer queryInterval, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.retCode = retCode;
    this.displayStatus = displayStatus;
    this.signInStatus = signInStatus;
    this.signInUrl = signInUrl;
    this.queryInterval = queryInterval;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.retCode = retCode;
    builder.displayStatus = displayStatus;
    builder.signInStatus = signInStatus;
    builder.signInUrl = signInUrl;
    builder.queryInterval = queryInterval;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetSignInStatusRsp)) return false;
    GetSignInStatusRsp o = (GetSignInStatusRsp) other;
    return unknownFields().equals(o.unknownFields())
        && retCode.equals(o.retCode)
        && Internal.equals(displayStatus, o.displayStatus)
        && Internal.equals(signInStatus, o.signInStatus)
        && Internal.equals(signInUrl, o.signInUrl)
        && Internal.equals(queryInterval, o.queryInterval);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + retCode.hashCode();
      result = result * 37 + (displayStatus != null ? displayStatus.hashCode() : 0);
      result = result * 37 + (signInStatus != null ? signInStatus.hashCode() : 0);
      result = result * 37 + (signInUrl != null ? signInUrl.hashCode() : 0);
      result = result * 37 + (queryInterval != null ? queryInterval.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", retCode=").append(retCode);
    if (displayStatus != null) builder.append(", displayStatus=").append(displayStatus);
    if (signInStatus != null) builder.append(", signInStatus=").append(signInStatus);
    if (signInUrl != null) builder.append(", signInUrl=").append(signInUrl);
    if (queryInterval != null) builder.append(", queryInterval=").append(queryInterval);
    return builder.replace(0, 2, "GetSignInStatusRsp{").append('}').toString();
  }

  public static final GetSignInStatusRsp parseFrom(byte[] data) throws IOException {
    GetSignInStatusRsp c = null;
       c = GetSignInStatusRsp.ADAPTER.decode(data);
    return c;
  }

  /**
   * 0:表示成功
   */
  public Integer getRetCode() {
    if(retCode==null){
        return DEFAULT_RETCODE;
    }
    return retCode;
  }

  /**
   * 显示状态,0:不显示签到,1：显示签到
   */
  public Integer getDisplayStatus() {
    if(displayStatus==null){
        return DEFAULT_DISPLAYSTATUS;
    }
    return displayStatus;
  }

  /**
   * 签到状态,0:未签到,1:已签到
   */
  public Integer getSignInStatus() {
    if(signInStatus==null){
        return DEFAULT_SIGNINSTATUS;
    }
    return signInStatus;
  }

  /**
   * 签到跳转url
   */
  public String getSignInUrl() {
    if(signInUrl==null){
        return DEFAULT_SIGNINURL;
    }
    return signInUrl;
  }

  /**
   * 查询时间间隔,单位:秒
   */
  public Integer getQueryInterval() {
    if(queryInterval==null){
        return DEFAULT_QUERYINTERVAL;
    }
    return queryInterval;
  }

  /**
   * 0:表示成功
   */
  public boolean hasRetCode() {
    return retCode!=null;
  }

  /**
   * 显示状态,0:不显示签到,1：显示签到
   */
  public boolean hasDisplayStatus() {
    return displayStatus!=null;
  }

  /**
   * 签到状态,0:未签到,1:已签到
   */
  public boolean hasSignInStatus() {
    return signInStatus!=null;
  }

  /**
   * 签到跳转url
   */
  public boolean hasSignInUrl() {
    return signInUrl!=null;
  }

  /**
   * 查询时间间隔,单位:秒
   */
  public boolean hasQueryInterval() {
    return queryInterval!=null;
  }

  public static final class Builder extends Message.Builder<GetSignInStatusRsp, Builder> {
    public Integer retCode;

    public Integer displayStatus;

    public Integer signInStatus;

    public String signInUrl;

    public Integer queryInterval;

    public Builder() {
    }

    /**
     * 0:表示成功
     */
    public Builder setRetCode(Integer retCode) {
      this.retCode = retCode;
      return this;
    }

    /**
     * 显示状态,0:不显示签到,1：显示签到
     */
    public Builder setDisplayStatus(Integer displayStatus) {
      this.displayStatus = displayStatus;
      return this;
    }

    /**
     * 签到状态,0:未签到,1:已签到
     */
    public Builder setSignInStatus(Integer signInStatus) {
      this.signInStatus = signInStatus;
      return this;
    }

    /**
     * 签到跳转url
     */
    public Builder setSignInUrl(String signInUrl) {
      this.signInUrl = signInUrl;
      return this;
    }

    /**
     * 查询时间间隔,单位:秒
     */
    public Builder setQueryInterval(Integer queryInterval) {
      this.queryInterval = queryInterval;
      return this;
    }

    @Override
    public GetSignInStatusRsp build() {
      return new GetSignInStatusRsp(retCode, displayStatus, signInStatus, signInUrl, queryInterval, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetSignInStatusRsp extends ProtoAdapter<GetSignInStatusRsp> {
    public ProtoAdapter_GetSignInStatusRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetSignInStatusRsp.class);
    }

    @Override
    public int encodedSize(GetSignInStatusRsp value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.retCode)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.displayStatus)
          + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.signInStatus)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.signInUrl)
          + ProtoAdapter.UINT32.encodedSizeWithTag(5, value.queryInterval)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetSignInStatusRsp value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.retCode);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.displayStatus);
      ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.signInStatus);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.signInUrl);
      ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.queryInterval);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetSignInStatusRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRetCode(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.setDisplayStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.setSignInStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.setSignInUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.setQueryInterval(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetSignInStatusRsp redact(GetSignInStatusRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
