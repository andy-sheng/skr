// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CommonChannel.proto
package com.wali.live.proto.CommonChannel;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ChannelBanner extends Message<ChannelBanner, ChannelBanner.Builder> {
  public static final ProtoAdapter<ChannelBanner> ADAPTER = new ProtoAdapter_ChannelBanner();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_BG_URL = "";

  public static final String DEFAULT_LINK_URL = "";

  public static final String DEFAULT_DESC = "";

  /**
   * banner背景图片url
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String bg_url;

  /**
   * banner跳转url
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String link_url;

  /**
   * 描述信息
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String desc;

  public ChannelBanner(String bg_url, String link_url, String desc) {
    this(bg_url, link_url, desc, ByteString.EMPTY);
  }

  public ChannelBanner(String bg_url, String link_url, String desc, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.bg_url = bg_url;
    this.link_url = link_url;
    this.desc = desc;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.bg_url = bg_url;
    builder.link_url = link_url;
    builder.desc = desc;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ChannelBanner)) return false;
    ChannelBanner o = (ChannelBanner) other;
    return unknownFields().equals(o.unknownFields())
        && bg_url.equals(o.bg_url)
        && link_url.equals(o.link_url)
        && Internal.equals(desc, o.desc);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + bg_url.hashCode();
      result = result * 37 + link_url.hashCode();
      result = result * 37 + (desc != null ? desc.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", bg_url=").append(bg_url);
    builder.append(", link_url=").append(link_url);
    if (desc != null) builder.append(", desc=").append(desc);
    return builder.replace(0, 2, "ChannelBanner{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ChannelBanner.ADAPTER.encode(this);
  }

  public static final ChannelBanner parseFrom(byte[] data) throws IOException {
    ChannelBanner c = null;
       c = ChannelBanner.ADAPTER.decode(data);
    return c;
  }

  /**
   * banner背景图片url
   */
  public String getBgUrl() {
    if(bg_url==null){
        return DEFAULT_BG_URL;
    }
    return bg_url;
  }

  /**
   * banner跳转url
   */
  public String getLinkUrl() {
    if(link_url==null){
        return DEFAULT_LINK_URL;
    }
    return link_url;
  }

  /**
   * 描述信息
   */
  public String getDesc() {
    if(desc==null){
        return DEFAULT_DESC;
    }
    return desc;
  }

  /**
   * banner背景图片url
   */
  public boolean hasBgUrl() {
    return bg_url!=null;
  }

  /**
   * banner跳转url
   */
  public boolean hasLinkUrl() {
    return link_url!=null;
  }

  /**
   * 描述信息
   */
  public boolean hasDesc() {
    return desc!=null;
  }

  public static final class Builder extends Message.Builder<ChannelBanner, Builder> {
    public String bg_url;

    public String link_url;

    public String desc;

    public Builder() {
    }

    /**
     * banner背景图片url
     */
    public Builder setBgUrl(String bg_url) {
      this.bg_url = bg_url;
      return this;
    }

    /**
     * banner跳转url
     */
    public Builder setLinkUrl(String link_url) {
      this.link_url = link_url;
      return this;
    }

    /**
     * 描述信息
     */
    public Builder setDesc(String desc) {
      this.desc = desc;
      return this;
    }

    @Override
    public ChannelBanner build() {
      return new ChannelBanner(bg_url, link_url, desc, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ChannelBanner extends ProtoAdapter<ChannelBanner> {
    public ProtoAdapter_ChannelBanner() {
      super(FieldEncoding.LENGTH_DELIMITED, ChannelBanner.class);
    }

    @Override
    public int encodedSize(ChannelBanner value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.bg_url)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.link_url)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.desc)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ChannelBanner value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.bg_url);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.link_url);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.desc);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ChannelBanner decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setBgUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.setLinkUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.setDesc(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ChannelBanner redact(ChannelBanner value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
