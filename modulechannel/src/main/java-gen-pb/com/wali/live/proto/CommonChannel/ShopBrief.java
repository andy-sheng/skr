// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CommonChannel.proto
package com.wali.live.proto.CommonChannel;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 购物直播信息
 */
public final class ShopBrief extends Message<ShopBrief, ShopBrief.Builder> {
  public static final ProtoAdapter<ShopBrief> ADAPTER = new ProtoAdapter_ShopBrief();

  private static final long serialVersionUID = 0L;

  public static final Boolean DEFAULT_HIDEGOODS = false;

  public static final Integer DEFAULT_DESIREDCNT = 0;

  /**
   * 是否隐藏商品
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean hideGoods;

  /**
   * 想要购买人数
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer desiredCnt;

  public ShopBrief(Boolean hideGoods, Integer desiredCnt) {
    this(hideGoods, desiredCnt, ByteString.EMPTY);
  }

  public ShopBrief(Boolean hideGoods, Integer desiredCnt, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.hideGoods = hideGoods;
    this.desiredCnt = desiredCnt;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.hideGoods = hideGoods;
    builder.desiredCnt = desiredCnt;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ShopBrief)) return false;
    ShopBrief o = (ShopBrief) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(hideGoods, o.hideGoods)
        && Internal.equals(desiredCnt, o.desiredCnt);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (hideGoods != null ? hideGoods.hashCode() : 0);
      result = result * 37 + (desiredCnt != null ? desiredCnt.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (hideGoods != null) builder.append(", hideGoods=").append(hideGoods);
    if (desiredCnt != null) builder.append(", desiredCnt=").append(desiredCnt);
    return builder.replace(0, 2, "ShopBrief{").append('}').toString();
  }

  public byte[] toByteArray() {
    return ShopBrief.ADAPTER.encode(this);
  }

  public static final ShopBrief parseFrom(byte[] data) throws IOException {
    ShopBrief c = null;
       c = ShopBrief.ADAPTER.decode(data);
    return c;
  }

  /**
   * 是否隐藏商品
   */
  public Boolean getHideGoods() {
    if(hideGoods==null){
        return DEFAULT_HIDEGOODS;
    }
    return hideGoods;
  }

  /**
   * 想要购买人数
   */
  public Integer getDesiredCnt() {
    if(desiredCnt==null){
        return DEFAULT_DESIREDCNT;
    }
    return desiredCnt;
  }

  /**
   * 是否隐藏商品
   */
  public boolean hasHideGoods() {
    return hideGoods!=null;
  }

  /**
   * 想要购买人数
   */
  public boolean hasDesiredCnt() {
    return desiredCnt!=null;
  }

  public static final class Builder extends Message.Builder<ShopBrief, Builder> {
    public Boolean hideGoods;

    public Integer desiredCnt;

    public Builder() {
    }

    /**
     * 是否隐藏商品
     */
    public Builder setHideGoods(Boolean hideGoods) {
      this.hideGoods = hideGoods;
      return this;
    }

    /**
     * 想要购买人数
     */
    public Builder setDesiredCnt(Integer desiredCnt) {
      this.desiredCnt = desiredCnt;
      return this;
    }

    @Override
    public ShopBrief build() {
      return new ShopBrief(hideGoods, desiredCnt, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ShopBrief extends ProtoAdapter<ShopBrief> {
    public ProtoAdapter_ShopBrief() {
      super(FieldEncoding.LENGTH_DELIMITED, ShopBrief.class);
    }

    @Override
    public int encodedSize(ShopBrief value) {
      return ProtoAdapter.BOOL.encodedSizeWithTag(1, value.hideGoods)
          + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.desiredCnt)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ShopBrief value) throws IOException {
      ProtoAdapter.BOOL.encodeWithTag(writer, 1, value.hideGoods);
      ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.desiredCnt);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ShopBrief decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setHideGoods(ProtoAdapter.BOOL.decode(reader)); break;
          case 2: builder.setDesiredCnt(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ShopBrief redact(ShopBrief value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
