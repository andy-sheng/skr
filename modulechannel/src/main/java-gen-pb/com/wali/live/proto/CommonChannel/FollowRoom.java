// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CommonChannel.proto
package com.wali.live.proto.CommonChannel;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * type=5 extData填充内容
 */
public final class FollowRoom extends Message<FollowRoom, FollowRoom.Builder> {
  public static final ProtoAdapter<FollowRoom> ADAPTER = new ProtoAdapter_FollowRoom();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ENTERTIME = 0L;

  public static final Long DEFAULT_FOLLOWTIME = 0L;

  /**
   * 进入房间时间
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long enterTime;

  /**
   * 关注主播时间
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long followTime;

  public FollowRoom(Long enterTime, Long followTime) {
    this(enterTime, followTime, ByteString.EMPTY);
  }

  public FollowRoom(Long enterTime, Long followTime, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.enterTime = enterTime;
    this.followTime = followTime;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.enterTime = enterTime;
    builder.followTime = followTime;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof FollowRoom)) return false;
    FollowRoom o = (FollowRoom) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(enterTime, o.enterTime)
        && Internal.equals(followTime, o.followTime);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (enterTime != null ? enterTime.hashCode() : 0);
      result = result * 37 + (followTime != null ? followTime.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (enterTime != null) builder.append(", enterTime=").append(enterTime);
    if (followTime != null) builder.append(", followTime=").append(followTime);
    return builder.replace(0, 2, "FollowRoom{").append('}').toString();
  }

  public byte[] toByteArray() {
    return FollowRoom.ADAPTER.encode(this);
  }

  public static final FollowRoom parseFrom(byte[] data) throws IOException {
    FollowRoom c = null;
       c = FollowRoom.ADAPTER.decode(data);
    return c;
  }

  /**
   * 进入房间时间
   */
  public Long getEnterTime() {
    if(enterTime==null){
        return DEFAULT_ENTERTIME;
    }
    return enterTime;
  }

  /**
   * 关注主播时间
   */
  public Long getFollowTime() {
    if(followTime==null){
        return DEFAULT_FOLLOWTIME;
    }
    return followTime;
  }

  /**
   * 进入房间时间
   */
  public boolean hasEnterTime() {
    return enterTime!=null;
  }

  /**
   * 关注主播时间
   */
  public boolean hasFollowTime() {
    return followTime!=null;
  }

  public static final class Builder extends Message.Builder<FollowRoom, Builder> {
    public Long enterTime;

    public Long followTime;

    public Builder() {
    }

    /**
     * 进入房间时间
     */
    public Builder setEnterTime(Long enterTime) {
      this.enterTime = enterTime;
      return this;
    }

    /**
     * 关注主播时间
     */
    public Builder setFollowTime(Long followTime) {
      this.followTime = followTime;
      return this;
    }

    @Override
    public FollowRoom build() {
      return new FollowRoom(enterTime, followTime, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_FollowRoom extends ProtoAdapter<FollowRoom> {
    public ProtoAdapter_FollowRoom() {
      super(FieldEncoding.LENGTH_DELIMITED, FollowRoom.class);
    }

    @Override
    public int encodedSize(FollowRoom value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.enterTime)
          + ProtoAdapter.UINT64.encodedSizeWithTag(2, value.followTime)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, FollowRoom value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.enterTime);
      ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.followTime);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public FollowRoom decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setEnterTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.setFollowTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public FollowRoom redact(FollowRoom value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
