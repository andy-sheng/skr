// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CommonChannel.proto
package com.wali.live.proto.CommonChannel;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GetWaterfallSubListRsp extends Message<GetWaterfallSubListRsp, GetWaterfallSubListRsp.Builder> {
  public static final ProtoAdapter<GetWaterfallSubListRsp> ADAPTER = new ProtoAdapter_GetWaterfallSubListRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RET = 0;

  public static final ByteString DEFAULT_PARAM = ByteString.EMPTY;

  public static final Boolean DEFAULT_HAS_MORE = false;

  /**
   * 返回码
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REQUIRED
  )
  public final Integer ret;

  /**
   * 数据
   */
  @WireField(
      tag = 2,
      adapter = "com.wali.live.proto.CommonChannel.WatElement#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<WatElement> elem;

  /**
   * 拉列表算法参数[客户端不用关心，下一次请求透传给服务器]
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES"
  )
  public final ByteString param;

  /**
   * 是否有更多小视频
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean has_more;

  public GetWaterfallSubListRsp(Integer ret, List<WatElement> elem, ByteString param,
      Boolean has_more) {
    this(ret, elem, param, has_more, ByteString.EMPTY);
  }

  public GetWaterfallSubListRsp(Integer ret, List<WatElement> elem, ByteString param,
      Boolean has_more, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.ret = ret;
    this.elem = Internal.immutableCopyOf("elem", elem);
    this.param = param;
    this.has_more = has_more;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.ret = ret;
    builder.elem = Internal.copyOf("elem", elem);
    builder.param = param;
    builder.has_more = has_more;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetWaterfallSubListRsp)) return false;
    GetWaterfallSubListRsp o = (GetWaterfallSubListRsp) other;
    return unknownFields().equals(o.unknownFields())
        && ret.equals(o.ret)
        && elem.equals(o.elem)
        && Internal.equals(param, o.param)
        && Internal.equals(has_more, o.has_more);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + ret.hashCode();
      result = result * 37 + elem.hashCode();
      result = result * 37 + (param != null ? param.hashCode() : 0);
      result = result * 37 + (has_more != null ? has_more.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", ret=").append(ret);
    if (!elem.isEmpty()) builder.append(", elem=").append(elem);
    if (param != null) builder.append(", param=").append(param);
    if (has_more != null) builder.append(", has_more=").append(has_more);
    return builder.replace(0, 2, "GetWaterfallSubListRsp{").append('}').toString();
  }

  public static final GetWaterfallSubListRsp parseFrom(byte[] data) throws IOException {
    GetWaterfallSubListRsp c = null;
       c = GetWaterfallSubListRsp.ADAPTER.decode(data);
    return c;
  }

  /**
   * 返回码
   */
  public Integer getRet() {
    if(ret==null){
        return DEFAULT_RET;
    }
    return ret;
  }

  /**
   * 数据
   */
  public List<WatElement> getElemList() {
    if(elem==null){
        return new java.util.ArrayList<WatElement>();
    }
    return elem;
  }

  /**
   * 拉列表算法参数[客户端不用关心，下一次请求透传给服务器]
   */
  public ByteString getParam() {
    if(param==null){
        return ByteString.of(new byte[0]);
    }
    return param;
  }

  /**
   * 是否有更多小视频
   */
  public Boolean getHasMore() {
    if(has_more==null){
        return DEFAULT_HAS_MORE;
    }
    return has_more;
  }

  /**
   * 返回码
   */
  public boolean hasRet() {
    return ret!=null;
  }

  /**
   * 数据
   */
  public boolean hasElemList() {
    return elem!=null;
  }

  /**
   * 拉列表算法参数[客户端不用关心，下一次请求透传给服务器]
   */
  public boolean hasParam() {
    return param!=null;
  }

  /**
   * 是否有更多小视频
   */
  public boolean hasHasMore() {
    return has_more!=null;
  }

  public static final class Builder extends Message.Builder<GetWaterfallSubListRsp, Builder> {
    public Integer ret;

    public List<WatElement> elem;

    public ByteString param;

    public Boolean has_more;

    public Builder() {
      elem = Internal.newMutableList();
    }

    /**
     * 返回码
     */
    public Builder setRet(Integer ret) {
      this.ret = ret;
      return this;
    }

    /**
     * 数据
     */
    public Builder addAllElem(List<WatElement> elem) {
      Internal.checkElementsNotNull(elem);
      this.elem = elem;
      return this;
    }

    /**
     * 拉列表算法参数[客户端不用关心，下一次请求透传给服务器]
     */
    public Builder setParam(ByteString param) {
      this.param = param;
      return this;
    }

    /**
     * 是否有更多小视频
     */
    public Builder setHasMore(Boolean has_more) {
      this.has_more = has_more;
      return this;
    }

    @Override
    public GetWaterfallSubListRsp build() {
      return new GetWaterfallSubListRsp(ret, elem, param, has_more, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetWaterfallSubListRsp extends ProtoAdapter<GetWaterfallSubListRsp> {
    public ProtoAdapter_GetWaterfallSubListRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetWaterfallSubListRsp.class);
    }

    @Override
    public int encodedSize(GetWaterfallSubListRsp value) {
      return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.ret)
          + WatElement.ADAPTER.asRepeated().encodedSizeWithTag(2, value.elem)
          + ProtoAdapter.BYTES.encodedSizeWithTag(3, value.param)
          + ProtoAdapter.BOOL.encodedSizeWithTag(4, value.has_more)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetWaterfallSubListRsp value) throws IOException {
      ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.ret);
      WatElement.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.elem);
      ProtoAdapter.BYTES.encodeWithTag(writer, 3, value.param);
      ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.has_more);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetWaterfallSubListRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setRet(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.elem.add(WatElement.ADAPTER.decode(reader)); break;
          case 3: builder.setParam(ProtoAdapter.BYTES.decode(reader)); break;
          case 4: builder.setHasMore(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetWaterfallSubListRsp redact(GetWaterfallSubListRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.elem, WatElement.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
