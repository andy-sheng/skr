// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CommonChannel.proto
package com.wali.live.proto.CommonChannel;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class UserInfoItemData extends Message<UserInfoItemData, UserInfoItemData.Builder> {
  public static final ProtoAdapter<UserInfoItemData> ADAPTER = new ProtoAdapter_UserInfoItemData();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_JUMPSCHEMEURI = "";

  public static final String DEFAULT_DESC = "";

  public static final String DEFAULT_DESC_BG_COLOR = "";

  public static final String DEFAULT_AVATAR_LAYER_COLOR = "";

  /**
   * 用户资料
   */
  @WireField(
      tag = 1,
      adapter = "com.wali.live.proto.CommonChannel.UserInfo#ADAPTER"
  )
  public final UserInfo userInfo;

  /**
   * 跳转的schemeUri
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String jumpSchemeUri;

  /**
   * 描述，如世姐赛区
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String desc;

  /**
   * 描述底色
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String desc_bg_color;

  /**
   * 头像圆圈颜色
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String avatar_layer_color;

  public UserInfoItemData(UserInfo userInfo, String jumpSchemeUri, String desc,
      String desc_bg_color, String avatar_layer_color) {
    this(userInfo, jumpSchemeUri, desc, desc_bg_color, avatar_layer_color, ByteString.EMPTY);
  }

  public UserInfoItemData(UserInfo userInfo, String jumpSchemeUri, String desc,
      String desc_bg_color, String avatar_layer_color, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.userInfo = userInfo;
    this.jumpSchemeUri = jumpSchemeUri;
    this.desc = desc;
    this.desc_bg_color = desc_bg_color;
    this.avatar_layer_color = avatar_layer_color;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.userInfo = userInfo;
    builder.jumpSchemeUri = jumpSchemeUri;
    builder.desc = desc;
    builder.desc_bg_color = desc_bg_color;
    builder.avatar_layer_color = avatar_layer_color;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserInfoItemData)) return false;
    UserInfoItemData o = (UserInfoItemData) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(userInfo, o.userInfo)
        && Internal.equals(jumpSchemeUri, o.jumpSchemeUri)
        && Internal.equals(desc, o.desc)
        && Internal.equals(desc_bg_color, o.desc_bg_color)
        && Internal.equals(avatar_layer_color, o.avatar_layer_color);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (userInfo != null ? userInfo.hashCode() : 0);
      result = result * 37 + (jumpSchemeUri != null ? jumpSchemeUri.hashCode() : 0);
      result = result * 37 + (desc != null ? desc.hashCode() : 0);
      result = result * 37 + (desc_bg_color != null ? desc_bg_color.hashCode() : 0);
      result = result * 37 + (avatar_layer_color != null ? avatar_layer_color.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (userInfo != null) builder.append(", userInfo=").append(userInfo);
    if (jumpSchemeUri != null) builder.append(", jumpSchemeUri=").append(jumpSchemeUri);
    if (desc != null) builder.append(", desc=").append(desc);
    if (desc_bg_color != null) builder.append(", desc_bg_color=").append(desc_bg_color);
    if (avatar_layer_color != null) builder.append(", avatar_layer_color=").append(avatar_layer_color);
    return builder.replace(0, 2, "UserInfoItemData{").append('}').toString();
  }

  public byte[] toByteArray() {
    return UserInfoItemData.ADAPTER.encode(this);
  }

  public static final UserInfoItemData parseFrom(byte[] data) throws IOException {
    UserInfoItemData c = null;
       c = UserInfoItemData.ADAPTER.decode(data);
    return c;
  }

  /**
   * 用户资料
   */
  public UserInfo getUserInfo() {
    if(userInfo==null){
        return new UserInfo.Builder().build();
    }
    return userInfo;
  }

  /**
   * 跳转的schemeUri
   */
  public String getJumpSchemeUri() {
    if(jumpSchemeUri==null){
        return DEFAULT_JUMPSCHEMEURI;
    }
    return jumpSchemeUri;
  }

  /**
   * 描述，如世姐赛区
   */
  public String getDesc() {
    if(desc==null){
        return DEFAULT_DESC;
    }
    return desc;
  }

  /**
   * 描述底色
   */
  public String getDescBgColor() {
    if(desc_bg_color==null){
        return DEFAULT_DESC_BG_COLOR;
    }
    return desc_bg_color;
  }

  /**
   * 头像圆圈颜色
   */
  public String getAvatarLayerColor() {
    if(avatar_layer_color==null){
        return DEFAULT_AVATAR_LAYER_COLOR;
    }
    return avatar_layer_color;
  }

  /**
   * 用户资料
   */
  public boolean hasUserInfo() {
    return userInfo!=null;
  }

  /**
   * 跳转的schemeUri
   */
  public boolean hasJumpSchemeUri() {
    return jumpSchemeUri!=null;
  }

  /**
   * 描述，如世姐赛区
   */
  public boolean hasDesc() {
    return desc!=null;
  }

  /**
   * 描述底色
   */
  public boolean hasDescBgColor() {
    return desc_bg_color!=null;
  }

  /**
   * 头像圆圈颜色
   */
  public boolean hasAvatarLayerColor() {
    return avatar_layer_color!=null;
  }

  public static final class Builder extends Message.Builder<UserInfoItemData, Builder> {
    public UserInfo userInfo;

    public String jumpSchemeUri;

    public String desc;

    public String desc_bg_color;

    public String avatar_layer_color;

    public Builder() {
    }

    /**
     * 用户资料
     */
    public Builder setUserInfo(UserInfo userInfo) {
      this.userInfo = userInfo;
      return this;
    }

    /**
     * 跳转的schemeUri
     */
    public Builder setJumpSchemeUri(String jumpSchemeUri) {
      this.jumpSchemeUri = jumpSchemeUri;
      return this;
    }

    /**
     * 描述，如世姐赛区
     */
    public Builder setDesc(String desc) {
      this.desc = desc;
      return this;
    }

    /**
     * 描述底色
     */
    public Builder setDescBgColor(String desc_bg_color) {
      this.desc_bg_color = desc_bg_color;
      return this;
    }

    /**
     * 头像圆圈颜色
     */
    public Builder setAvatarLayerColor(String avatar_layer_color) {
      this.avatar_layer_color = avatar_layer_color;
      return this;
    }

    @Override
    public UserInfoItemData build() {
      return new UserInfoItemData(userInfo, jumpSchemeUri, desc, desc_bg_color, avatar_layer_color, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserInfoItemData extends ProtoAdapter<UserInfoItemData> {
    public ProtoAdapter_UserInfoItemData() {
      super(FieldEncoding.LENGTH_DELIMITED, UserInfoItemData.class);
    }

    @Override
    public int encodedSize(UserInfoItemData value) {
      return UserInfo.ADAPTER.encodedSizeWithTag(1, value.userInfo)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.jumpSchemeUri)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.desc)
          + ProtoAdapter.STRING.encodedSizeWithTag(4, value.desc_bg_color)
          + ProtoAdapter.STRING.encodedSizeWithTag(5, value.avatar_layer_color)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserInfoItemData value) throws IOException {
      UserInfo.ADAPTER.encodeWithTag(writer, 1, value.userInfo);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.jumpSchemeUri);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.desc);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.desc_bg_color);
      ProtoAdapter.STRING.encodeWithTag(writer, 5, value.avatar_layer_color);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserInfoItemData decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.setUserInfo(UserInfo.ADAPTER.decode(reader)); break;
          case 2: builder.setJumpSchemeUri(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.setDesc(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.setDescBgColor(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.setAvatarLayerColor(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserInfoItemData redact(UserInfoItemData value) {
      Builder builder = value.newBuilder();
      if (builder.userInfo != null) builder.userInfo = UserInfo.ADAPTER.redact(builder.userInfo);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
