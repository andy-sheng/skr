// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LiveMic.proto

package com.wali.live.proto;

public final class LiveMicProto {
  private LiveMicProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MicSubViewPosOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.MicSubViewPos)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float topXScale = 1;</code>
     *
     * <pre>
     *子视图左上角X在实际推流视频中的比例
     * </pre>
     */
    boolean hasTopXScale();
    /**
     * <code>required float topXScale = 1;</code>
     *
     * <pre>
     *子视图左上角X在实际推流视频中的比例
     * </pre>
     */
    float getTopXScale();

    /**
     * <code>required float topYScale = 2;</code>
     *
     * <pre>
     *子视图左上角Y在实际推流视频中的比例
     * </pre>
     */
    boolean hasTopYScale();
    /**
     * <code>required float topYScale = 2;</code>
     *
     * <pre>
     *子视图左上角Y在实际推流视频中的比例
     * </pre>
     */
    float getTopYScale();

    /**
     * <code>required float widthScale = 3;</code>
     *
     * <pre>
     *子视图宽度在实际推流视频中的比例
     * </pre>
     */
    boolean hasWidthScale();
    /**
     * <code>required float widthScale = 3;</code>
     *
     * <pre>
     *子视图宽度在实际推流视频中的比例
     * </pre>
     */
    float getWidthScale();

    /**
     * <code>required float heightScale = 4;</code>
     *
     * <pre>
     *子视图高度左上角在推流视频中的比例
     * </pre>
     */
    boolean hasHeightScale();
    /**
     * <code>required float heightScale = 4;</code>
     *
     * <pre>
     *子视图高度左上角在推流视频中的比例
     * </pre>
     */
    float getHeightScale();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.MicSubViewPos}
   */
  public static final class MicSubViewPos extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.MicSubViewPos)
      MicSubViewPosOrBuilder {
    // Use MicSubViewPos.newBuilder() to construct.
    private MicSubViewPos(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MicSubViewPos(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MicSubViewPos defaultInstance;
    public static MicSubViewPos getDefaultInstance() {
      return defaultInstance;
    }

    public MicSubViewPos getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MicSubViewPos(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              topXScale_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              topYScale_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              widthScale_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              heightScale_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicSubViewPos_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicSubViewPos_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.LiveMicProto.MicSubViewPos.class, com.wali.live.proto.LiveMicProto.MicSubViewPos.Builder.class);
    }

    public static com.google.protobuf.Parser<MicSubViewPos> PARSER =
        new com.google.protobuf.AbstractParser<MicSubViewPos>() {
      public MicSubViewPos parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MicSubViewPos(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MicSubViewPos> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TOPXSCALE_FIELD_NUMBER = 1;
    private float topXScale_;
    /**
     * <code>required float topXScale = 1;</code>
     *
     * <pre>
     *子视图左上角X在实际推流视频中的比例
     * </pre>
     */
    public boolean hasTopXScale() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float topXScale = 1;</code>
     *
     * <pre>
     *子视图左上角X在实际推流视频中的比例
     * </pre>
     */
    public float getTopXScale() {
      return topXScale_;
    }

    public static final int TOPYSCALE_FIELD_NUMBER = 2;
    private float topYScale_;
    /**
     * <code>required float topYScale = 2;</code>
     *
     * <pre>
     *子视图左上角Y在实际推流视频中的比例
     * </pre>
     */
    public boolean hasTopYScale() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float topYScale = 2;</code>
     *
     * <pre>
     *子视图左上角Y在实际推流视频中的比例
     * </pre>
     */
    public float getTopYScale() {
      return topYScale_;
    }

    public static final int WIDTHSCALE_FIELD_NUMBER = 3;
    private float widthScale_;
    /**
     * <code>required float widthScale = 3;</code>
     *
     * <pre>
     *子视图宽度在实际推流视频中的比例
     * </pre>
     */
    public boolean hasWidthScale() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float widthScale = 3;</code>
     *
     * <pre>
     *子视图宽度在实际推流视频中的比例
     * </pre>
     */
    public float getWidthScale() {
      return widthScale_;
    }

    public static final int HEIGHTSCALE_FIELD_NUMBER = 4;
    private float heightScale_;
    /**
     * <code>required float heightScale = 4;</code>
     *
     * <pre>
     *子视图高度左上角在推流视频中的比例
     * </pre>
     */
    public boolean hasHeightScale() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float heightScale = 4;</code>
     *
     * <pre>
     *子视图高度左上角在推流视频中的比例
     * </pre>
     */
    public float getHeightScale() {
      return heightScale_;
    }

    private void initFields() {
      topXScale_ = 0F;
      topYScale_ = 0F;
      widthScale_ = 0F;
      heightScale_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTopXScale()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTopYScale()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWidthScale()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeightScale()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, topXScale_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, topYScale_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, widthScale_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, heightScale_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, topXScale_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, topYScale_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, widthScale_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, heightScale_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicSubViewPos parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.LiveMicProto.MicSubViewPos prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.MicSubViewPos}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.MicSubViewPos)
        com.wali.live.proto.LiveMicProto.MicSubViewPosOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicSubViewPos_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicSubViewPos_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.LiveMicProto.MicSubViewPos.class, com.wali.live.proto.LiveMicProto.MicSubViewPos.Builder.class);
      }

      // Construct using com.wali.live.proto.LiveMicProto.MicSubViewPos.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topXScale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        topYScale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        widthScale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        heightScale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicSubViewPos_descriptor;
      }

      public com.wali.live.proto.LiveMicProto.MicSubViewPos getDefaultInstanceForType() {
        return com.wali.live.proto.LiveMicProto.MicSubViewPos.getDefaultInstance();
      }

      public com.wali.live.proto.LiveMicProto.MicSubViewPos build() {
        com.wali.live.proto.LiveMicProto.MicSubViewPos result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.LiveMicProto.MicSubViewPos buildPartial() {
        com.wali.live.proto.LiveMicProto.MicSubViewPos result = new com.wali.live.proto.LiveMicProto.MicSubViewPos(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topXScale_ = topXScale_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.topYScale_ = topYScale_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.widthScale_ = widthScale_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.heightScale_ = heightScale_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.LiveMicProto.MicSubViewPos) {
          return mergeFrom((com.wali.live.proto.LiveMicProto.MicSubViewPos)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.LiveMicProto.MicSubViewPos other) {
        if (other == com.wali.live.proto.LiveMicProto.MicSubViewPos.getDefaultInstance()) return this;
        if (other.hasTopXScale()) {
          setTopXScale(other.getTopXScale());
        }
        if (other.hasTopYScale()) {
          setTopYScale(other.getTopYScale());
        }
        if (other.hasWidthScale()) {
          setWidthScale(other.getWidthScale());
        }
        if (other.hasHeightScale()) {
          setHeightScale(other.getHeightScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTopXScale()) {
          
          return false;
        }
        if (!hasTopYScale()) {
          
          return false;
        }
        if (!hasWidthScale()) {
          
          return false;
        }
        if (!hasHeightScale()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.LiveMicProto.MicSubViewPos parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.LiveMicProto.MicSubViewPos) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float topXScale_ ;
      /**
       * <code>required float topXScale = 1;</code>
       *
       * <pre>
       *子视图左上角X在实际推流视频中的比例
       * </pre>
       */
      public boolean hasTopXScale() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float topXScale = 1;</code>
       *
       * <pre>
       *子视图左上角X在实际推流视频中的比例
       * </pre>
       */
      public float getTopXScale() {
        return topXScale_;
      }
      /**
       * <code>required float topXScale = 1;</code>
       *
       * <pre>
       *子视图左上角X在实际推流视频中的比例
       * </pre>
       */
      public Builder setTopXScale(float value) {
        bitField0_ |= 0x00000001;
        topXScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float topXScale = 1;</code>
       *
       * <pre>
       *子视图左上角X在实际推流视频中的比例
       * </pre>
       */
      public Builder clearTopXScale() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topXScale_ = 0F;
        onChanged();
        return this;
      }

      private float topYScale_ ;
      /**
       * <code>required float topYScale = 2;</code>
       *
       * <pre>
       *子视图左上角Y在实际推流视频中的比例
       * </pre>
       */
      public boolean hasTopYScale() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float topYScale = 2;</code>
       *
       * <pre>
       *子视图左上角Y在实际推流视频中的比例
       * </pre>
       */
      public float getTopYScale() {
        return topYScale_;
      }
      /**
       * <code>required float topYScale = 2;</code>
       *
       * <pre>
       *子视图左上角Y在实际推流视频中的比例
       * </pre>
       */
      public Builder setTopYScale(float value) {
        bitField0_ |= 0x00000002;
        topYScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float topYScale = 2;</code>
       *
       * <pre>
       *子视图左上角Y在实际推流视频中的比例
       * </pre>
       */
      public Builder clearTopYScale() {
        bitField0_ = (bitField0_ & ~0x00000002);
        topYScale_ = 0F;
        onChanged();
        return this;
      }

      private float widthScale_ ;
      /**
       * <code>required float widthScale = 3;</code>
       *
       * <pre>
       *子视图宽度在实际推流视频中的比例
       * </pre>
       */
      public boolean hasWidthScale() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float widthScale = 3;</code>
       *
       * <pre>
       *子视图宽度在实际推流视频中的比例
       * </pre>
       */
      public float getWidthScale() {
        return widthScale_;
      }
      /**
       * <code>required float widthScale = 3;</code>
       *
       * <pre>
       *子视图宽度在实际推流视频中的比例
       * </pre>
       */
      public Builder setWidthScale(float value) {
        bitField0_ |= 0x00000004;
        widthScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float widthScale = 3;</code>
       *
       * <pre>
       *子视图宽度在实际推流视频中的比例
       * </pre>
       */
      public Builder clearWidthScale() {
        bitField0_ = (bitField0_ & ~0x00000004);
        widthScale_ = 0F;
        onChanged();
        return this;
      }

      private float heightScale_ ;
      /**
       * <code>required float heightScale = 4;</code>
       *
       * <pre>
       *子视图高度左上角在推流视频中的比例
       * </pre>
       */
      public boolean hasHeightScale() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float heightScale = 4;</code>
       *
       * <pre>
       *子视图高度左上角在推流视频中的比例
       * </pre>
       */
      public float getHeightScale() {
        return heightScale_;
      }
      /**
       * <code>required float heightScale = 4;</code>
       *
       * <pre>
       *子视图高度左上角在推流视频中的比例
       * </pre>
       */
      public Builder setHeightScale(float value) {
        bitField0_ |= 0x00000008;
        heightScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float heightScale = 4;</code>
       *
       * <pre>
       *子视图高度左上角在推流视频中的比例
       * </pre>
       */
      public Builder clearHeightScale() {
        bitField0_ = (bitField0_ & ~0x00000008);
        heightScale_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.MicSubViewPos)
    }

    static {
      defaultInstance = new MicSubViewPos(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.MicSubViewPos)
  }

  public interface MicInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.MicInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 micuid = 1;</code>
     *
     * <pre>
     *连麦的观众id
     * </pre>
     */
    boolean hasMicuid();
    /**
     * <code>required uint64 micuid = 1;</code>
     *
     * <pre>
     *连麦的观众id
     * </pre>
     */
    long getMicuid();

    /**
     * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
     *
     * <pre>
     *子视图的比例位置
     * </pre>
     */
    boolean hasSubViewPos();
    /**
     * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
     *
     * <pre>
     *子视图的比例位置
     * </pre>
     */
    com.wali.live.proto.LiveMicProto.MicSubViewPos getSubViewPos();
    /**
     * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
     *
     * <pre>
     *子视图的比例位置
     * </pre>
     */
    com.wali.live.proto.LiveMicProto.MicSubViewPosOrBuilder getSubViewPosOrBuilder();

    /**
     * <code>optional string mic_liveid = 3;</code>
     *
     * <pre>
     *连麦对方房间号
     * </pre>
     */
    boolean hasMicLiveid();
    /**
     * <code>optional string mic_liveid = 3;</code>
     *
     * <pre>
     *连麦对方房间号
     * </pre>
     */
    java.lang.String getMicLiveid();
    /**
     * <code>optional string mic_liveid = 3;</code>
     *
     * <pre>
     *连麦对方房间号
     * </pre>
     */
    com.google.protobuf.ByteString
        getMicLiveidBytes();

    /**
     * <code>optional uint32 type = 4;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional uint32 type = 4;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.MicInfo}
   */
  public static final class MicInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.MicInfo)
      MicInfoOrBuilder {
    // Use MicInfo.newBuilder() to construct.
    private MicInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MicInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MicInfo defaultInstance;
    public static MicInfo getDefaultInstance() {
      return defaultInstance;
    }

    public MicInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MicInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              micuid_ = input.readUInt64();
              break;
            }
            case 18: {
              com.wali.live.proto.LiveMicProto.MicSubViewPos.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = subViewPos_.toBuilder();
              }
              subViewPos_ = input.readMessage(com.wali.live.proto.LiveMicProto.MicSubViewPos.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subViewPos_);
                subViewPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              micLiveid_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              type_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.LiveMicProto.MicInfo.class, com.wali.live.proto.LiveMicProto.MicInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<MicInfo> PARSER =
        new com.google.protobuf.AbstractParser<MicInfo>() {
      public MicInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MicInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MicInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MICUID_FIELD_NUMBER = 1;
    private long micuid_;
    /**
     * <code>required uint64 micuid = 1;</code>
     *
     * <pre>
     *连麦的观众id
     * </pre>
     */
    public boolean hasMicuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 micuid = 1;</code>
     *
     * <pre>
     *连麦的观众id
     * </pre>
     */
    public long getMicuid() {
      return micuid_;
    }

    public static final int SUBVIEWPOS_FIELD_NUMBER = 2;
    private com.wali.live.proto.LiveMicProto.MicSubViewPos subViewPos_;
    /**
     * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
     *
     * <pre>
     *子视图的比例位置
     * </pre>
     */
    public boolean hasSubViewPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
     *
     * <pre>
     *子视图的比例位置
     * </pre>
     */
    public com.wali.live.proto.LiveMicProto.MicSubViewPos getSubViewPos() {
      return subViewPos_;
    }
    /**
     * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
     *
     * <pre>
     *子视图的比例位置
     * </pre>
     */
    public com.wali.live.proto.LiveMicProto.MicSubViewPosOrBuilder getSubViewPosOrBuilder() {
      return subViewPos_;
    }

    public static final int MIC_LIVEID_FIELD_NUMBER = 3;
    private java.lang.Object micLiveid_;
    /**
     * <code>optional string mic_liveid = 3;</code>
     *
     * <pre>
     *连麦对方房间号
     * </pre>
     */
    public boolean hasMicLiveid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string mic_liveid = 3;</code>
     *
     * <pre>
     *连麦对方房间号
     * </pre>
     */
    public java.lang.String getMicLiveid() {
      java.lang.Object ref = micLiveid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          micLiveid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mic_liveid = 3;</code>
     *
     * <pre>
     *连麦对方房间号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMicLiveidBytes() {
      java.lang.Object ref = micLiveid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        micLiveid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <code>optional uint32 type = 4;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 type = 4;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      micuid_ = 0L;
      subViewPos_ = com.wali.live.proto.LiveMicProto.MicSubViewPos.getDefaultInstance();
      micLiveid_ = "";
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMicuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSubViewPos()) {
        if (!getSubViewPos().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, micuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, subViewPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMicLiveidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, micuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, subViewPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMicLiveidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.LiveMicProto.MicInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.LiveMicProto.MicInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.LiveMicProto.MicInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.LiveMicProto.MicInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.MicInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.MicInfo)
        com.wali.live.proto.LiveMicProto.MicInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.LiveMicProto.MicInfo.class, com.wali.live.proto.LiveMicProto.MicInfo.Builder.class);
      }

      // Construct using com.wali.live.proto.LiveMicProto.MicInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSubViewPosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        micuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (subViewPosBuilder_ == null) {
          subViewPos_ = com.wali.live.proto.LiveMicProto.MicSubViewPos.getDefaultInstance();
        } else {
          subViewPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        micLiveid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicInfo_descriptor;
      }

      public com.wali.live.proto.LiveMicProto.MicInfo getDefaultInstanceForType() {
        return com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance();
      }

      public com.wali.live.proto.LiveMicProto.MicInfo build() {
        com.wali.live.proto.LiveMicProto.MicInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.LiveMicProto.MicInfo buildPartial() {
        com.wali.live.proto.LiveMicProto.MicInfo result = new com.wali.live.proto.LiveMicProto.MicInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.micuid_ = micuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (subViewPosBuilder_ == null) {
          result.subViewPos_ = subViewPos_;
        } else {
          result.subViewPos_ = subViewPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.micLiveid_ = micLiveid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.LiveMicProto.MicInfo) {
          return mergeFrom((com.wali.live.proto.LiveMicProto.MicInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.LiveMicProto.MicInfo other) {
        if (other == com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance()) return this;
        if (other.hasMicuid()) {
          setMicuid(other.getMicuid());
        }
        if (other.hasSubViewPos()) {
          mergeSubViewPos(other.getSubViewPos());
        }
        if (other.hasMicLiveid()) {
          bitField0_ |= 0x00000004;
          micLiveid_ = other.micLiveid_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMicuid()) {
          
          return false;
        }
        if (hasSubViewPos()) {
          if (!getSubViewPos().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.LiveMicProto.MicInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.LiveMicProto.MicInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long micuid_ ;
      /**
       * <code>required uint64 micuid = 1;</code>
       *
       * <pre>
       *连麦的观众id
       * </pre>
       */
      public boolean hasMicuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 micuid = 1;</code>
       *
       * <pre>
       *连麦的观众id
       * </pre>
       */
      public long getMicuid() {
        return micuid_;
      }
      /**
       * <code>required uint64 micuid = 1;</code>
       *
       * <pre>
       *连麦的观众id
       * </pre>
       */
      public Builder setMicuid(long value) {
        bitField0_ |= 0x00000001;
        micuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 micuid = 1;</code>
       *
       * <pre>
       *连麦的观众id
       * </pre>
       */
      public Builder clearMicuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        micuid_ = 0L;
        onChanged();
        return this;
      }

      private com.wali.live.proto.LiveMicProto.MicSubViewPos subViewPos_ = com.wali.live.proto.LiveMicProto.MicSubViewPos.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.LiveMicProto.MicSubViewPos, com.wali.live.proto.LiveMicProto.MicSubViewPos.Builder, com.wali.live.proto.LiveMicProto.MicSubViewPosOrBuilder> subViewPosBuilder_;
      /**
       * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
       *
       * <pre>
       *子视图的比例位置
       * </pre>
       */
      public boolean hasSubViewPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
       *
       * <pre>
       *子视图的比例位置
       * </pre>
       */
      public com.wali.live.proto.LiveMicProto.MicSubViewPos getSubViewPos() {
        if (subViewPosBuilder_ == null) {
          return subViewPos_;
        } else {
          return subViewPosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
       *
       * <pre>
       *子视图的比例位置
       * </pre>
       */
      public Builder setSubViewPos(com.wali.live.proto.LiveMicProto.MicSubViewPos value) {
        if (subViewPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subViewPos_ = value;
          onChanged();
        } else {
          subViewPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
       *
       * <pre>
       *子视图的比例位置
       * </pre>
       */
      public Builder setSubViewPos(
          com.wali.live.proto.LiveMicProto.MicSubViewPos.Builder builderForValue) {
        if (subViewPosBuilder_ == null) {
          subViewPos_ = builderForValue.build();
          onChanged();
        } else {
          subViewPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
       *
       * <pre>
       *子视图的比例位置
       * </pre>
       */
      public Builder mergeSubViewPos(com.wali.live.proto.LiveMicProto.MicSubViewPos value) {
        if (subViewPosBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              subViewPos_ != com.wali.live.proto.LiveMicProto.MicSubViewPos.getDefaultInstance()) {
            subViewPos_ =
              com.wali.live.proto.LiveMicProto.MicSubViewPos.newBuilder(subViewPos_).mergeFrom(value).buildPartial();
          } else {
            subViewPos_ = value;
          }
          onChanged();
        } else {
          subViewPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
       *
       * <pre>
       *子视图的比例位置
       * </pre>
       */
      public Builder clearSubViewPos() {
        if (subViewPosBuilder_ == null) {
          subViewPos_ = com.wali.live.proto.LiveMicProto.MicSubViewPos.getDefaultInstance();
          onChanged();
        } else {
          subViewPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
       *
       * <pre>
       *子视图的比例位置
       * </pre>
       */
      public com.wali.live.proto.LiveMicProto.MicSubViewPos.Builder getSubViewPosBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSubViewPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
       *
       * <pre>
       *子视图的比例位置
       * </pre>
       */
      public com.wali.live.proto.LiveMicProto.MicSubViewPosOrBuilder getSubViewPosOrBuilder() {
        if (subViewPosBuilder_ != null) {
          return subViewPosBuilder_.getMessageOrBuilder();
        } else {
          return subViewPos_;
        }
      }
      /**
       * <code>optional .com.wali.live.proto.MicSubViewPos subViewPos = 2;</code>
       *
       * <pre>
       *子视图的比例位置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.LiveMicProto.MicSubViewPos, com.wali.live.proto.LiveMicProto.MicSubViewPos.Builder, com.wali.live.proto.LiveMicProto.MicSubViewPosOrBuilder> 
          getSubViewPosFieldBuilder() {
        if (subViewPosBuilder_ == null) {
          subViewPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wali.live.proto.LiveMicProto.MicSubViewPos, com.wali.live.proto.LiveMicProto.MicSubViewPos.Builder, com.wali.live.proto.LiveMicProto.MicSubViewPosOrBuilder>(
                  getSubViewPos(),
                  getParentForChildren(),
                  isClean());
          subViewPos_ = null;
        }
        return subViewPosBuilder_;
      }

      private java.lang.Object micLiveid_ = "";
      /**
       * <code>optional string mic_liveid = 3;</code>
       *
       * <pre>
       *连麦对方房间号
       * </pre>
       */
      public boolean hasMicLiveid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string mic_liveid = 3;</code>
       *
       * <pre>
       *连麦对方房间号
       * </pre>
       */
      public java.lang.String getMicLiveid() {
        java.lang.Object ref = micLiveid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            micLiveid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mic_liveid = 3;</code>
       *
       * <pre>
       *连麦对方房间号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMicLiveidBytes() {
        java.lang.Object ref = micLiveid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          micLiveid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mic_liveid = 3;</code>
       *
       * <pre>
       *连麦对方房间号
       * </pre>
       */
      public Builder setMicLiveid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        micLiveid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mic_liveid = 3;</code>
       *
       * <pre>
       *连麦对方房间号
       * </pre>
       */
      public Builder clearMicLiveid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        micLiveid_ = getDefaultInstance().getMicLiveid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mic_liveid = 3;</code>
       *
       * <pre>
       *连麦对方房间号
       * </pre>
       */
      public Builder setMicLiveidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        micLiveid_ = value;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>optional uint32 type = 4;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 type = 4;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional uint32 type = 4;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 type = 4;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.MicInfo)
    }

    static {
      defaultInstance = new MicInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.MicInfo)
  }

  public interface MicBeginMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.MicBeginMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 zuid = 1;</code>
     *
     * <pre>
     *主播用户id
     * </pre>
     */
    boolean hasZuid();
    /**
     * <code>required uint64 zuid = 1;</code>
     *
     * <pre>
     *主播用户id
     * </pre>
     */
    long getZuid();

    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasLiveId();
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    java.lang.String getLiveId();
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    boolean hasMicInfo();
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    com.wali.live.proto.LiveMicProto.MicInfo getMicInfo();
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    com.wali.live.proto.LiveMicProto.MicInfoOrBuilder getMicInfoOrBuilder();

    /**
     * <code>optional bool enableViewerMic = 4;</code>
     *
     * <pre>
     *是否允许观众端发起连麦（true：允许）
     * </pre>
     */
    boolean hasEnableViewerMic();
    /**
     * <code>optional bool enableViewerMic = 4;</code>
     *
     * <pre>
     *是否允许观众端发起连麦（true：允许）
     * </pre>
     */
    boolean getEnableViewerMic();

    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.MicBeginMessage}
   *
   * <pre>
   *mic开始消息
   * </pre>
   */
  public static final class MicBeginMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.MicBeginMessage)
      MicBeginMessageOrBuilder {
    // Use MicBeginMessage.newBuilder() to construct.
    private MicBeginMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MicBeginMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MicBeginMessage defaultInstance;
    public static MicBeginMessage getDefaultInstance() {
      return defaultInstance;
    }

    public MicBeginMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MicBeginMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              zuid_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              liveId_ = bs;
              break;
            }
            case 26: {
              com.wali.live.proto.LiveMicProto.MicInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = micInfo_.toBuilder();
              }
              micInfo_ = input.readMessage(com.wali.live.proto.LiveMicProto.MicInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(micInfo_);
                micInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              enableViewerMic_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              type_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicBeginMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicBeginMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.LiveMicProto.MicBeginMessage.class, com.wali.live.proto.LiveMicProto.MicBeginMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<MicBeginMessage> PARSER =
        new com.google.protobuf.AbstractParser<MicBeginMessage>() {
      public MicBeginMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MicBeginMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MicBeginMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ZUID_FIELD_NUMBER = 1;
    private long zuid_;
    /**
     * <code>required uint64 zuid = 1;</code>
     *
     * <pre>
     *主播用户id
     * </pre>
     */
    public boolean hasZuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 zuid = 1;</code>
     *
     * <pre>
     *主播用户id
     * </pre>
     */
    public long getZuid() {
      return zuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 2;
    private java.lang.Object liveId_;
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MICINFO_FIELD_NUMBER = 3;
    private com.wali.live.proto.LiveMicProto.MicInfo micInfo_;
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    public boolean hasMicInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    public com.wali.live.proto.LiveMicProto.MicInfo getMicInfo() {
      return micInfo_;
    }
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    public com.wali.live.proto.LiveMicProto.MicInfoOrBuilder getMicInfoOrBuilder() {
      return micInfo_;
    }

    public static final int ENABLEVIEWERMIC_FIELD_NUMBER = 4;
    private boolean enableViewerMic_;
    /**
     * <code>optional bool enableViewerMic = 4;</code>
     *
     * <pre>
     *是否允许观众端发起连麦（true：允许）
     * </pre>
     */
    public boolean hasEnableViewerMic() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool enableViewerMic = 4;</code>
     *
     * <pre>
     *是否允许观众端发起连麦（true：允许）
     * </pre>
     */
    public boolean getEnableViewerMic() {
      return enableViewerMic_;
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      zuid_ = 0L;
      liveId_ = "";
      micInfo_ = com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance();
      enableViewerMic_ = false;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasZuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLiveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMicInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMicInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, zuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, micInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, enableViewerMic_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, zuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, micInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, enableViewerMic_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicBeginMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.LiveMicProto.MicBeginMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.MicBeginMessage}
     *
     * <pre>
     *mic开始消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.MicBeginMessage)
        com.wali.live.proto.LiveMicProto.MicBeginMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicBeginMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicBeginMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.LiveMicProto.MicBeginMessage.class, com.wali.live.proto.LiveMicProto.MicBeginMessage.Builder.class);
      }

      // Construct using com.wali.live.proto.LiveMicProto.MicBeginMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMicInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        zuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (micInfoBuilder_ == null) {
          micInfo_ = com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance();
        } else {
          micInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        enableViewerMic_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicBeginMessage_descriptor;
      }

      public com.wali.live.proto.LiveMicProto.MicBeginMessage getDefaultInstanceForType() {
        return com.wali.live.proto.LiveMicProto.MicBeginMessage.getDefaultInstance();
      }

      public com.wali.live.proto.LiveMicProto.MicBeginMessage build() {
        com.wali.live.proto.LiveMicProto.MicBeginMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.LiveMicProto.MicBeginMessage buildPartial() {
        com.wali.live.proto.LiveMicProto.MicBeginMessage result = new com.wali.live.proto.LiveMicProto.MicBeginMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zuid_ = zuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (micInfoBuilder_ == null) {
          result.micInfo_ = micInfo_;
        } else {
          result.micInfo_ = micInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.enableViewerMic_ = enableViewerMic_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.LiveMicProto.MicBeginMessage) {
          return mergeFrom((com.wali.live.proto.LiveMicProto.MicBeginMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.LiveMicProto.MicBeginMessage other) {
        if (other == com.wali.live.proto.LiveMicProto.MicBeginMessage.getDefaultInstance()) return this;
        if (other.hasZuid()) {
          setZuid(other.getZuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000002;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasMicInfo()) {
          mergeMicInfo(other.getMicInfo());
        }
        if (other.hasEnableViewerMic()) {
          setEnableViewerMic(other.getEnableViewerMic());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasZuid()) {
          
          return false;
        }
        if (!hasLiveId()) {
          
          return false;
        }
        if (!hasMicInfo()) {
          
          return false;
        }
        if (!getMicInfo().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.LiveMicProto.MicBeginMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.LiveMicProto.MicBeginMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long zuid_ ;
      /**
       * <code>required uint64 zuid = 1;</code>
       *
       * <pre>
       *主播用户id
       * </pre>
       */
      public boolean hasZuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       *
       * <pre>
       *主播用户id
       * </pre>
       */
      public long getZuid() {
        return zuid_;
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       *
       * <pre>
       *主播用户id
       * </pre>
       */
      public Builder setZuid(long value) {
        bitField0_ |= 0x00000001;
        zuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       *
       * <pre>
       *主播用户id
       * </pre>
       */
      public Builder clearZuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }

      private com.wali.live.proto.LiveMicProto.MicInfo micInfo_ = com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.LiveMicProto.MicInfo, com.wali.live.proto.LiveMicProto.MicInfo.Builder, com.wali.live.proto.LiveMicProto.MicInfoOrBuilder> micInfoBuilder_;
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public boolean hasMicInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public com.wali.live.proto.LiveMicProto.MicInfo getMicInfo() {
        if (micInfoBuilder_ == null) {
          return micInfo_;
        } else {
          return micInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public Builder setMicInfo(com.wali.live.proto.LiveMicProto.MicInfo value) {
        if (micInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          micInfo_ = value;
          onChanged();
        } else {
          micInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public Builder setMicInfo(
          com.wali.live.proto.LiveMicProto.MicInfo.Builder builderForValue) {
        if (micInfoBuilder_ == null) {
          micInfo_ = builderForValue.build();
          onChanged();
        } else {
          micInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public Builder mergeMicInfo(com.wali.live.proto.LiveMicProto.MicInfo value) {
        if (micInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              micInfo_ != com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance()) {
            micInfo_ =
              com.wali.live.proto.LiveMicProto.MicInfo.newBuilder(micInfo_).mergeFrom(value).buildPartial();
          } else {
            micInfo_ = value;
          }
          onChanged();
        } else {
          micInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public Builder clearMicInfo() {
        if (micInfoBuilder_ == null) {
          micInfo_ = com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance();
          onChanged();
        } else {
          micInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public com.wali.live.proto.LiveMicProto.MicInfo.Builder getMicInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMicInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public com.wali.live.proto.LiveMicProto.MicInfoOrBuilder getMicInfoOrBuilder() {
        if (micInfoBuilder_ != null) {
          return micInfoBuilder_.getMessageOrBuilder();
        } else {
          return micInfo_;
        }
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.LiveMicProto.MicInfo, com.wali.live.proto.LiveMicProto.MicInfo.Builder, com.wali.live.proto.LiveMicProto.MicInfoOrBuilder> 
          getMicInfoFieldBuilder() {
        if (micInfoBuilder_ == null) {
          micInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wali.live.proto.LiveMicProto.MicInfo, com.wali.live.proto.LiveMicProto.MicInfo.Builder, com.wali.live.proto.LiveMicProto.MicInfoOrBuilder>(
                  getMicInfo(),
                  getParentForChildren(),
                  isClean());
          micInfo_ = null;
        }
        return micInfoBuilder_;
      }

      private boolean enableViewerMic_ ;
      /**
       * <code>optional bool enableViewerMic = 4;</code>
       *
       * <pre>
       *是否允许观众端发起连麦（true：允许）
       * </pre>
       */
      public boolean hasEnableViewerMic() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool enableViewerMic = 4;</code>
       *
       * <pre>
       *是否允许观众端发起连麦（true：允许）
       * </pre>
       */
      public boolean getEnableViewerMic() {
        return enableViewerMic_;
      }
      /**
       * <code>optional bool enableViewerMic = 4;</code>
       *
       * <pre>
       *是否允许观众端发起连麦（true：允许）
       * </pre>
       */
      public Builder setEnableViewerMic(boolean value) {
        bitField0_ |= 0x00000008;
        enableViewerMic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool enableViewerMic = 4;</code>
       *
       * <pre>
       *是否允许观众端发起连麦（true：允许）
       * </pre>
       */
      public Builder clearEnableViewerMic() {
        bitField0_ = (bitField0_ & ~0x00000008);
        enableViewerMic_ = false;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.MicBeginMessage)
    }

    static {
      defaultInstance = new MicBeginMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.MicBeginMessage)
  }

  public interface MicEndMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.wali.live.proto.MicEndMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 zuid = 1;</code>
     *
     * <pre>
     *主播用户id
     * </pre>
     */
    boolean hasZuid();
    /**
     * <code>required uint64 zuid = 1;</code>
     *
     * <pre>
     *主播用户id
     * </pre>
     */
    long getZuid();

    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasLiveId();
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    java.lang.String getLiveId();
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    com.google.protobuf.ByteString
        getLiveIdBytes();

    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    boolean hasMicInfo();
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    com.wali.live.proto.LiveMicProto.MicInfo getMicInfo();
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    com.wali.live.proto.LiveMicProto.MicInfoOrBuilder getMicInfoOrBuilder();

    /**
     * <code>optional bool enableViewerMic = 4;</code>
     *
     * <pre>
     *是否允许观众端发起连麦（true：允许）
     * </pre>
     */
    boolean hasEnableViewerMic();
    /**
     * <code>optional bool enableViewerMic = 4;</code>
     *
     * <pre>
     *是否允许观众端发起连麦（true：允许）
     * </pre>
     */
    boolean getEnableViewerMic();

    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code com.wali.live.proto.MicEndMessage}
   *
   * <pre>
   *mic结束消息
   * </pre>
   */
  public static final class MicEndMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.wali.live.proto.MicEndMessage)
      MicEndMessageOrBuilder {
    // Use MicEndMessage.newBuilder() to construct.
    private MicEndMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MicEndMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MicEndMessage defaultInstance;
    public static MicEndMessage getDefaultInstance() {
      return defaultInstance;
    }

    public MicEndMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MicEndMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              zuid_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              liveId_ = bs;
              break;
            }
            case 26: {
              com.wali.live.proto.LiveMicProto.MicInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = micInfo_.toBuilder();
              }
              micInfo_ = input.readMessage(com.wali.live.proto.LiveMicProto.MicInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(micInfo_);
                micInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              enableViewerMic_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              type_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicEndMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicEndMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wali.live.proto.LiveMicProto.MicEndMessage.class, com.wali.live.proto.LiveMicProto.MicEndMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<MicEndMessage> PARSER =
        new com.google.protobuf.AbstractParser<MicEndMessage>() {
      public MicEndMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MicEndMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MicEndMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ZUID_FIELD_NUMBER = 1;
    private long zuid_;
    /**
     * <code>required uint64 zuid = 1;</code>
     *
     * <pre>
     *主播用户id
     * </pre>
     */
    public boolean hasZuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 zuid = 1;</code>
     *
     * <pre>
     *主播用户id
     * </pre>
     */
    public long getZuid() {
      return zuid_;
    }

    public static final int LIVEID_FIELD_NUMBER = 2;
    private java.lang.Object liveId_;
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasLiveId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public java.lang.String getLiveId() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          liveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string liveId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLiveIdBytes() {
      java.lang.Object ref = liveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MICINFO_FIELD_NUMBER = 3;
    private com.wali.live.proto.LiveMicProto.MicInfo micInfo_;
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    public boolean hasMicInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    public com.wali.live.proto.LiveMicProto.MicInfo getMicInfo() {
      return micInfo_;
    }
    /**
     * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
     *
     * <pre>
     *连麦的信息
     * </pre>
     */
    public com.wali.live.proto.LiveMicProto.MicInfoOrBuilder getMicInfoOrBuilder() {
      return micInfo_;
    }

    public static final int ENABLEVIEWERMIC_FIELD_NUMBER = 4;
    private boolean enableViewerMic_;
    /**
     * <code>optional bool enableViewerMic = 4;</code>
     *
     * <pre>
     *是否允许观众端发起连麦（true：允许）
     * </pre>
     */
    public boolean hasEnableViewerMic() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool enableViewerMic = 4;</code>
     *
     * <pre>
     *是否允许观众端发起连麦（true：允许）
     * </pre>
     */
    public boolean getEnableViewerMic() {
      return enableViewerMic_;
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 type = 5;</code>
     *
     * <pre>
     *0:主播与观众连麦 1：主播与主播连麦
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      zuid_ = 0L;
      liveId_ = "";
      micInfo_ = com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance();
      enableViewerMic_ = false;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasZuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLiveId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMicInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMicInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, zuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, micInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, enableViewerMic_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, zuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLiveIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, micInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, enableViewerMic_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wali.live.proto.LiveMicProto.MicEndMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wali.live.proto.LiveMicProto.MicEndMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.wali.live.proto.MicEndMessage}
     *
     * <pre>
     *mic结束消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.wali.live.proto.MicEndMessage)
        com.wali.live.proto.LiveMicProto.MicEndMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicEndMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicEndMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wali.live.proto.LiveMicProto.MicEndMessage.class, com.wali.live.proto.LiveMicProto.MicEndMessage.Builder.class);
      }

      // Construct using com.wali.live.proto.LiveMicProto.MicEndMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMicInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        zuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        liveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (micInfoBuilder_ == null) {
          micInfo_ = com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance();
        } else {
          micInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        enableViewerMic_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wali.live.proto.LiveMicProto.internal_static_com_wali_live_proto_MicEndMessage_descriptor;
      }

      public com.wali.live.proto.LiveMicProto.MicEndMessage getDefaultInstanceForType() {
        return com.wali.live.proto.LiveMicProto.MicEndMessage.getDefaultInstance();
      }

      public com.wali.live.proto.LiveMicProto.MicEndMessage build() {
        com.wali.live.proto.LiveMicProto.MicEndMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wali.live.proto.LiveMicProto.MicEndMessage buildPartial() {
        com.wali.live.proto.LiveMicProto.MicEndMessage result = new com.wali.live.proto.LiveMicProto.MicEndMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zuid_ = zuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.liveId_ = liveId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (micInfoBuilder_ == null) {
          result.micInfo_ = micInfo_;
        } else {
          result.micInfo_ = micInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.enableViewerMic_ = enableViewerMic_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wali.live.proto.LiveMicProto.MicEndMessage) {
          return mergeFrom((com.wali.live.proto.LiveMicProto.MicEndMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wali.live.proto.LiveMicProto.MicEndMessage other) {
        if (other == com.wali.live.proto.LiveMicProto.MicEndMessage.getDefaultInstance()) return this;
        if (other.hasZuid()) {
          setZuid(other.getZuid());
        }
        if (other.hasLiveId()) {
          bitField0_ |= 0x00000002;
          liveId_ = other.liveId_;
          onChanged();
        }
        if (other.hasMicInfo()) {
          mergeMicInfo(other.getMicInfo());
        }
        if (other.hasEnableViewerMic()) {
          setEnableViewerMic(other.getEnableViewerMic());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasZuid()) {
          
          return false;
        }
        if (!hasLiveId()) {
          
          return false;
        }
        if (!hasMicInfo()) {
          
          return false;
        }
        if (!getMicInfo().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wali.live.proto.LiveMicProto.MicEndMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wali.live.proto.LiveMicProto.MicEndMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long zuid_ ;
      /**
       * <code>required uint64 zuid = 1;</code>
       *
       * <pre>
       *主播用户id
       * </pre>
       */
      public boolean hasZuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       *
       * <pre>
       *主播用户id
       * </pre>
       */
      public long getZuid() {
        return zuid_;
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       *
       * <pre>
       *主播用户id
       * </pre>
       */
      public Builder setZuid(long value) {
        bitField0_ |= 0x00000001;
        zuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 zuid = 1;</code>
       *
       * <pre>
       *主播用户id
       * </pre>
       */
      public Builder clearZuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zuid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object liveId_ = "";
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasLiveId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public java.lang.String getLiveId() {
        java.lang.Object ref = liveId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            liveId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiveIdBytes() {
        java.lang.Object ref = liveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setLiveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearLiveId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        liveId_ = getDefaultInstance().getLiveId();
        onChanged();
        return this;
      }
      /**
       * <code>required string liveId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setLiveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        liveId_ = value;
        onChanged();
        return this;
      }

      private com.wali.live.proto.LiveMicProto.MicInfo micInfo_ = com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.LiveMicProto.MicInfo, com.wali.live.proto.LiveMicProto.MicInfo.Builder, com.wali.live.proto.LiveMicProto.MicInfoOrBuilder> micInfoBuilder_;
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public boolean hasMicInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public com.wali.live.proto.LiveMicProto.MicInfo getMicInfo() {
        if (micInfoBuilder_ == null) {
          return micInfo_;
        } else {
          return micInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public Builder setMicInfo(com.wali.live.proto.LiveMicProto.MicInfo value) {
        if (micInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          micInfo_ = value;
          onChanged();
        } else {
          micInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public Builder setMicInfo(
          com.wali.live.proto.LiveMicProto.MicInfo.Builder builderForValue) {
        if (micInfoBuilder_ == null) {
          micInfo_ = builderForValue.build();
          onChanged();
        } else {
          micInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public Builder mergeMicInfo(com.wali.live.proto.LiveMicProto.MicInfo value) {
        if (micInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              micInfo_ != com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance()) {
            micInfo_ =
              com.wali.live.proto.LiveMicProto.MicInfo.newBuilder(micInfo_).mergeFrom(value).buildPartial();
          } else {
            micInfo_ = value;
          }
          onChanged();
        } else {
          micInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public Builder clearMicInfo() {
        if (micInfoBuilder_ == null) {
          micInfo_ = com.wali.live.proto.LiveMicProto.MicInfo.getDefaultInstance();
          onChanged();
        } else {
          micInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public com.wali.live.proto.LiveMicProto.MicInfo.Builder getMicInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMicInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      public com.wali.live.proto.LiveMicProto.MicInfoOrBuilder getMicInfoOrBuilder() {
        if (micInfoBuilder_ != null) {
          return micInfoBuilder_.getMessageOrBuilder();
        } else {
          return micInfo_;
        }
      }
      /**
       * <code>required .com.wali.live.proto.MicInfo micInfo = 3;</code>
       *
       * <pre>
       *连麦的信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.wali.live.proto.LiveMicProto.MicInfo, com.wali.live.proto.LiveMicProto.MicInfo.Builder, com.wali.live.proto.LiveMicProto.MicInfoOrBuilder> 
          getMicInfoFieldBuilder() {
        if (micInfoBuilder_ == null) {
          micInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.wali.live.proto.LiveMicProto.MicInfo, com.wali.live.proto.LiveMicProto.MicInfo.Builder, com.wali.live.proto.LiveMicProto.MicInfoOrBuilder>(
                  getMicInfo(),
                  getParentForChildren(),
                  isClean());
          micInfo_ = null;
        }
        return micInfoBuilder_;
      }

      private boolean enableViewerMic_ ;
      /**
       * <code>optional bool enableViewerMic = 4;</code>
       *
       * <pre>
       *是否允许观众端发起连麦（true：允许）
       * </pre>
       */
      public boolean hasEnableViewerMic() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool enableViewerMic = 4;</code>
       *
       * <pre>
       *是否允许观众端发起连麦（true：允许）
       * </pre>
       */
      public boolean getEnableViewerMic() {
        return enableViewerMic_;
      }
      /**
       * <code>optional bool enableViewerMic = 4;</code>
       *
       * <pre>
       *是否允许观众端发起连麦（true：允许）
       * </pre>
       */
      public Builder setEnableViewerMic(boolean value) {
        bitField0_ |= 0x00000008;
        enableViewerMic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool enableViewerMic = 4;</code>
       *
       * <pre>
       *是否允许观众端发起连麦（true：允许）
       * </pre>
       */
      public Builder clearEnableViewerMic() {
        bitField0_ = (bitField0_ & ~0x00000008);
        enableViewerMic_ = false;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 type = 5;</code>
       *
       * <pre>
       *0:主播与观众连麦 1：主播与主播连麦
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.wali.live.proto.MicEndMessage)
    }

    static {
      defaultInstance = new MicEndMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.wali.live.proto.MicEndMessage)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_MicSubViewPos_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_MicSubViewPos_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_MicInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_MicInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_MicBeginMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_MicBeginMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_wali_live_proto_MicEndMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_wali_live_proto_MicEndMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rLiveMic.proto\022\023com.wali.live.proto\"^\n\r" +
      "MicSubViewPos\022\021\n\ttopXScale\030\001 \002(\002\022\021\n\ttopY" +
      "Scale\030\002 \002(\002\022\022\n\nwidthScale\030\003 \002(\002\022\023\n\013heigh" +
      "tScale\030\004 \002(\002\"s\n\007MicInfo\022\016\n\006micuid\030\001 \002(\004\022" +
      "6\n\nsubViewPos\030\002 \001(\0132\".com.wali.live.prot" +
      "o.MicSubViewPos\022\022\n\nmic_liveid\030\003 \001(\t\022\014\n\004t" +
      "ype\030\004 \001(\r\"\205\001\n\017MicBeginMessage\022\014\n\004zuid\030\001 " +
      "\002(\004\022\016\n\006liveId\030\002 \002(\t\022-\n\007micInfo\030\003 \002(\0132\034.c" +
      "om.wali.live.proto.MicInfo\022\027\n\017enableView" +
      "erMic\030\004 \001(\010\022\014\n\004type\030\005 \001(\r\"\203\001\n\rMicEndMess",
      "age\022\014\n\004zuid\030\001 \002(\004\022\016\n\006liveId\030\002 \002(\t\022-\n\007mic" +
      "Info\030\003 \002(\0132\034.com.wali.live.proto.MicInfo" +
      "\022\027\n\017enableViewerMic\030\004 \001(\010\022\014\n\004type\030\005 \001(\rB" +
      "#\n\023com.wali.live.protoB\014LiveMicProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_wali_live_proto_MicSubViewPos_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_wali_live_proto_MicSubViewPos_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_MicSubViewPos_descriptor,
        new java.lang.String[] { "TopXScale", "TopYScale", "WidthScale", "HeightScale", });
    internal_static_com_wali_live_proto_MicInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_wali_live_proto_MicInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_MicInfo_descriptor,
        new java.lang.String[] { "Micuid", "SubViewPos", "MicLiveid", "Type", });
    internal_static_com_wali_live_proto_MicBeginMessage_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_wali_live_proto_MicBeginMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_MicBeginMessage_descriptor,
        new java.lang.String[] { "Zuid", "LiveId", "MicInfo", "EnableViewerMic", "Type", });
    internal_static_com_wali_live_proto_MicEndMessage_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_wali_live_proto_MicEndMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_wali_live_proto_MicEndMessage_descriptor,
        new java.lang.String[] { "Zuid", "LiveId", "MicInfo", "EnableViewerMic", "Type", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
