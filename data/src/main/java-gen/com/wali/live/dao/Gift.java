package com.wali.live.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import android.text.TextUtils;

import com.base.utils.language.LocaleUtil;
import com.base.log.MyLog;
import com.wali.live.proto.GiftProto;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;
// KEEP INCLUDES END
/**
 * Entity mapped to table GIFT.
 */
public class Gift {

    private Long id;
    private int giftId;
    private Integer sortId;
    private String name;
    private Integer price;
    private Integer empiricValue;
    private String picture;
    private Boolean canContinuous;
    private String languageStr;
    private String resourceUrl;
    private Boolean canSale;
    private Integer catagory;
    private String isAllowActivitySet;
    private Integer originalPrice;
    private String icon;
    private String comment;
    private String gifUrl;
    private Integer lowerLimitLevel;
    private Integer originGiftType;
    private Integer buyType;
    private Boolean displayInGiftArea;
    private Boolean displayInSubTitle;
    private Integer costType;
    private String ext;

    // KEEP FIELDS - put your custom fields here
    public static final String TAG = "Gift";
    private Map<String, GiftLanguageModel> languageModelMap = new HashMap<>();
    // KEEP FIELDS END

    public Gift() {
    }

    public Gift(Long id) {
        this.id = id;
    }

    public Gift(Long id, int giftId, Integer sortId, String name, Integer price, Integer empiricValue, String picture, Boolean canContinuous, String languageStr, String resourceUrl, Boolean canSale, Integer catagory, String isAllowActivitySet, Integer originalPrice, String icon, String comment, String gifUrl, Integer lowerLimitLevel, Integer originGiftType, Integer buyType, Boolean displayInGiftArea, Boolean displayInSubTitle, Integer costType, String ext) {
        this.id = id;
        this.giftId = giftId;
        this.sortId = sortId;
        this.name = name;
        this.price = price;
        this.empiricValue = empiricValue;
        this.picture = picture;
        this.canContinuous = canContinuous;
        this.languageStr = languageStr;
        this.resourceUrl = resourceUrl;
        this.canSale = canSale;
        this.catagory = catagory;
        this.isAllowActivitySet = isAllowActivitySet;
        this.originalPrice = originalPrice;
        this.icon = icon;
        this.comment = comment;
        this.gifUrl = gifUrl;
        this.lowerLimitLevel = lowerLimitLevel;
        this.originGiftType = originGiftType;
        this.buyType = buyType;
        this.displayInGiftArea = displayInGiftArea;
        this.displayInSubTitle = displayInSubTitle;
        this.costType = costType;
        this.ext = ext;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public int getGiftId() {
        return giftId;
    }

    public void setGiftId(int giftId) {
        this.giftId = giftId;
    }

    public Integer getSortId() {
        return sortId;
    }

    public void setSortId(Integer sortId) {
        this.sortId = sortId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getPrice() {
        return price;
    }

    public void setPrice(Integer price) {
        this.price = price;
    }

    public Integer getEmpiricValue() {
        return empiricValue;
    }

    public void setEmpiricValue(Integer empiricValue) {
        this.empiricValue = empiricValue;
    }

    public String getPicture() {
        return picture;
    }

    public void setPicture(String picture) {
        this.picture = picture;
    }

    public Boolean getCanContinuous() {
        return canContinuous;
    }

    public void setCanContinuous(Boolean canContinuous) {
        this.canContinuous = canContinuous;
    }

    public String getLanguageStr() {
        return languageStr;
    }

    public String getResourceUrl() {
        return resourceUrl;
    }

    public void setResourceUrl(String resourceUrl) {
        this.resourceUrl = resourceUrl;
    }

    public Boolean getCanSale() {
        return canSale;
    }

    public void setCanSale(Boolean canSale) {
        this.canSale = canSale;
    }

    public Integer getCatagory() {
        return catagory;
    }

    public void setCatagory(Integer catagory) {
        this.catagory = catagory;
    }

    public String getIsAllowActivitySet() {
        return isAllowActivitySet;
    }

    public void setIsAllowActivitySet(String isAllowActivitySet) {
        this.isAllowActivitySet = isAllowActivitySet;
    }

    public Integer getOriginalPrice() {
        return originalPrice;
    }

    public void setOriginalPrice(Integer originalPrice) {
        this.originalPrice = originalPrice;
    }

    public String getIcon() {
        return icon;
    }

    public void setIcon(String icon) {
        this.icon = icon;
    }

    public String getComment() {
        return comment;
    }

    public void setComment(String comment) {
        this.comment = comment;
    }

    public String getGifUrl() {
        return gifUrl;
    }

    public void setGifUrl(String gifUrl) {
        this.gifUrl = gifUrl;
    }

    public Integer getLowerLimitLevel() {
        return lowerLimitLevel;
    }

    public void setLowerLimitLevel(Integer lowerLimitLevel) {
        this.lowerLimitLevel = lowerLimitLevel;
    }

    public Integer getOriginGiftType() {
        return originGiftType;
    }

    public void setOriginGiftType(Integer originGiftType) {
        this.originGiftType = originGiftType;
    }

    public Integer getBuyType() {
        return buyType;
    }

    public void setBuyType(Integer buyType) {
        this.buyType = buyType;
    }

    public Boolean getDisplayInGiftArea() {
        return displayInGiftArea;
    }

    public void setDisplayInGiftArea(Boolean displayInGiftArea) {
        this.displayInGiftArea = displayInGiftArea;
    }

    public Boolean getDisplayInSubTitle() {
        return displayInSubTitle;
    }

    public void setDisplayInSubTitle(Boolean displayInSubTitle) {
        this.displayInSubTitle = displayInSubTitle;
    }

    public Integer getCostType() {
        return costType;
    }

    public void setCostType(Integer costType) {
        this.costType = costType;
    }

    public String getExt() {
        return ext;
    }

    public void setExt(String ext) {
        this.ext = ext;
    }

    // KEEP METHODS - put your custom methods here


    @Override
    public String toString() {
        return "Gift{" +
                "id=" + id +
                ", giftId=" + giftId +
                ", sortId=" + sortId +
                ", name='" + name + '\'' +
                ", price=" + price +
                ", empiricValue=" + empiricValue +
                ", picture='" + picture + '\'' +
                ", canContinuous=" + canContinuous +
//                ", languageStr='" + languageStr + '\'' +
                ", resourceUrl='" + resourceUrl + '\'' +
                ", canSale=" + canSale +
                ", catagory=" + catagory +
//                ", languageModelMap=" + languageModelMap +
                ", originalPrice=" + originalPrice +
                ", icon=" + icon +
                ", comment=" + comment +
                ", gifUrl=" + gifUrl +
                ", lowerLimitLevel=" + lowerLimitLevel +
                ", originGiftType=" + originGiftType +
                ", buyType=" + buyType +
                ", displayInGiftArea" + displayInGiftArea +
                ", displayInSubTitle" + displayInSubTitle +
                '}';
    }

    // 去掉自动生成的 setLanguageStr
    public void setLanguageStr(String languageStr) {
        MyLog.d("Gift", "languageStr:" + languageStr);
        this.languageStr = languageStr;
        try {
            JSONArray jsonArray = new JSONArray(languageStr);
            languageModelMap.clear();
            for (int i = 0; i < jsonArray.length(); i++) {
                JSONObject jsonObject = jsonArray.optJSONObject(i);
                GiftLanguageModel glm = GiftLanguageModel.loadFromJson(jsonObject);
                MyLog.d("Gift", "GiftLanguageModel:" + glm);
                String key = glm.getRegion();
                if (!TextUtils.isEmpty(key)) {
                    languageModelMap.put(key, glm);
                }
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }

    public void completeGiftInfo(String jsonFilePath) {
        //填充额外的资源信息，每个子类都要覆盖
    }

    public String getConfigJsonFileName() {
        // 有文件的子类覆盖这个方法
        return null;
    }

    public boolean needDownResource() {
        //  需要下载资源的子类覆盖这个方法
        return false;
    }

    public String getSendDescribe() {
        String key = LocaleUtil.getLanguageCode();
        if (!TextUtils.isEmpty(key)) {
            if (key.matches("^en.*")) {
                key = LocaleUtil.LOCALE_ENGLISH.toString();
            }
            GiftLanguageModel lm = languageModelMap.get(key);
            if (lm != null) {
                String text = lm.getText();
                if (!TextUtils.isEmpty(text)) {
                    return text;
                }
            }
        }
        return "送了" + name;
    }

    /**
     * 获取礼物的国际化名字<br/>
     * 根据客户端的语言返回不同语言的名字<br/>
     * 这个名字由服务器返回
     *
     * @return 如果找不到，返回{@link #name}
     */
    public String getInternationalName() {
        String key = LocaleUtil.getLanguageCode();
        if (!TextUtils.isEmpty(key)) {
            if (key.matches("^en.*")) {
                key = LocaleUtil.LOCALE_ENGLISH.toString();
            }
            GiftLanguageModel lm = languageModelMap.get(key);
            if (lm != null) {
                String name = lm.getName();
                if (!TextUtils.isEmpty(name)) {
                    return name;
                }
            }
        }
        return name;
    }

    /**
     * 原来的icon还有在
     *
     * @return
     */
    public String getInternationalIcon() {
        String key = LocaleUtil.getLanguageCode();
        if (!TextUtils.isEmpty(key)) {
            if (key.matches("^en.*")) {
                key = LocaleUtil.LOCALE_ENGLISH.toString();
            }
            GiftLanguageModel lm = languageModelMap.get(key);
            if (lm != null) {
                String connerIcon = lm.getIcon();
                if (!TextUtils.isEmpty(connerIcon)) {
                    return connerIcon;
                }
            }
        }
        return icon;
    }

    /**
     * 礼物橱窗提示国际化
     */
    public String getInternationGiftComment() {
        String key = LocaleUtil.getLanguageCode();
        if (!TextUtils.isEmpty(key)) {
            GiftLanguageModel lm = languageModelMap.get(key);
            if (lm != null) {
                String commentText = lm.getComment();
                if (!TextUtils.isEmpty(commentText)) {
                    return commentText;
                }
            }
        }
        return comment;
    }

    /**
     * Created by chengsimin on 16/6/15.
     */
    public static class GiftLanguageModel {
        public static final String KEY_REGION = "region";
        public static final String KEY_NAME = "name";
        public static final String KEY_TEXT = "text";
        public static final String KEY_ICON = "icon";
        public static final String KEY_COMMENT = "comment";

        private String region;
        private String name;
        private String text;
        private String icon;
        private String comment;

        public static GiftLanguageModel toGiftLanguageModel(GiftProto.Language l) {
            GiftLanguageModel m = new GiftLanguageModel();
            m.setRegion(l.getRegion());
            m.setName(l.getName());
            m.setText(l.getText());
            m.setIcon(l.getIconText());
            m.setComment(l.getCommentText());
            return m;
        }

        public void setRegion(String region) {
            this.region = region;
        }

        public String getRegion() {
            return region;
        }

        public void setName(String name) {
            this.name = name;
        }

        public String getName() {
            return name;
        }

        public void setText(String text) {
            this.text = text;
        }

        public String getText() {
            return text;
        }

        public void setIcon(String icon) {
            this.icon = icon;
        }

        public String getIcon() {
            return icon;
        }

        public String getComment() {
            return comment;
        }

        public void setComment(String comment) {
            this.comment = comment;
        }

        public JSONObject toJson() {
            JSONObject jsonObject = new JSONObject();
            try {
                jsonObject.put(KEY_NAME, name);
                jsonObject.put(KEY_ICON, icon);
                jsonObject.put(KEY_REGION, region);
                jsonObject.put(KEY_TEXT, text);
                jsonObject.put(KEY_COMMENT, comment);
            } catch (JSONException e) {
                e.printStackTrace();
            }
            return jsonObject;
        }

        public static GiftLanguageModel loadFromJson(JSONObject jsonObject) {
            GiftLanguageModel model = new GiftLanguageModel();
            model.setName(jsonObject.optString(KEY_NAME));
            model.setIcon(jsonObject.optString(KEY_ICON));
            model.setRegion(jsonObject.optString(KEY_REGION));
            model.setText(jsonObject.optString(KEY_TEXT));
            model.setComment(jsonObject.optString(KEY_COMMENT));
            return model;
        }

        @Override
        public String toString() {
            return "GiftLanguageModel{" +
                    "region='" + region + '\'' +
                    ", name='" + name + '\'' +
                    ", text='" + text + '\'' +
                    ", icon='" + icon + '\'' +
                    ", comment='" + comment + '\'' +
                    '}';
        }
    }
    // KEEP METHODS END

}
