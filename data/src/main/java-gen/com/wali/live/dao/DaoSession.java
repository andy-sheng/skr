package com.wali.live.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.wali.live.dao.UserAccount;
import com.wali.live.dao.OwnUserInfo;
import com.wali.live.dao.Gift;
import com.wali.live.dao.Relation;
import com.wali.live.dao.RegionCn;
import com.wali.live.dao.RegionEn;
import com.wali.live.dao.RegionTw;
import com.wali.live.dao.LoadingBanner;

import com.wali.live.dao.UserAccountDao;
import com.wali.live.dao.OwnUserInfoDao;
import com.wali.live.dao.GiftDao;
import com.wali.live.dao.RelationDao;
import com.wali.live.dao.RegionCnDao;
import com.wali.live.dao.RegionEnDao;
import com.wali.live.dao.RegionTwDao;
import com.wali.live.dao.LoadingBannerDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userAccountDaoConfig;
    private final DaoConfig ownUserInfoDaoConfig;
    private final DaoConfig giftDaoConfig;
    private final DaoConfig relationDaoConfig;
    private final DaoConfig regionCnDaoConfig;
    private final DaoConfig regionEnDaoConfig;
    private final DaoConfig regionTwDaoConfig;
    private final DaoConfig loadingBannerDaoConfig;

    private final UserAccountDao userAccountDao;
    private final OwnUserInfoDao ownUserInfoDao;
    private final GiftDao giftDao;
    private final RelationDao relationDao;
    private final RegionCnDao regionCnDao;
    private final RegionEnDao regionEnDao;
    private final RegionTwDao regionTwDao;
    private final LoadingBannerDao loadingBannerDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userAccountDaoConfig = daoConfigMap.get(UserAccountDao.class).clone();
        userAccountDaoConfig.initIdentityScope(type);

        ownUserInfoDaoConfig = daoConfigMap.get(OwnUserInfoDao.class).clone();
        ownUserInfoDaoConfig.initIdentityScope(type);

        giftDaoConfig = daoConfigMap.get(GiftDao.class).clone();
        giftDaoConfig.initIdentityScope(type);

        relationDaoConfig = daoConfigMap.get(RelationDao.class).clone();
        relationDaoConfig.initIdentityScope(type);

        regionCnDaoConfig = daoConfigMap.get(RegionCnDao.class).clone();
        regionCnDaoConfig.initIdentityScope(type);

        regionEnDaoConfig = daoConfigMap.get(RegionEnDao.class).clone();
        regionEnDaoConfig.initIdentityScope(type);

        regionTwDaoConfig = daoConfigMap.get(RegionTwDao.class).clone();
        regionTwDaoConfig.initIdentityScope(type);

        loadingBannerDaoConfig = daoConfigMap.get(LoadingBannerDao.class).clone();
        loadingBannerDaoConfig.initIdentityScope(type);

        userAccountDao = new UserAccountDao(userAccountDaoConfig, this);
        ownUserInfoDao = new OwnUserInfoDao(ownUserInfoDaoConfig, this);
        giftDao = new GiftDao(giftDaoConfig, this);
        relationDao = new RelationDao(relationDaoConfig, this);
        regionCnDao = new RegionCnDao(regionCnDaoConfig, this);
        regionEnDao = new RegionEnDao(regionEnDaoConfig, this);
        regionTwDao = new RegionTwDao(regionTwDaoConfig, this);
        loadingBannerDao = new LoadingBannerDao(loadingBannerDaoConfig, this);

        registerDao(UserAccount.class, userAccountDao);
        registerDao(OwnUserInfo.class, ownUserInfoDao);
        registerDao(Gift.class, giftDao);
        registerDao(Relation.class, relationDao);
        registerDao(RegionCn.class, regionCnDao);
        registerDao(RegionEn.class, regionEnDao);
        registerDao(RegionTw.class, regionTwDao);
        registerDao(LoadingBanner.class, loadingBannerDao);
    }
    
    public void clear() {
        userAccountDaoConfig.getIdentityScope().clear();
        ownUserInfoDaoConfig.getIdentityScope().clear();
        giftDaoConfig.getIdentityScope().clear();
        relationDaoConfig.getIdentityScope().clear();
        regionCnDaoConfig.getIdentityScope().clear();
        regionEnDaoConfig.getIdentityScope().clear();
        regionTwDaoConfig.getIdentityScope().clear();
        loadingBannerDaoConfig.getIdentityScope().clear();
    }

    public UserAccountDao getUserAccountDao() {
        return userAccountDao;
    }

    public OwnUserInfoDao getOwnUserInfoDao() {
        return ownUserInfoDao;
    }

    public GiftDao getGiftDao() {
        return giftDao;
    }

    public RelationDao getRelationDao() {
        return relationDao;
    }

    public RegionCnDao getRegionCnDao() {
        return regionCnDao;
    }

    public RegionEnDao getRegionEnDao() {
        return regionEnDao;
    }

    public RegionTwDao getRegionTwDao() {
        return regionTwDao;
    }

    public LoadingBannerDao getLoadingBannerDao() {
        return loadingBannerDao;
    }

}
