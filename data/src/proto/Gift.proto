package com.wali.live.proto;

option java_package = "com.wali.live.proto";
option java_outer_classname = "GiftProto";

/*
 * 商城对客户端提供的pb定义
 */

/**
 * 礼物基础信息
 * update time：2016年03月03日
 * 与上个版本的主要区别：13-15字段
 * 1、礼物类型type=9废弃，给客户端的一定是在上架
 * 2、beginTime与endTime废弃，与type关联
 * 3、discount=14字段，当不等于100时即是打折，客户端可以用这个判断礼物状态
 * 4、gift_code 作用待讨论
 * update time：2016年03月14日15:35:54
 * diff
 * add 16、17字段，安卓与ios的可见性
 * update time:2016年03月21日22:05:31
 * add 17字段：红包礼物的份数
 * 重新复用9字段，用于标志礼物类型：普通礼物、弹幕礼物、红包礼物
 *
 * 兼容性问题：三类礼物会全量下发，老版本客户端会全量显示，在某个版本之后，要做到如下支持
 * 字段9：当类型不在此时可识别的类型（比如现在是123类型）时，全部不展示
 * 字段16：当可识别类型中出现can_sale=0时，也不能展示
 */

message GiftInfo {
    required uint32 giftId = 1; // 商品id
    optional uint32 sortId = 2; // 排序id
    optional string name = 3; // 礼物名称
    optional uint32 price = 4; // 礼物售价
    optional uint32 empiric_value = 6; // 经验值
    optional string picture = 7; // 礼物图片
    optional bool canContinuous = 12; // 是否可以连续送出
    repeated Language multi_language = 19; // 多语言
    optional string detail = 21; // 资源url
    optional uint32 iph_sale = 22; // IOS可见性，1=可见，0=不可见
    optional uint32 and_sale = 23; // 安卓可见性，1=可见，0=不可见
    // 0=普通礼物，1=弹幕礼物，2=红包礼物，3=背景礼物，4=点亮礼物，5=全局礼物，6=普通可变特效小礼物，7=普通高价值礼物
    optional uint32 catagory = 24; // 礼物分类
    //optional string allowed_activity_set    = 25;
    //optional string deny_activity_set       = 26;
    optional uint32 original_price = 29; // 原价
    optional string icon = 30; // 角标
    optional string comment = 31; //橱窗提示
    // 不需要返给客户端但是必须存在的字段
    optional uint32 ticket = 5; // 票数
    optional uint32 status = 27; // 状态 2=已上架、3=下架、4=测试状态
    optional uint32 play_time = 28; // 礼物的播放时长，毫秒
    optional string gif_url = 32; //礼物动效url
    optional uint32 lower_limit_level = 33; // 礼物最低购买等级
    optional uint32 origin_gift_type = 34; // 原始礼物类型
    optional uint32 buy_type = 37 [default = 0]; // 购买礼物的支付方式，0-钻石　1-米币
    optional bool display_in_gift_area = 35 [default = true]; // 是否在礼物区展示
    optional bool display_in_subtitle_area = 36 [default = true]; // 是否在弹幕区展示
    optional uint32 cost_type = 40 [default = 3]; //花费类型，1=金钻，2=银钻，3=金钻+银钻 4=金币
}

/*
 * 目前多语言的region字段只支持两种,如果新增请当面沟通
 * zh_CN 简体中文
 * en_US 英文
 */
message Language {
    optional string region = 1; // 地区
    optional string name = 2; // 礼物名称
    optional string text = 3; // 普通礼物完整文案，格式类似于 我送了玫瑰花；我点亮了房间
    optional string icon_text = 4; // 角标多语言
    optional string comment_text = 5; // 橱窗多语言
}

message GiftList {
    repeated GiftInfo giftInfos = 1; // 礼物列表
}

// 获取礼物列表
// 命令字：zhibo.mall.getGiftList
message GetGiftListReq {
    optional uint64 timestamp = 1; // 时间戳，GetGiftListRsp的timestamp字段，首次请传0
    optional uint32 version = 2; // 版本，新版本请填写2
}

message GetGiftListRsp {
    optional uint32 retCode = 1; // 返回码
    optional GiftList giftList = 2; // 礼物列表
    optional uint64 timestamp = 3; // 时间戳
}

// 虚拟礼物卡
message VGiftCard {
    optional uint32 gift_id = 1; //礼品卡可兑换的礼物Id
    optional uint32 gift_card_cnt = 2; //礼品卡数量
    optional uint64 end_time = 3; //礼品卡有效期结束时间,单位s
}

//平台类型
enum Platform {
    IOS = 1;
    ANDROID = 2;
}

/*
 * 购买礼物
 * update time：2016年03月03日
 * 与上版本主要改动：
 * 1、最重要：roomId=4的类型为required，但是私聊仍然会调用这个接口，故私聊时请传入""
 * 2、timestamp的意义更改了，是客户端生成的一个序号sequence
 * 3、price=6与empiricValue=7 字段不再需要传，以服务器为准
 */

// 命令字：zhibo.mall.buyGift
message BuyGiftReq {
    required uint64 userId = 1; // 用户id，uuid
    required uint64 receiverId = 2; // 主播id，zuid
    required string roomId = 3; // 主播房间id
    required uint32 giftId = 4; // 礼物商品id
    required uint64 timestamp = 5; // 客户端时间戳
    optional uint32 count = 8 [default = 1]; // 礼物连击次数
    optional uint32 giftCount = 9 [default = 1]; // 此次发送的礼物个数
    optional uint64 continueId = 10; // 标记此次送礼的属于哪一次连送，一组连送的continueId相同，一般为X1时的时间戳
    optional string msg_body = 11; // 弹幕礼物的文字内容
    optional uint32 room_type = 12; //房间类型,0代表正常房间 1代表PK房间
    optional bool use_gift_card = 13; //是否使用礼品卡消费
    optional Platform platform = 14; //客户端平台类型，IOS或者ANDROID
    optional string access_token = 15; // xiaomi access_token
    optional uint32 source = 17 [default = 0]; // 对应BuyGiftSource
}

//平台类型
enum BuyGiftSource {
    COMMON_LIVE_ROOM = 0;
    RADIO_LIVE_ROOM = 1;
}

/*
 * update time：2016年03月03日
 * 与上版本主要改动：add sequence=5
 * 1、sequence=5 即是请求pb的timestamp字段，用于客户端自己去重
 *
 * update time:2016年03月11日
 */
message BuyGiftRsp {
    required uint32 retCode = 1; // 返回码，0代表成功，非0值失败
    optional string retMsg = 2; // 返回描述
    optional uint32 usable_gem_cnt = 3; // 购买者当前可用资产
    optional uint64 user_asset_timestamp = 4; // 购买者当前可用资产时间戳
    optional uint64 sequence = 5; // 客户端的时间戳，新协议的sequence字段
    optional uint32 receiver_total_tickets = 6; // 主播此时的票数
    optional uint64 ticket_update_time = 7; // 主播票数的时间戳
    optional string red_packet_id = 8; // 红包id
    optional string order_id = 9; // 订单号，retcode非0时必有
    repeated VGiftCard gift_card_list = 10; //礼品卡列表
    optional uint32 usable_virtual_gem_cnt = 11; //可用虚拟钻数量
    optional uint32 mibi_balance = 12; //当用户为米币用户且购买米币礼物成功时有数据，单位分
    optional uint64 mibi_update_time = 13; //米币余额时间戳，单位秒
}

message GetMibiBalanceRequest {
    required uint64 uuid = 1;
}
message GetMibiBalanceResponse {
    required uint32 ret_code = 1;
    optional uint32 balance = 2; //单位分
    optional uint32 balanceTime = 3; //余额版本，单位秒
    optional uint32 exchangeable_mibi_cnt = 4; //可兑换米币数，单位分
}

//获取消费任务列表c2s接口
//zhibo.activity.getconsumetasklist
message GetConsumeTaskListReq {
    optional uint64 uuid = 1;
}

message GetConsumeTaskListRsp {
    required uint32 retCode = 1;
    optional string bannerImgUrl = 2;
    repeated ConsumeTaskItem consumeTask = 3;
}

message ConsumeTaskItem {
    optional uint32 taskId = 1; //任务ID
    optional uint64 uuid = 2; //用户ID
    optional string taskType = 3; //每日，活动...
    optional string taskDesc = 4; //任务描述
    optional uint32 progress = 5; //任务进度
    optional uint32 taskNeedNum = 6; //完成一次任务所需的数量
    optional string rewardDesc = 7; //任务奖品文字描述
    optional string rewardAvailTimes = 8; //可以获得的奖励次数
    optional uint32 rewardType = 9; //奖励类型, 1:钻石 2:礼品卡
    optional uint32 rewardGiftId = 10; //任务类型为2:礼品卡时，礼品卡对应的礼物ID
    optional uint32 taskStatus = 11; //1:未开始，2:未完成，3:可领取, 4:已完成
}

//获取消费任务奖励c2s接口
//zhibo.activity.getconsumetaskreward
message GetConsumeTaskRewardReq {
    optional uint64 uuid = 1;
    optional uint32 taskId = 2;
}

message GetConsumeTaskRewardRsp {
    required uint32 retCode = 1;
    optional uint32 rewardType = 2; //奖励类型, 1:钻石 2:礼品卡
    optional uint32 rewardCnt = 3; //奖励数量，银钻数/礼品卡数
    optional uint32 rewardGiftId = 4; //奖励的礼品卡ID
}
