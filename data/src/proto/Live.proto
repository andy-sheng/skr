
import "Common.proto";
import "Account.proto";
import "LiveCommon.proto";
import "Live2.proto";
package com.wali.live.proto;

option java_package = "com.wali.live.proto";
option java_outer_classname = "LiveProto";

// wiki地址：http://wiki.n.miui.com/pages/viewpage.action?pageId=18996762
// 运营位客户端pb：http://wiki.n.miui.com/pages/viewpage.action?pageId=25044158

//预分配房间id
//zhibo.live.getroomid
message GetRoomIdReq {
    required uint64 uuid      = 1; //操作人id
    optional uint32 appType   = 2; //0:小米直播app，1:无人机 2:导播台 3:Replay Kit 4:一直播
    optional AppInfo appInfo  = 3;
    optional uint32 type      = 4;// 0公开，1私密，2:密码房间，口令  3. 门票直播  4.电视台  5.VR直播 6.游戏  公会直播（第5位 2^4） 【公会直播开始采用按位，小于公会还用数字表示】
    optional uint64 guildId   = 5; //公会id
    optional uint32 source   = 6; // 0：摄像头 1：录屏 2：外设
}

message GetRoomIdRsp {
    required uint32 retCode = 1; //0:表示成功
    optional string liveId = 2; //房间ID id＝System.currentTime/1000＋uuid
    optional string shareUrl = 3; //分享的url
    optional string upStreamUrl = 4; //完整推流url
    optional uint32 beginLevel = 5; //开播需要的最低用户等级
    optional string udpUpstreamUrl = 6; //Udp推流地址
    repeated UpStreamUrl newUpStreamUrl = 7; //新的完整推流url
}

//创建一个直播
//zhibo.live.begin
message BeginLiveReq {
    required uint64 uuid = 1;                       //操作人id
    optional Location location = 2;                 //操作人位置信息
    optional uint32 type = 3;                       //类型，0公开，1私密,2 密码验证,3=门票
    repeated uint64 invitee = 4;                    //被邀请的人
    optional bool addHistory = 5;                   //是否产生直播回放
    optional string liveTitle = 6;                  //直播标题
    optional string password = 7;                   //密码直播
    optional LiveCover liveCover = 8;               //房间的封面信息
    optional string liveId = 9;                     //房间ID，如果没有则分配一个，老客户端不传，新客户端需要传
    optional uint32 appType = 10;                   //0:小米直播app，1:第三方设备，只有无人机
    optional AppInfo appInfo = 11;
    optional uint32 playUI = 12;                    //视频画面调整方式, 0默认(裁左右宽度), 1补上下高度
    optional TicketLiveInfo ticketLiveInfo = 13;    //门票直播需要传
    repeated TagInfo tagInfos = 14;                 //标签ID
    optional bool supportMagicFace = 16;//支持魔法表情
    optional uint32 source   = 17; // 0：摄像头 1：录屏 2：外设
}

message BeginLiveRsp {
    required uint32 retCode = 1; //0:表示成功
    optional string liveId = 2; //id＝System.currentTime/1000＋uuid
    optional uint64 createTime = 3; //创建的评论的服务器时间
    optional string shareUrl = 4; //分享的url
    optional string upStreamUrl = 5; //完整的url
    optional uint32 beginLevel = 6; //开播需要的最低用户等级
    optional uint32 showIconCtrl = 7; //显示icon隐藏开关：从最低位开始：1-显示弹幕icon
    optional string udpUpstreamUrl = 8; //Udp推流地址
    repeated UpStreamUrl newUpStreamUrl = 9; //新的完整推流url
}

//结束一个直播
//zhibo.live.end
message EndLiveReq {
    required uint64 uuid = 1; //操作人id
    required string liveId = 2;
    optional uint32 appType = 3; //0:小米直播app，1:第三方设备，只有无人机
    optional AppInfo appInfo = 4;
    optional uint64 guildId     = 5; //公会id
}

message EndLiveRsp {
    required uint32 retCode         = 1; //0:表示成功
    optional uint32 hisViewerCnt    = 2; //历史房间观众数
    optional bool generateHistorySucc   = 3; //是否生成历史回放
    optional string generateHistoryMsg  = 4; //如果没有生成回放的提示语
    optional uint32 ticketBuyerCount  = 5;//门票购买计数
    optional uint64 hisBeginLiveCnt   = 6;//历史开播次数
    optional uint64 duration          = 7;//开播时长（ms）
    optional uint64 newFollowerCnt    = 8;//新增关注数
}

//进入房间
//zhibo.live.enter
message EnterLiveReq {
    required uint64 uuid = 1; //操作人id
    required uint64 zuid = 2; //直播人id
    required string liveId = 3;
    optional string password = 4; //房间密码
    optional uint32 type     = 5; //0：默认 1：通过附近频道进入
    optional bool   showSpecialEffect = 6; //进场特效 true:显示
}

message EnterLiveRsp {
    required uint32 retCode = 1; //0:表示成功
    optional uint32 viewerCnt = 2; //观众数
    //    optional uint32 ticket          = 3; //票数
    repeated Viewer viewer = 4; //观众
    //    optional UserInfo liveOwner     = 5;
    optional bool isManager = 6; //是否是管理员
    optional bool banSpeak = 7; //是否被禁言了
    optional Location location = 8; //位置
    optional uint32 type = 9; //类型，0公开，1私密, 2密码, 3门票直播
    optional string shareUrl = 10; //分享的url
    optional PKInfo otherPKInfo = 11; //如果在pk，则有此信息
    optional uint32 pkInitTicket = 12; //主播pk初始票值
    optional string downStreamUrl = 13; //完整的url拉流地址
    optional MicInfo micInfo = 14; //连麦的信息，如果在连麦，则有此信息
    optional uint32 micuidStatus = 15; //连麦嘉宾状态， 0：正常， 1：连麦嘉宾退到后台
    optional uint64 timestamp = 16; //进房间时间戳(毫秒)
    optional LiveCover liveCover = 17; //房间的封面信息
    optional string liveTitle = 18; //直播标题
    optional int32 messageMode = 19; //房间的弹幕拉状态位，0:push模型，1:pull模型
    optional MsgRule msgRule = 20; //房间的发消息的规则
    optional bool isShop = 21; //是否是商铺房间，默认是false
    optional bool hideGift = 22; //是否是隐藏商品，默认是false
    optional int32 hideIcon = 23; //从最低位开始：1-是否隐藏发弹幕icon 2-是否隐藏私信icon 3-是否隐藏分享icon 4-是否隐藏礼物icon 5-是否隐藏点亮 （默认全不隐藏，该位为1时隐藏）
    optional TicketLiveStatus ticketStatus = 24; //用户观看门票直播状态信息
    optional bool supportMagicFace = 26;//支持魔法表情
    optional bool enableViewerMic = 27; //是否允许观众短发起连麦（true:允许）
}

//上麦开始，主播发起
//zhibo.live.micbegin
message MicBeginReq {
    required uint64 zuid = 1; //主播用户id，也就是当前用户id
    required string liveId = 2; //房间号
    required MicInfo micInfo = 3; //连麦的信息
}

message MicBeginRsp {
    required uint32 retCode = 1; //0:表示成功
}

//上麦结束，任意一方都可以发起
//zhibo.live.micend
message MicEndReq {
    required uint64 zuid = 1; //主播用户id
    required string liveId = 2; //房间号
    required uint64 micuid = 3; //对应的用户id
}

message MicEndRsp {
    required uint32 retCode = 1; //0:表示成功
}

//房间人top
//zhibo.live.viewertop
message ViewerTopReq {
    required uint64 uuid = 1; //操作人id
    required uint64 zuid = 2; //直播人id
    required string liveId = 3;
}

message ViewerTopRsp {
    required uint32 retCode = 1; //0:表示成功
    repeated Viewer viewer = 2; //观众
}

//房间id查房间状态,客户端拉流卡顿的时候用
//zhibo.live.roominfo
message RoomInfoReq {
    required uint64 uuid = 1; //操作人id
    required uint64 zuid = 2; //直播人id
    required string liveId = 3;
    optional string password = 4; //如果是加密类型，带密码
    optional bool getLatestLive = 5; //true：优先返回当前正在直播的信息 ,不管是否跟liveId一致。没有直播时，再返回指定liveId的回放; false:返回指定liveid的直播，如果改liveid的房间已关闭，返回liveid回放
}

message RoomInfoRsp {
    required uint32 retCode = 1; //0:表示成功
    optional string downStreamUrl = 2; //完整的url拉流地址,根据客户端的ip选择最优
    optional string playbackUrl = 3; //回放的url
    optional string shareUrl = 4; //分享的url
    optional uint64 beginTime = 5; //直播开始时间
    optional string liveid = 6; //房间id
    optional uint32 type = 7; //类型，0公开，1私密,2 口令,3 门票
    optional TicketLiveStatus ticketStatus = 8; //用户观看门票直播状态信息
}

//离开房间
//zhibo.live.leave
message LeaveLiveReq {
    required uint64 uuid = 1; //操作人id
    required uint64 zuid = 2; //直播人id
    required string liveId = 3;
    optional int32 messageMode = 4; //房间的弹幕拉状态位，0:push模型，1:pull模型
}

message LeaveLiveRsp {
    required uint32 retCode = 1; //0:表示成功
}

//删除回放直播
//zhibo.live.historydelete
message HistoryDeleteReq {
    required uint64 zuid = 1; //直播人id
    required string liveId = 2; //房间号
}

message HistoryDeleteRsp {
    required uint32 retCode = 1; //0:表示成功
}

//主播心跳
//zhibo.live.hb
message HeartBeatReq {
    required string liveId = 1; //流名或者是房间号
    optional uint64 pkuid = 2; //如果在pk，对应pk的用户id
    optional string pkLiveId = 3; //如果在pk，被pk的用户的房间号
    optional int32 status = 4; //此房间的状态，0：正常，1：主播退到后台
    optional uint64 micuid = 5; //连麦的观众id,如果主播在和观众连麦，则有此字段，用于服务器校验
    optional int32 micuidStatus = 6; //连麦的观众的状态，0：正常，1：退到后台
}

message HeartBeatRsp {
    required uint32 retCode = 1; //0:表示成功
}

//pk开始
//zhibo.live.pkbegin
message PKBeginReq {
    required uint64 uuid = 1; //同意pk的用户id
    required uint64 pkuid = 2; //对应pk的用户id
    optional string pkLiveId = 3; //被pk的用户的房间号
    optional uint32 myPkInitTicket = 4; //自己的pk初始票值
    optional uint32 otherPkInitTicket = 5; //对方的pk初始票值
}

message PKBeginRsp {
    required uint32 retCode = 1; //0:表示成功
    optional uint32 myPkInitTicket = 2; //自己的pk初始票值
    optional uint32 otherPkInitTicket = 3; //对方的pk初始票值
}

//pk结束
//zhibo.live.pkend
message PKEndReq {
    required uint64 uuid = 1; //用户id
    required uint64 pkuid = 2; //对应pk的用户id
    optional string pkLiveId = 3; //被pk的用户的房间号
}

message PKEndRsp {
    required uint32 retCode = 1; //0:表示成功
}

//查询pk信息
//zhibo.live.getpkinfo
message GetPKInfoReq {
    required uint64 zuid = 1; //想查询的主播id
}

message GetPKInfoRsp {
    required uint32 retCode = 1; //0:表示成功
    optional PKInfo thisPKInfo = 2; //所在用户房间信息
    optional PKInfo otherPKInfo = 3; //对应pk的房间信息
}

//主播退到后台运行
//zhibo.live.zuidSleep
message ZuidSleepReq {
    required string liveId = 1; //流名或者是房间号
}

message ZuidSleepRsp {
    required uint32 retCode = 1; //0:表示成功
}

//主播回来
//zhibo.live.zuidActive
message ZuidActiveReq {
    required string liveId = 1; //流名或者是房间号
}

message ZuidActiveRsp {
    required uint32 retCode = 1; //0:表示成功
}

//管理员设置
//cmd:zhibo.live.adminsetting
message AdminSettingReq {
    required uint64 adminUid = 1;
    required uint32 operation = 2; //操作：1、添加 2、删除
    optional string liveId = 3; //房间ID
}
message AdminSettingRsp {
    required uint32 retCode = 1;
}
//管理员列表
//cmd:zhibo.live.adminlist
message AdminListReq {
    required string liveId = 1; //房间ID
}
message AdminListRsp {
    required uint32 retCode = 1;
    repeated UserInfo users = 2; //管理员信息
}

//禁言观众
//zhibo.live.banSpeaker
message SetBanSpeakerReq {
    required string liveId = 1; //房间号
    required uint64 zuid = 2; //主播id
    required uint64 uuid = 3; //操作人id
    repeated uint64 banSpeaker = 4; //被禁言的观众id
}

message SetBanSpeakerRsp {
    required uint32 retCode = 1; //0:表示成功 5001:房间不存在 5004:参数错误​ 5005:操作人无权限 5006:观众不存在
}

//取消禁言观众
//zhibo.live.cancelBanSpeaker
message CancelBanSpeakerReq {
    required string liveId = 1; //房间号
    required uint64 zuid = 2; //主播id
    repeated uint64 banSpeaker = 3; //被取消禁言的观众id
}

message CancelBanSpeakerRsp {
    required uint32 retCode = 1; //0:表示成功 5001:房间不存在 5004:参数错误​ 5005:操作人无权限 5006:观众不存在
}

//房间关键人员信息
//zhibo.live.getLiveKeyPersonInfo
message GetLiveKeyPersonInfoReq {
    required uint64 uuid = 1; //操作人id
    required uint64 zuid = 2; //直播人id
    required string liveId = 3; //房间号
}

message GetLiveKeyPersonInfoRsp {
    required uint32 retCode = 1; //0:表示成功
    repeated uint64 banSpeaker = 2; //禁言列表
}

//历史直播
//zhibo.live.history
message HistoryLiveReq {
    required uint64 uuid = 1; //操作人id
    required uint64 zuid = 2; //查看历史的直播人id
}

message HistoryLiveRsp {
    required uint32 retCode = 1; //0:表示成功
    repeated HisLive hisLive = 2; //回放详情
    optional uint32 type = 3; //类型，0公开，1私密, 2口令, 3门票
    optional TicketLiveStatus ticketStatus = 4; //用户观看门票直播状态信息
}

message ViewerInfoRsp {
    required uint32 retCode = 1; //0:表示成功
    optional uint32 viewerCnt = 2; //观众数
    repeated Viewer viewer = 3; //观众
    optional Location location = 4; //位置
    optional uint32 type = 5; //类型，0公开，1私密
    optional string shareUrl = 6; //分享的url
    repeated uint64 banSpeaker = 7; //禁言列表，
    repeated uint64 adminUuid = 8; //管理员列表
    optional uint64 timestamp = 9; //去观众信息的时间戳(毫秒)
}

//查询我的房间信息
//zhibo.live.myroom
message MyRoomReq {
    required uint64 uuid = 1; //操作人id
}

message MyRoomRsp {
    required uint32 retCode = 1; //0:表示成功
    optional string liveId = 2; //id＝System.currentTime/1000＋uuid
    optional string shareUrl = 3; //分享的url
    optional string upStreamUrl = 4; //完整的url
    optional uint32 type = 5; //类型，0公开，1私密
    optional string password = 6; //如果是加密类型，带出来密码，用户主播端展示
    optional uint32 appType = 7; //0:小米直播app，  1:无人机， 2:导播台
    optional MsgRule msgRule = 8; //房间的发消息的规则
    repeated uint64 invitee = 9; //被邀请的人
    optional string downStreamUrl = 10; //拉流地址
    optional LiveCover liveCover = 11; //房间的封面信息
    optional string udpUpstreamUrl = 12; //Udp推流地址
    repeated UpStreamUrl newUpStreamUrl = 13; //新的完整推流url
}

//查询用户是否在指定房间

//zhibo.live.isInRoom

message IsInRoomReq {

    required uint64 zuid = 1; //主播id

    required string liveId = 2; //房间id

    repeated uint64 viewerId = 3; //想查询的观众id列表，最多查询5个

}

message IsInRoomRsp {

    required uint32 retCode = 1; //0:表示成功

    repeated uint64 viewerId = 2; //在房间的观众id列表

}

//连麦嘉宾回到房间
//zhibo.live.micuidactive
message MicuidActiveReq {
    required string liveId = 1; //房间ID
    required uint64 micuid = 2; //嘉宾ID
    required uint64 zuid = 3; //主播ID
}

message MicuidActiveRsp {
    required uint32 retCode = 1; //0:表示成功
}

//连麦嘉宾退到后台运行
//zhibo.live.micuidsleep
message MicuidSleepReq {
    required string liveId = 1; //房间ID
    required uint64 micuid = 2; //嘉宾ID
    required uint64 zuid = 3; //主播ID
}

message MicuidSleepRsp {
    required uint32 retCode = 1; //0:表示成功
}

//更新房间内发言频率、是否重复
//zhibo.live.updatemsgrule
message UpdateMsgRuleReq {
    required uint64 zuid = 1; //主播ID
    required string liveId = 2; //房间ID
    required MsgRule msgRule = 3; //规则信息
}

message UpdateMsgRuleRsp {
    required uint32 retCode = 1; //0:表示成功
}

//私密房间添加邀请人
//zhibo.live.addinvitee
message RoomAddInviteeReq {
    required uint64 zuid = 1; //主播id
    required string liveId = 2; //直播id
    repeated uint64 invitee = 3; //邀请的用户id
}

message RoomAddInviteeRsp {
    required uint32 retCode = 1; //0:表示成功
}

//私密房间删除邀请人
//zhibo.live.deleteinvitee
message RoomDeleteInviteeReq {
    required uint64 zuid = 1; //主播id
    required string liveId = 2; //直播id
    repeated uint64 invitee = 3; //取消邀请的用户id
}

message RoomDeleteInviteeRsp {
    required uint32 retCode = 1; //0:表示成功
}

//房间内运营附加信息
//zhibo.room.attachment
message GetRoomAttachmentReq {
    required uint64 zuid = 1; // 主播id
    optional bool isGetWidget = 2; // 是否获取房间内小部件信息,运营位
    required string liveid = 3; //房间id
    optional bool isGetAnimation = 4; //是否获取房间动画特效
    optional bool isGetShopType = 5; //是否获取店铺类型
    optional uint32 roomType = 6; //房间类型，0公开，1私密，2:密码房间，口令
    optional bool isGetIconConfig = 7; //是否获取直播间icon配置
    optional bool isGetRoomExtraCtrl = 8;//是否获取控制信息,add by xumin
}

message GetRoomAttachmentRsp {
    required uint32 retCode = 1; //0:表示成功
    repeated WidgetInfo widgetInfo = 2; //房间内小部件信息,运营位
    optional RoomAnimationConfig animationConfig = 3; //房间动画特效配置
    optional ShoppingConfig shoppingConfig = 4; //店铺信息
    optional NewWidgetInfo newWidgetInfo = 5; //新版运营位信息
    optional RoomIconConfig iconConfig = 6; //直播间icon配置
    optional CtrlInfo ctrlInfo = 7;//控制信息,add by xumin
    optional LimitedInfo counter = 8;//飘屏计数,add by xumin
    optional LimitedInfo vipCounter = 9;//vip飘屏计数,add by xumin
    optional LimitedInfo guardCounter = 10;//guard飘屏计数,add by xumin
    optional SpeedyGiftConfig speedyGiftConfig = 11; //快捷送礼配置
}

message SpeedyGiftConfig {
    optional uint32 giftId = 1; //礼物ID
}

//主动拉取开关状态,请求包
message SmartBarrageCtrlPullRequest {
    required uint64 uuid = 1;//观众id
    optional uint64 zuid = 2;//主播id
    optional string room_id = 3;//房间id
    optional uint32 room_type = 4;//房间类型
}
//主动拉取开关状态,响应包
message SmartBarrageCtrlPullResponse {
    required uint32 ret = 1;
    optional string err_msg = 2;
    repeated RoomExtraCtrlMessage ctrl_msg = 3;
}
//开关信息
message CtrlInfo {
    optional bool room_switch_status = 1;//房间开关状态,false:关闭,true:打开
    optional bool global_switch_status = 2;//全局开关状态,false:关闭,true:打开
}
//飘屏计数
message LimitedInfo {
     optional uint32 counter = 1;//飘屏弹幕当前计数
     optional uint32 max = 2;//飘屏弹幕最大次数
 }
message RoomExtraCtrlMessage {
    required uint32 type_info = 1;//控制消息类型,1:智能弹幕开关；2:admin飘屏技术；3：vip飘屏计数；4：宠爱团飘屏计数
    optional bytes ctrl_info = 2;
}

//zhibo.room.getwidget
message GetRoomWidgetReq{
    required uint64 zuid = 1;//主播id
    required string liveid = 2;//房间id
    optional uint32 roomType = 3;//房间类型，0公开，1私密，2:密码房间，口令
}

message GetRoomWidgetRsp{
    required uint32 retCode = 1;//0:表示成功
    optional NewWidgetInfo newWidgetInfo =2;//运营位信息
    optional uint64 timestamp = 3; //单位：毫秒
    optional SpeedyGiftConfig speedyGiftConfig = 4; //快捷送礼配置
}

message WidgetClickReq {
    required uint32 widgetID = 1; //运营位ID
    optional uint64 zuid = 2; //主播ID
    optional string liveid = 3; //房间ID
}

message WidgetClickRsp {
    required uint32 retCode = 1; //0:表示成功
    optional string counterText = 2; //当前计数数值 计数文本,包含数字
    optional uint64 timestamp    = 3; //单位:毫秒
    optional uint32 giftId       = 4; //需要展示的礼物id
}

//获取直播标题列表
//zhibo.live.gettitlelist
message GetTitleListReq {
    optional uint64 uuid = 1;
    repeated uint32 source = 2; //0：摄像头 1：录屏 2：外设
}

message GetTitleListRsp {
    required uint32 retCode = 1;
    repeated TitleInfo title_info = 2;
}

message TitleInfo {
    optional uint32 source = 1;
    repeated string title_list = 2;
}

//观众端发起连麦资格校验
//zhibo.live.checkmicqualification
message CheckMicQualificationReq {
    required uint64 uuid      = 1; //用户id
    required string live_id   = 2; //房间号
    required uint64 zuid      = 3; //主播id
}

message CheckMicQualificationRsp {
    required uint32 ret_code  = 1; //0 代表成功
}