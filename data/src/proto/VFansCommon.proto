package com.wali.live.proto;

option java_package = "com.wali.live.proto";
option java_outer_classname = "VFansCommonProto";

//建群时群信息
message GroupBaseInfo {
    optional string group_name = 1; //群名称
    optional string group_intro = 2; //群简介，最好有大小限制
    optional string group_avatar = 3; //群头像
}

//群成员类型
enum GroupMemType {
    OWNER = 1; //群主
    ADMIN = 2; //管理员
    DEPUTY_ADMIN = 3; //副管理员
    MASS = 4; //群众
    NONE = 5; //非成员
    BLACK = 6; // 黑名单
}

//群信息 kv
message GroupInfo {
    required uint64 zuid = 1;
    optional string group_name = 2;
    optional uint64 create_time = 3; //unix时间戳 秒
    optional int32 charm_exp = 4;
    optional int32 next_charm_exp = 5;
    optional string charm_title = 6;
    optional uint32 current_member = 7; // 当前成员数量
    optional uint32 member_limit = 8; // 群成员数限制
    optional int32 rank = 9; // 团排名
    optional int32 level = 10;
    optional int32 today_exp = 11; // 当日新增魅力值，新的一天开始需要重新计算，并 把值存到每日魅力值榜
    optional uint64 update_ts = 12; //经验值最后修改时间
    repeated GroupAdminInfo admin_list = 13;
    repeated string medal_list = 14; // 勋章列表
    optional int32 lastday_exp = 15; // 前一天经验值
}

message GroupAdminInfo {
    required uint64 uuid = 1;
    required GroupMemType admin_type = 2;
}


message GroupMedalInfo {
    required int32 level = 1;
    optional string medal_value = 2;
}

//加入群的动机类型
enum JoinIntentionType {
    UNKNOWN = 0; //未知，如比处理超时
    ACTIVE = 1; //主动
    INVITE = 2; //受邀
}

//申请加群的处理结果
enum ApplyJoinResult {
    UNDO = 0; //未处理
    PASS = 1; //通过
    REFUSE = 2; //拒绝
    DONE = 3; //已处理
}

//群成员群信息
message GroupMemInfo {
    required uint64 uuid = 1; //用户id
    optional uint64 zuid = 2; // 创建者id
    optional GroupMemType mem_type = 3; //成员新类型
    optional uint64 join_time = 4; // 宠爱成员时间
    optional int32 pet_level = 5; // 宠爱等级
    optional int32 pet_exp = 6; // 宠爱值
    optional uint64 vip_expire = 7; // 会员过期时间 单位 秒
    optional int32 vip_level = 8; // vip 等级
    optional double coefficient = 9; // vip 系数
    optional int32 today_exp = 10; // 当天的经验值
    repeated GroupJobInfo job_list = 11; //所有行为的经验值集合，当天的第一条写请求会清楚上一天的所有行为经验值集合
    optional uint64 update_ts = 12; //经验值最后修改时间
    optional bool msg_notify = 13; //消息通知
    optional bool forbid_noise = 14; //禁言
    optional string medal_value = 15; // 宠爱等级对应的勋章

    // 15-21 信息可能不实时
    optional uint64 avatar = 16;
    optional string nickname = 17;
    optional uint32 gender = 18;
    optional uint32 certification_type = 19; //认证类型 ，1：新浪微博，2：官方账号，3：推荐认证，4：小米直播认证,   5: PGC认证， 6:电视台认证
    optional string certification_id = 20; //认证绑定信息，如身份证ID，护照，微博账号等
    optional uint64 update_user_ts = 21; // 更新用户信息时间戳

    optional bool use_medal = 22; // 是否佩戴勋章
    optional int32 lastday_exp = 23; // 前一天经验值
}

// 1003 获取单个宠爱团成员信息
message GetGroupMemInfoReq {
    required uint64 zuid = 1;
    required uint64 uuid = 2;
}
message GetGroupMemInfoRsp {
    required int32 err_code = 1;
    optional GroupMemInfo group_mem_info = 2;
}
//每种行为的经验值
message GroupJobInfo {
    optional int32 exp_sum = 1; //单个行为的经验值
    required GroupJobType job_type = 2;
    required GroupJobStatus job_status = 3 [default = INITIALIZE];
    optional string job_name = 4; //任务说明
    optional uint32 gift_val = 5; //礼物价值
}
enum GroupJobType {
    VIEW_LIVE = 1; // 观看直播
    SEND_GIFT = 2; // 送礼物
    SHARE_LIVE = 3; // 分享主播直播
    GROUP_CHAT = 4; // 宠爱群发言
    BUY_YEAR_VIP = 5; //包年守护
    JOB_TYPE_6 = 6;
    JOB_TYPE_7 = 7;
    JOB_TYPE_8 = 8;
    JOB_TYPE_9 = 9;
    JOB_TYPE_10 = 10;
    JOB_TYPE_11 = 11;
    JOB_TYPE_12 = 12;
    JOB_TYPE_13 = 13;
    JOB_TYPE_14 = 14;
    JOB_TYPE_15 = 15;
    JOB_TYPE_16 = 16;
    JOB_TYPE_17 = 17;
    JOB_TYPE_18 = 18;
    JOB_TYPE_19 = 19;
    JOB_TYPE_20 = 20;
    JOB_TYPE_21 = 21;
    JOB_TYPE_22 = 22;
    JOB_TYPE_23 = 23;
    JOB_TYPE_24 = 24;
    JOB_TYPE_25 = 25;
    JOB_TYPE_26 = 26;
    JOB_TYPE_27 = 27;
    JOB_TYPE_28 = 28;
    JOB_TYPE_29 = 29;
    JOB_TYPE_30 = 30;
    JOB_TYPE_31 = 31;
    JOB_TYPE_32 = 32;
    JOB_TYPE_33 = 33;
    JOB_TYPE_34 = 34;
    JOB_TYPE_35 = 35;
    JOB_TYPE_36 = 36;
    JOB_TYPE_37 = 37;
    JOB_TYPE_38 = 38;
    JOB_TYPE_39 = 39;
    JOB_TYPE_40 = 40;
    JOB_TYPE_41 = 41;
    JOB_TYPE_42 = 42;
    JOB_TYPE_43 = 43;
    JOB_TYPE_44 = 44;
    JOB_TYPE_45 = 45;
    JOB_TYPE_46 = 46;
    JOB_TYPE_47 = 47;
    JOB_TYPE_48 = 48;
    JOB_TYPE_49 = 49;
    JOB_TYPE_50 = 50;
    JOB_TYPE_51 = 51;
    JOB_TYPE_52 = 52;
    JOB_TYPE_53 = 53;
    JOB_TYPE_54 = 54;
    JOB_TYPE_55 = 55;
    JOB_TYPE_56 = 56;
    JOB_TYPE_57 = 57;
    JOB_TYPE_58 = 58;
    JOB_TYPE_59 = 59;
    JOB_TYPE_60 = 60;
    JOB_TYPE_61 = 61;
    JOB_TYPE_62 = 62;
    JOB_TYPE_63 = 63;
    JOB_TYPE_64 = 64;
    JOB_TYPE_65 = 65;
    JOB_TYPE_66 = 66;
    JOB_TYPE_67 = 67;
    JOB_TYPE_68 = 68;
    JOB_TYPE_69 = 69;
    JOB_TYPE_70 = 70;
    JOB_TYPE_71 = 71;
    JOB_TYPE_72 = 72;
    JOB_TYPE_73 = 73;
    JOB_TYPE_74 = 74;
    JOB_TYPE_75 = 75;
    JOB_TYPE_76 = 76;
    JOB_TYPE_77 = 77;
    JOB_TYPE_78 = 78;
    JOB_TYPE_79 = 79;
    JOB_TYPE_80 = 80;
    JOB_TYPE_81 = 81;
    JOB_TYPE_82 = 82;
    JOB_TYPE_83 = 83;
    JOB_TYPE_84 = 84;
    JOB_TYPE_85 = 85;
    JOB_TYPE_86 = 86;
    JOB_TYPE_87 = 87;
    JOB_TYPE_88 = 88;
    JOB_TYPE_89 = 89;
    JOB_TYPE_90 = 90;
    JOB_TYPE_91 = 91;
    JOB_TYPE_92 = 92;
    JOB_TYPE_93 = 93;
    JOB_TYPE_94 = 94;
    JOB_TYPE_95 = 95;
    JOB_TYPE_96 = 96;
    JOB_TYPE_97 = 97;
    JOB_TYPE_98 = 98;
    JOB_TYPE_99 = 99;
    JOB_TYPE_100 = 100;
}
message LimitedGroupJobInfo {
    optional int32 exp_val = 1; //经验值
    optional int32 max_finish_times = 2; //最大完成次数
    required GroupJobType job_type = 3; //任务类型
    optional string job_name = 4; //任务名称
    optional string job_info = 5; //任务说明
    required int32 finished_times = 6; //完成次数,初始化为0
    required GroupJobStatus job_status = 7 [default = INITIALIZE];
}
enum GroupJobStatus {
    INITIALIZE = 1; // 没完成
    AVAILABLE_COMPLETE = 2; // 可以完成
    COMPLETED = 3; // 已经完成
}

enum RankDateType {
    DAY_TYPE = 1;
    YESTERDAY_TYPE = 2;
    WEEK_TYPE = 3;
    TOTAL_TYPE = 10;
}

enum MemRankType {
    ORDER_BY_MEMTYPE = 1; // 根据团员类型
    ORDER_BY_EXP = 2; // 根据宠爱值排序
    ORDER_BY_JOINTIME = 3; // 根据加入时间
    ORDER_BY_EXP_ICON = 4; // 根据宠爱值排序 适用于宠爱团首页icon展示
}

// 群申请信息
message GroupMemApplyInfo {
    required uint64 uuid = 1; // 申请者
    optional uint64 admin_uid = 2; // 处理者
    optional ApplyJoinResult join_result = 3;
    optional string apply_msg = 4;
    optional GroupMemType mem_type = 5;
    optional JoinIntentionType join_type = 6;
    optional uint64 apply_time = 7;
}

// 群黑名单 hash
message GroupMemBlackInfo {
    required uint64 uuid = 1;
    optional uint64 admin_uid = 2;
}

message RecentJobInfo {
    required uint64 uuid = 1;
    optional string nickname = 2;
    optional GroupJobType job_type = 3;
    optional int32 job_exp = 4;
    optional uint64 morning_time = 5;
}

// 宠爱团最近任务
message GroupRecentJob {
    required uint64 zuid = 1;
    repeated RecentJobInfo job_list = 2;
}